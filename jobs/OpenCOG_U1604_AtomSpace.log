Started by user [8mha:////4L2jTPWu9zIb56dnp8RqVObesKKV2DVGI0jJXlam1DqAAAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAzWEgZu/dLi1CL9xJTczDwAj6GcLcAAAAA=[0madmin
Building in workspace /var/lib/jenkins/workspace/OpenCOG_U1604_AtomSpace
[OpenCOG_U1604_AtomSpace] $ /bin/sh -xe /tmp/jenkins4871707448959383510.sh
+ COGDIR=../OpenCOG_U1604
+ . ../OpenCOG_U1604/build.docker/docker.env
+ CID=b9fc85a0d6270c62836954be50a799456c6739292a6d057340cbefdf468e515a
+ DKRUNROOT=docker exec --user root   b9fc85a0d6270c62836954be50a799456c6739292a6d057340cbefdf468e515a
+ DKRUNUSER=docker exec --user jenkins  b9fc85a0d6270c62836954be50a799456c6739292a6d057340cbefdf468e515a
+ UID=125
+ GID=132
+ LOGFILE=/var/lib/jenkins/jobs/OpenCOG_U1604_AtomSpace/builds/423/log
+ cat


**********************************************************
**********************************************************
**********************************************************
**********************************************************
*****                                                *****
*****                  Atomspace TEST                *****
*****                                                *****
**********************************************************
**********************************************************
**********************************************************
**********************************************************


+ echo GIT_COMMIT=
GIT_COMMIT=
+ echo GIT_BRANCH=
GIT_BRANCH=
+ echo GIT_URL=
GIT_URL=
+ WDIR=atomspace
+ JOBDIR=../OpenCOG_U1604/dependencies
+ cat
+ chmod +x ../OpenCOG_U1604/dependencies/job1
+ docker exec --user jenkins b9fc85a0d6270c62836954be50a799456c6739292a6d057340cbefdf468e515a bash dependencies/job1
PWD is /home/opencog/atomspace/build
commit 4a7bb6d21fbd80c0e01cf32be513b8e08dcddbf3
Author: Linas Vepstas <linasvepstas@gmail.com>
Date:   Mon Jan 21 15:25:06 2019 -0600

    Spell-check all of the examples.

diff --git a/examples/pattern-matcher/absent.scm b/examples/pattern-matcher/absent.scm
index 69fc276..0c4c324 100644
--- a/examples/pattern-matcher/absent.scm
+++ b/examples/pattern-matcher/absent.scm
@@ -2,7 +2,7 @@
 ; absent.scm -- Demo illustrating use of AbsentLink, StateLink
 ;
 ; Repeatedly create and destroy an EvaluationLink. Then test to see if
-; the EvaluationLink is present in the atomspace. If it is, then set a
+; the EvaluationLink is present in the AtomSpace. If it is, then set a
 ; state atom that indicates whether it is present or not.
 ;
 ; The state is managed using the StateLink, which provides a device
@@ -15,7 +15,7 @@
 ; The presence or absence of an atom in the AtomSpace can be determined
 ; by using the AbsentLink. When evaluated by the pattern matcher, the
 ; AbsentLink evaluates to "true" only when the atom that it wraps is
-; absent from the atomspace.  This makes the AbsentLink a rather
+; absent from the AtomSpace.  This makes the AbsentLink a rather
 ; strange link type; roughly speaking, it can be thought of as
 ; implementing the concept of "reductio ad absurdum" (RAA) or the "law
 ; of the excluded middle" (LEM) for the AtomSpace.  The AtomSpace can
@@ -25,7 +25,7 @@
 ; logic, everything is assumed to be knowable, and that which is not
 ; true must be false; this is the law of the excluded middle. By
 ; contrast, the AtomSpace only contains those sentences known to be
-; either true or false (according to thier TruthValue); it implements
+; either true or false (according to their TruthValue); it implements
 ; a form in Intuitionist Logic.  The AbsentLink is used to determine
 ; those things that are not yet known.
 ;
@@ -36,15 +36,15 @@
 ; function will display the current state, when called.
 ;
 ; The room state is set by invoking two patterns: is-visible and
-; is-invisibile.  The first checks for the presence of the EvaluationLink
+; is-invisible.  The first checks for the presence of the EvaluationLink
 ; and, if found, sets the room state to full.  The second checks for it's
-; absense, and if it is absent, sets the state to "empty".
+; absence, and if it is absent, sets the state to "empty".
 ;
 ; The EvaluationLink is created and destroyed by running one of two
 ; patterns, `create` or `destroy`.  The first one uses a `golem`, an
 ; PutLink that will create the actual EvaluationLink when it is
 ; executed.  That is, the PutLink defines a potential link, one that
-; is not yet in the Atomspace, but whose description is. When it is
+; is not yet in the AtomSpace, but whose description is. When it is
 ; triggered, the description is turned into the actual link.
 ;
 (use-modules (opencog))
@@ -54,7 +54,7 @@
 ; presence or absence we will be testing for.
 (define query
 	(Evaluation
-		(Predicate "visiblity")
+		(Predicate "visibility")
 		(List (Variable "$x"))))
 
 ; Create a golem; the golem is brought to life when its executed.
@@ -67,7 +67,7 @@
 	(Bind query (DeleteLink query))
 )
 
-; If nothing is visible, then hallucinate the golem into existance.
+; If nothing is visible, then hallucinate the golem into existence.
 (define create
 	(Bind (Absent query) golem)
 )
@@ -89,7 +89,7 @@
 )
 
 ; This has an absent link in it; the link is assigned only when
-; the atomspace does not have a visible item.
+; the AtomSpace does not have a visible item.
 (define is-invisible
 	(Bind
 		(Absent query)
diff --git a/examples/pattern-matcher/choice.scm b/examples/pattern-matcher/choice.scm
index 5de6f0c..cb0ddc6 100644
--- a/examples/pattern-matcher/choice.scm
+++ b/examples/pattern-matcher/choice.scm
@@ -4,7 +4,7 @@
 ; A very simple example of using the ChoiceLink.
 ;
 
-; Populate the atomspace with some data
+; Populate the AtomSpace with some data
 (Evaluation
 	(Predicate "has-color")
 	(List
@@ -14,7 +14,7 @@
 (Evaluation
 	(Predicate "has-color")
 	(List
-		(Concept "bannana")
+		(Concept "banana")
 		(Concept "yellow")))
 
 (Evaluation
diff --git a/examples/pattern-matcher/condition.scm b/examples/pattern-matcher/condition.scm
index 46c164d..e436c30 100644
--- a/examples/pattern-matcher/condition.scm
+++ b/examples/pattern-matcher/condition.scm
@@ -1,8 +1,8 @@
 ;
-; condition.scm -- Applying preconditions to actins.
+; condition.scm -- Applying preconditions to actions.
 ;
 ; Demonstration of using GroundedPredicateNodes to accept
-; or rejct a match (impose a match condition) followed by the
+; or reject a match (impose a match condition) followed by the
 ; use of GroudnedSchemaNodes to perform some action, depending
 ; on whether or not the predicate accepted the match.
 ;
@@ -81,6 +81,6 @@
 	)
 )
 
-;; Performing the below should cause only the (ConcpetNode "acceptance")
+;; Performing the below should cause only the (ConceptNode "acceptance")
 ;; to be printed.
 ; (cog-execute! do-things)
diff --git a/examples/pattern-matcher/deduction-engine.scm b/examples/pattern-matcher/deduction-engine.scm
index 30290de..a0787ff 100644
--- a/examples/pattern-matcher/deduction-engine.scm
+++ b/examples/pattern-matcher/deduction-engine.scm
@@ -65,7 +65,7 @@
 			(VariableNode "$X"))))
 
 ;;; Same as above, but in imperative form. It uses the GetLink
-;;; to search the atomspace to find everything Tom likes, and then
+;;; to search the AtomSpace to find everything Tom likes, and then
 ;;; uses the PutLink to perform a beta-reduction, to plug in those
 ;;; answers into a template for the things that Bill likes.
 ;;; Note the use of two distinct variables; $X is bound to GetLink;
@@ -98,13 +98,13 @@
 ;;; The SatisfactionLink turns it into a question: the SatisfactionLink
 ;;; can evaluate to true or false, depending on what X is.
 ;;; Note that the SatisfactionLink is in the form of a lambda; that is,
-;;; it has the form  Lx.(Bill likes X)
+;;; it has the form  Î»X.(Bill likes X)
 ;;;
 ;;; Finally, we want to give the above a name, so that we can refer to it
 ;;; in other places. We use the DefineLink to do this. Given a lambda,
-;;; for example, Lx.(stuff) which is just an anonymous function taking x,
+;;; for example, Î»x.(stuff) which is just an anonymous function taking x,
 ;;; the DefineLink turns it into a named function: so that 
-;;;    Define name Lx.(stuff)
+;;;    Define name Î»x.(stuff)
 ;;; is the same as 
 ;;;    (name x).(stuff)
 ;;;
@@ -144,7 +144,7 @@
 ;; and converts them into GetPut imperatives.
 
 (define get-impl
-	;; Search for ImplicationScopeLinks, and disect them.
+	;; Search for ImplicationScopeLinks, and dissect them.
 	(GetLink
 		(VariableList
 			(TypedVariableLink (VariableNode "$fpred") (TypeNode "PredicateNode"))
@@ -197,7 +197,7 @@
 ;; Same as above, but using BindLink, so order is reversed.
 (define b-impl
 (BindLink
-	;; Search for ImplicationLinks, and disect them.
+	;; Search for ImplicationLinks, and dissect them.
 	(VariableList
 		(TypedVariableLink (VariableNode "$fpred") (TypeNode "PredicateNode"))
 		(TypedVariableLink (VariableNode "$tpred") (TypeNode "PredicateNode"))
diff --git a/examples/pattern-matcher/define.scm b/examples/pattern-matcher/define.scm
index 4e3f263..6829581 100644
--- a/examples/pattern-matcher/define.scm
+++ b/examples/pattern-matcher/define.scm
@@ -3,7 +3,7 @@
 ;
 (use-modules (opencog) (opencog query) (opencog exec))
 
-;; Some data to populate the atomspace.
+;; Some data to populate the AtomSpace.
 (Inheritance
 	(Concept "battery")
 	(Concept "electrical device"))
@@ -27,7 +27,7 @@
 (Evaluation
 	(Predicate "PartOf")
 	(List
-		(Concept "windsheild")
+		(Concept "windshield")
 		(Variable "car")))
 
 ;; Define the concept of electrical parts of things.
@@ -49,7 +49,7 @@
 (define get-elect
 	(Get (DefinedPredicate "Electrical Part Of")))
 
-;; Search the atomspace for electrical things.
+;; Search the AtomSpace for electrical things.
 (cog-execute! get-elect)
 
 ;; ==================================================================
diff --git a/examples/pattern-matcher/fsm-basic.scm b/examples/pattern-matcher/fsm-basic.scm
index cfa132a..491a7b6 100644
--- a/examples/pattern-matcher/fsm-basic.scm
+++ b/examples/pattern-matcher/fsm-basic.scm
@@ -22,15 +22,15 @@
 	(Concept "red")
 )
 
-;; The inital state of the FSM
+;; The initial state of the FSM
 (List
 	(Anchor "Current State")
 	(Concept "initial state")
 )
 
-;; The set of allowed state transistions.  Its a triangular cycle,
-;; of green goint to yellow going to red going back to green.
-;; The intial state transitions into green (and is never visted again).
+;; The set of allowed state transitions.  Its a triangular cycle,
+;; of green going to yellow going to red going back to green.
+;; The initial state transitions into green (and is never visited again).
 (List
 	(Concept "initial state")
 	(Concept "green")
@@ -84,7 +84,7 @@
 			)
 		)
 		(And
-			;; ... then transistion to the next state ...
+			;; ... then transition to the next state ...
 			(List
 				(Anchor "Current State")
 				(Variable "$next-state")
@@ -104,7 +104,7 @@
 ;(cog-bind-single take-one-step)
 ;
 ;;; Take three more steps;
-;;; Try it!  See what appens!
+;;; Try it!  See what happens!
 ;(cog-bind-single take-one-step)
 ;(cog-bind-single take-one-step)
 ;(cog-bind-single take-one-step)
diff --git a/examples/pattern-matcher/fsm-full.scm b/examples/pattern-matcher/fsm-full.scm
index c57f699..a661d1d 100644
--- a/examples/pattern-matcher/fsm-full.scm
+++ b/examples/pattern-matcher/fsm-full.scm
@@ -3,13 +3,13 @@
 ;
 ; Based on `fsm-basic.scm`, this defines a very simple four-state finite
 ; state machine, but illustrates the general (universal) FSM state
-; machine constructor.  This allows mutlple FSM's to be simultaneously
+; machine constructor.  This allows multiple FSM's to be simultaneously
 ; defined and operated asynchronously from each-other.
 ;
 (use-modules (opencog) (opencog query))
 
 ;; Set of possible states of the state machine
-;; This defintion of the set of states is not strictly needed; it is
+;; This definition of the set of states is not strictly needed; it is
 ;; not used anywhere in the demo below.
 (SetLink
 	(ConceptNode "initial state")
@@ -21,18 +21,18 @@
 (define my-trans (Concept "My FSM's Transition Rule"))
 (define my-state (Anchor  "My FSM's Current State"))
 
-;; The inital state of the FSM
+;; The initial state of the FSM
 (List
 	my-state
 	(Concept "initial state")
 )
 
-;; The set of allowed state transistions.  Its a triangular cycle,
-;; of green goint to yellow going to red going back to green.
-;; The intial state transitions into green (and is never visted again).
+;; The set of allowed state transitions.  Its a triangular cycle,
+;; of green going to yellow going to red going back to green.
+;; The initial state transitions into green (and is never visited again).
 ;;
 ;; Each rule is labelled with the "my-trans", so that rules for
-;; different FSM's do not clash with one-another.  A ConextLink is used
+;; different FSM's do not clash with one-another.  A ContextLink is used
 ;; because that will allow this example to generalize: Context's are
 ;; usually used to  express conditional probabilities, so that 
 ;;
@@ -40,9 +40,9 @@
 ;;         A
 ;;         B
 ;;
-;; representes the probibility of B contiditoned on A, and the TV holds
+;; represents the probability of B conditioned on A, and the TV holds
 ;; the numeric value for P(B|A).  In this case, A is the current state
-;; of the machine, and B the the next state of theh machine, so that P(B|A)
+;; of the machine, and B the the next state of the machine, so that P(B|A)
 ;; is the probability of transitioning to state B give that the machine is
 ;; in state A.  Such a system is called a Markov Chain.
 ;; 
@@ -88,7 +88,7 @@
 ;;;
 ;;; Create a BindLink that can take an FSM with the name `fsm-name`
 ;;; and stores it's state in `fsm-state`.  After the BindLink is
-;;; created, each invocation of it will advance the FSM bu one step.
+;;; created, each invocation of it will advance the FSM but one step.
 ;;;
 (define (create-fsm fsm-name fsm-state)
 	(Bind
@@ -113,7 +113,7 @@
 			)
 		)
 		(And
-			;; ... then transistion to the next state ...
+			;; ... then transition to the next state ...
 			(List
 				fsm-state
 				(Variable "$next-state")
diff --git a/examples/pattern-matcher/fsm-mealy.scm b/examples/pattern-matcher/fsm-mealy.scm
index 5435bae..83c38a8 100644
--- a/examples/pattern-matcher/fsm-mealy.scm
+++ b/examples/pattern-matcher/fsm-mealy.scm
@@ -1,7 +1,7 @@
 ;
 ; fsm-mealy.scm -- Mealy Finite State Machine (FSM) Demo.
 ;
-; Based on fsm-full.scm, this alters the general FSM defintion to
+; Based on fsm-full.scm, this alters the general FSM definition to
 ; include a dependency on the external state.
 ;
 ; To run this demo, load this file:
@@ -32,13 +32,13 @@
 (define go-reverse (Concept "reverse"))
 (define halt (Concept "halt"))
 
-;; The inital state of the FSM
+;; The initial state of the FSM
 (List my-state halt-state)
 
-;; The current envoronment
+;; The current environment
 (Evaluation extern-anchor halt)
 
-;; The set of allowed state transistions.  The transitions depend on
+;; The set of allowed state transitions.  The transitions depend on
 ;; both the current state, and the external state; thus, this is
 ;; effectively a Mealy machine.
 ;;
@@ -88,7 +88,7 @@
 ;;;
 ;;; Create a BindLink that can take an FSM with the name `fsm-name`
 ;;; and stores it's state in `fsm-state`.  After the BindLink is
-;;; created, each invocation of it will advance the FSM bu one step.
+;;; created, each invocation of it will advance the FSM but one step.
 ;;;
 (define (create-fsm fsm-name fsm-state extern-state)
 	(BindLink
@@ -129,7 +129,7 @@
 					(Variable "$curr-state")
 				)
 			)
-			;; ... and transistion to the next state.
+			;; ... and transition to the next state.
 			(List
 				fsm-state
 				(Variable "$next-state")
diff --git a/examples/pattern-matcher/glob.scm b/examples/pattern-matcher/glob.scm
index 773fdf5..5a44c9d 100644
--- a/examples/pattern-matcher/glob.scm
+++ b/examples/pattern-matcher/glob.scm
@@ -10,14 +10,14 @@
 ;
 ; To be precise: Globs are like regex + (1 or more in a sequence) and
 ; not regex * (zero or more in sequence).  A GlobNode has to match at
-; least one atom. At this time, there is no atomese equivalent to 
+; least one atom. At this time, there is no Atomese equivalent to
 ; regex ? (zero or one matches) nor to the * (zero or more matches).
 ; This may change; ask on the mailing list or open a github feature
 ; request.
 
 (use-modules (opencog) (opencog exec))
 
-;;; Populate the atomspace with some "sentences".
+;;; Populate the AtomSpace with some "sentences".
 (ListLink
 	(Concept "I")
 	(Concept "love")
@@ -83,7 +83,7 @@
 			(Concept "also"))))
 
 
-;;; Populate the atomspace with some more "sentences".
+;;; Populate the AtomSpace with some more "sentences".
 (ListLink (Concept "I") (Concept "love") (Number 42))
 
 ; This will find the match (Number 42); it will NOT match (Concept "you")
@@ -136,7 +136,7 @@
 ; -----------------------------------------------------------------
 ; Slightly more complicated
 
-; Populate the atomspace for the next test case
+; Populate the AtomSpace for the next test case
 (ListLink
     (Concept "I")
     (Concept "need")
diff --git a/examples/pattern-matcher/gpn.scm b/examples/pattern-matcher/gpn.scm
index bf36df0..59beecb 100644
--- a/examples/pattern-matcher/gpn.scm
+++ b/examples/pattern-matcher/gpn.scm
@@ -40,8 +40,8 @@
 ; Try it!  run the following a few times:
 ; (cog-evaluate! sometimes)
 
-; The pattern-matching requires some data in the atomspace to match
-; against. So populate the atomspace with some data.
+; The pattern-matching requires some data in the AtomSpace to match
+; against. So populate the AtomSpace with some data.
 (Evaluation
 	(Predicate "is-a")
 	(List (Concept "Aristotle") (Concept "logician")))
@@ -50,16 +50,16 @@
 	(Predicate "is-a")
 	(List (Concept "CS Pierce") (Concept "logician")))
 
-;; The followig pattern will search for all logicians in the AtomSpace,
+;; The following pattern will search for all logicians in the AtomSpace,
 ;; and then will randomly select some of them, with a 50-50 chance each
-;; time. The propsoed grounding, made in the first clause of the
+;; time. The proposed grounding, made in the first clause of the
 ;; pattern, is randomly approved of or rejected by the second clause.
 (define find-logicians
 	(Bind
 		; Define the variable to be grounded
 		(Variable "$person")
 
-		; Define a list of two clauses, both of which must be satsified
+		; Define a list of two clauses, both of which must be satisfied
 		(And
 			; The first clause: find a grounding for the variable, such
 			; that the variable is grounded by the name of a logician.
@@ -67,7 +67,7 @@
 				(Predicate "is-a")
 				(List (Variable "$person") (Concept "logician")))
 
-			; The second clause: the propsed grounding, from above,
+			; The second clause: the proposed grounding, from above,
 			; is randomly accepted or rejected.  Several of these can be
 			; combined using AndLink, OrLink and NotLink.
 			(Evaluation
diff --git a/examples/pattern-matcher/gsn-truth.scm b/examples/pattern-matcher/gsn-truth.scm
index 8387155..f610da8 100644
--- a/examples/pattern-matcher/gsn-truth.scm
+++ b/examples/pattern-matcher/gsn-truth.scm
@@ -1,7 +1,7 @@
 ;
 ; gsn-truth.scm -- Altering TruthValues with GroundedSchemaNode
 ;
-; One of the most basic useages of the GroundedSchemaNode is to
+; One of the most basic usages of the GroundedSchemaNode is to
 ; recompute the TruthValue on an atom, once its been found.
 ;
 (use-modules (opencog) (opencog query))
@@ -61,7 +61,7 @@
 	atom2	; return atom hb
 )
 
-; Some data to populate the atomspace:
+; Some data to populate the AtomSpace:
 (InheritanceLink (stv 1 0.99)	; a non-zero truth value is needed!
 	(Concept "Ben")
 	(Concept "human"))
diff --git a/examples/pattern-matcher/gsn.scm b/examples/pattern-matcher/gsn.scm
index 12bca99..fec0a88 100644
--- a/examples/pattern-matcher/gsn.scm
+++ b/examples/pattern-matcher/gsn.scm
@@ -4,7 +4,7 @@
 ; After a pattern-match has been found, arbitrary code can be
 ; triggered to run.  This demo shows how.
 ;
-; Running arbitary functions upon match can be useful for any number
+; Running arbitrary functions upon match can be useful for any number
 ; of reasons:  to send a message whenever a match is found; to perform
 ; some particularly complex or odious computation, and so on.
 
@@ -42,7 +42,7 @@
 ;; pattern matcher. They can be used to invoke a function every time
 ;; that a match is found.
 ;;
-;; To demonstrate this, we need to populate the atomspace with some data.
+;; To demonstrate this, we need to populate the AtomSpace with some data.
 ;; In this case, some assertions about who is human.
 (Evaluation
 	(Predicate "is-a")
@@ -65,7 +65,7 @@
 			(Predicate "is-a")
 			(List (Variable "$person") (Concept "human")))
 
-		;; The proceedure to invoke when a grounding is found.
+		;; The procedure to invoke when a grounding is found.
 		(ExecutionOutput
 			(GroundedSchema "scm: say-hello")
 			(List (Variable "$person")))))
diff --git a/examples/pattern-matcher/map.scm b/examples/pattern-matcher/map.scm
index 6c1fde2..9a53222 100644
--- a/examples/pattern-matcher/map.scm
+++ b/examples/pattern-matcher/map.scm
@@ -2,11 +2,11 @@
 ; map.scm -- Using MapLink to extract and rewrite.
 ;
 ; The MapLink implements a link type analogous to the `map` function
-; commmonly found in functional programming languages, such as the
+; commonly found in functional programming languages, such as the
 ; scheme srfi-1 `map`, or `map` in haskell.
 ;
 ; In many ways, MapLink is similar to BindLink, except that MapLink
-; does not search the entire atomspace for matching patterns; rather,
+; does not search the entire AtomSpace for matching patterns; rather,
 ; it only examines the given input list/set, and applies the map to
 ; that.
 ;
@@ -227,7 +227,7 @@
 ; First, the outermost link is a SetLink; this corresponds to the fact
 ; that the input to the map was a SetLink. Next, we observe a single
 ; element in the set, because only one element of the input matched.
-; That single elt then specifies the values for the two variables.
+; That single element then specifies the values for the two variables.
 ; The variable values are ordered, in a ListLink, because we need to
 ; know which value corresponded to $x and which to $y (the first and
 ; the second, of course).  Without the ListLink, we would not know which
@@ -235,8 +235,8 @@
 ;
 (cog-execute! double-num-set)
 
-; Same as above, except the variables are type differently, and soe we
-; expect two answers, not one.
+; Same as above, except the variables are typed differently, and
+; sometimes, we expect two answers, not one.
 (define double-con-set
 	(Map
 		(Scope
@@ -279,7 +279,7 @@
 ; link is in the form of P(x,y)->Q(x,y) and inputs P(a,b) are
 ; re-written to Q(a,b).
 ;
-; Observe that the re-writing could also be acheived by combining
+; Observe that the re-writing could also be achieved by combining
 ; the results of the MapLink with a PutLink.  The form below is
 ; slightly less verbose, and thus, maybe more convenient than
 ; using Map and Put together.
@@ -351,6 +351,6 @@
 		))
 )
 
-; This example is curently broken, because lazy evaluation does not
+; This example is currently broken, because lazy evaluation does not
 ; work!
 (cog-execute! summation)
diff --git a/examples/pattern-matcher/markov-chain.scm b/examples/pattern-matcher/markov-chain.scm
index 3f6f970..68d925b 100644
--- a/examples/pattern-matcher/markov-chain.scm
+++ b/examples/pattern-matcher/markov-chain.scm
@@ -3,11 +3,11 @@
 ;
 ; Based on `fsm-full.scm`, this defines a very simple four-state Markov
 ; chain, using the same states as the demo FSM's. The difference here is
-; that the transitions are specified probabilistically; mutiple
+; that the transitions are specified probabilistically; multiple
 ; transitions may occur; each transition has a fixed probability.
 ;
 ; Another way to look at this is an example of matrix multiplication.
-; The state of a Markov chain is a vector, and the state transtions
+; The state of a Markov chain is a vector, and the state transitions
 ; can be understood as a matrix (a Markov matrix, where the columns
 ; sum to one).  One iteration of the probabilistic state machine
 ; corresponds to one matrix multiplication.
@@ -31,7 +31,7 @@
 (define my-state (Anchor "My Chain's Current State"))
 (define my-nexts (Anchor "My Chain's Next State"))
 
-;; The inital state of the Markov chain.  It starts with 100%
+;; The initial state of the Markov chain.  It starts with 100%
 ;; probability in this state.
 ( (stv 1 1)
 	my-state
@@ -51,12 +51,12 @@
 )
 
 ;; --------------------------------------------------------------------
-;; The set of allowed state transistions.  Its a triangular cycle,
-;; of green goint to yellow going to red going back to green.
-;; The intial state transitions into green (and is never visted again).
+;; The set of allowed state transitions.  Its a triangular cycle,
+;; of green going to yellow going to red going back to green.
+;; The initial state transitions into green (and is never visited again).
 ;;
 ;; Each rule is labelled with the "my-fsm", so that rules for
-;; different FSM's do not clash with one-another.  A ConextLink is used
+;; different FSM's do not clash with one-another.  A ContextLink is used
 ;; because that will allow this example to generalize: Context's are
 ;; usually used to  express conditional probabilities, so that
 ;;
@@ -64,14 +64,14 @@
 ;;         A
 ;;         B
 ;;
-;; representes the probibility of B contiditoned on A, and the TV holds
+;; represents the probability of B conditioned on A, and the TV holds
 ;; the numeric value for P(B|A).  In this case, A is the current state
-;; of the machine, and B the the next state of theh machine, so that P(B|A)
+;; of the machine, and B the the next state of the machine, so that P(B|A)
 ;; is the probability of transitioning to state B give that the machine is
 ;; in state A.  Such a system is called a Markov Chain.
 ;;
 
-; Transition from initial to green with 90% proability.
+; Transition from initial to green with 90% probability.
 (ContextLink (stv 0.9 1)
 	(Concept "initial state")
 	(
diff --git a/examples/pattern-matcher/presence.scm b/examples/pattern-matcher/presence.scm
index 4e7aa9b..e72ea14 100644
--- a/examples/pattern-matcher/presence.scm
+++ b/examples/pattern-matcher/presence.scm
@@ -1,13 +1,13 @@
 ;;
 ;; presence.scm -- Testing for the presence of an Atom.
 ;;
-;; Four different ways to check for the existance of some structure
-;; in the atomspace.
+;; Four different ways to check for the existence of some structure
+;; in the AtomSpace.
 ;;
-;; Each variant checks to see if the atomspace contains the link
+;; Each variant checks to see if the AtomSpace contains the link
 ;;    (ListLink (AnchorNode "Room State") (ConceptNode "room empty"))
 ;;
-;; If the atomspace does contain the above, then the print-msg function
+;; If the AtomSpace does contain the above, then the print-msg function
 ;; is run. Each different method has its strengths and weaknesses.
 ;; Several of the methods are good for designing behavior trees that
 ;; run inside the AtomSpace.  Others fit the more traditional query
@@ -48,9 +48,9 @@
 ;; uses the SequentialAndLink, it is in a form appropriate for creating
 ;; a behavior tree.
 ;;
-;; Note that there may be other atoms linked to the Anchore;
+;; Note that there may be other atoms linked to the Anchor;
 ;; it there are, then those other atoms are ignored. This may be
-;; an davantage or a disadvantage; the next axample demands that
+;; an advantage or a disadvantage; the next example demands that
 ;; there be only one atom linked to the Anchor.
 ;;
 (define empty-sequence
@@ -62,7 +62,7 @@
 			;; processing continues to the next statement ONLY if true
 			;; is returned by the PresentLink.
 			(Present (List room-state (Variable "$x")))
-			;; If the variable $x equals the emtpry state, then ...
+			;; If the variable $x equals the empty state, then ...
 			(Equal (Variable "$x") room-empty)
 			;; ... then print a message.
 			(Evaluation
@@ -86,7 +86,7 @@
 ;;
 ;; Unlike the previous example, this one will explicitly fail if there
 ;; are other atoms linked to the Anchor.  That is, the equality
-;; check is makeing sure that the SetLink has one and only one element
+;; check is making sure that the SetLink has one and only one element
 ;; in it, which effectively blocks other anchored atoms.  This may be
 ;; an advantage, or a disadvantage, depending on the situation.
 
@@ -110,7 +110,7 @@
 
 ; ------------------------------------------------------
 ;; This variant uses the traditional BindLink format to trigger
-;; the execuation of a schema.  It is similar to the first example,
+;; the execution of a schema.  It is similar to the first example,
 ;; except for these notable differences:
 ;;
 ;; -- The BindLink does not use SequentialAnd, and thus any embedded
@@ -127,7 +127,7 @@
 		(And
 			;; Assign the room-state to variable $x
 			(List room-state (Variable "$x"))
-			;; If the variable $x equals the emtpry state, then ...
+			;; If the variable $x equals the empty state, then ...
 			(Equal (Variable "$x") room-empty)
 		)
 		;; If the EqualLink evaluated to TRUE, then print the message.
diff --git a/examples/pattern-matcher/recognizer.scm b/examples/pattern-matcher/recognizer.scm
index a638d9a..881fab0 100644
--- a/examples/pattern-matcher/recognizer.scm
+++ b/examples/pattern-matcher/recognizer.scm
@@ -1,5 +1,5 @@
 ;
-; recognizer.scm -- patten recognition
+; recognizer.scm -- pattern recognition
 ;
 ; Pattern recognition is dual to pattern matching!
 ; AKA the "dynamic Rete algorithm".
@@ -16,7 +16,7 @@
 ; OpenCog and the AtomSpace do NOT (explicitly) implement Tries or Rete!
 ; However, the general (hyper-)graph structure of OpenCog Atoms already
 ; contains enough connectivity information to accomplish more or less
-; the same thing: a kind-of "dynamic Rete", where rulesets can be
+; the same thing: a kind-of "dynamic Rete", where rule-sets can be
 ; searched for, on-demand, at runtime.
 ;
 ; The core idea is that pattern recognition is dual to pattern matching.
@@ -37,7 +37,7 @@
 ; The example below is based on an AIML-like search, simply because
 ; this is easy to explain and demonstrate. Note that all AIML chatbots
 ; maintain a Trie of AIML rules, and so AIML is a "natural" example of
-; pattern recognition.  The atomese DualLink is, however, a general
+; pattern recognition.  The Atomese DualLink is, however, a general
 ; pattern recognizer: it can be used in a general setting, not just
 ; for AIML-like structures.
 ;
@@ -185,7 +185,7 @@
 ; ------------------
 ; The below takes the above rule generator, and turns it into a
 ; bona-fide rule recognizer.  It does this by running the DualLink to
-; find the antencedents, and then using a PutLink to plug these into
+; find the antecedents, and then using a PutLink to plug these into
 ; the rule generator.
 
 (define (get-untyped-rules DATA)
@@ -239,11 +239,11 @@
 (map cog-execute! ruleset)
 
 ; When the above code is executed, you will get back a bunch of
-; sentences: that's because the atomspace already contains a bunch of
+; sentences: that's because the AtomSpace already contains a bunch of
 ; sentences in it, and the rule-set will find ALL of them, and get
 ; applied to all of them.  To avoid this behavior, you need to tag
 ; the one sentence you are interested in in some way,  e.g. by using
-; a link to connect it to `(AnchorNode "the current sentnece")` and
+; a link to connect it to `(AnchorNode "the current sentence")` and
 ; then including the AnchorNode in each AIML rule.
 ;
 ;-------------------------------------------------------
@@ -444,7 +444,7 @@
 		(map make-sent
 			(cog-outgoing-set (car (get-aiml-response SENT)))))
 
-	; Now, actually do stuff.  Push and pop the atomspace, to avoid
+	; Now, actually do stuff.  Push and pop the AtomSpace, to avoid
 	; polluting it with sentences.  The push and pop here is a hack;
 	; a more elegant solution is to use anchors to point at the
 	; current sentence, and have the rules look for it there.
diff --git a/examples/pattern-matcher/satisfaction.scm b/examples/pattern-matcher/satisfaction.scm
index 8873a35..43fa9dc 100644
--- a/examples/pattern-matcher/satisfaction.scm
+++ b/examples/pattern-matcher/satisfaction.scm
@@ -3,7 +3,7 @@
 ;
 ; SatisfactionLink usage example.
 ;
-; Using the SatisfacionLink is fairly straightforward; what this
+; Using the SatisfactionLink is fairly straightforward; what this
 ; example shows is how to obtain the variable grounding that caused
 ; the satisfaction to be fulfilled.
 ;
diff --git a/examples/pattern-matcher/type-signature.scm b/examples/pattern-matcher/type-signature.scm
index 57162a6..fa5b3d8 100644
--- a/examples/pattern-matcher/type-signature.scm
+++ b/examples/pattern-matcher/type-signature.scm
@@ -3,7 +3,7 @@
 ;
 ; A demonstration of using type signatures during pattern matching.
 ; Type signatures are a way of specifying the type of a hypergraph.
-; This can be used to restrict the search space during a pattrn
+; This can be used to restrict the search space during a pattern
 ; match: by default, types are checked during a search, and variable
 ; groundings must respect the variable type.
 ;
diff --git a/examples/pattern-matcher/virtual.scm b/examples/pattern-matcher/virtual.scm
index 6e7cb81..20deed0 100644
--- a/examples/pattern-matcher/virtual.scm
+++ b/examples/pattern-matcher/virtual.scm
@@ -19,8 +19,8 @@
 ; such that $y < $x (the city is larger than the country)
 ;
 ; In the above, one graph component is the set of assertions about
-; cities and thier population. The other graph component is the set of
-; assertions about countries and thier populations.  These two sets
+; cities and their population. The other graph component is the set of
+; assertions about countries and their populations.  These two sets
 ; must then be pair-wise compared.
 ;
 ; There are similar queries which do not split into disconnected
@@ -119,6 +119,6 @@ cnt
 ; Display the count.
 cnt
 ; The above should display 6 = 2 x 3 as there are two countries to be
-; compared to three cities.  The comparisons muct be down pair-wise,
+; compared to three cities.  The comparisons must be down pair-wise,
 ; resulting in a combinatoric explosion in the number of comparisons to
 ; be performed.
[  0%] Built target opencog_atom_types
[  1%] Built target persist-pg
[  1%] Built target py_atomspace_header
[  1%] Built target atom_types
[  3%] Built target value
[  4%] Built target truthvalue
[  6%] Built target atombase
[  7%] Built target atomutils
[ 11%] Built target atomcore
[ 14%] Built target clearbox
[ 14%] Built target atomspace
[ 14%] Generating VariablesUTest.cpp
[ 14%] Generating BetaReduceUTest.cpp
[ 14%] Generating DefineLinkUTest.cpp
[ 15%] Built target atomspaceutils
[ 16%] Built target lambda
[ 17%] Built target type_constructors
[ 17%] Built target sql-support
[ 17%] Generating RemoveUTest.cpp
[ 17%] Generating ThreadSafeHandleMapUTest.cpp
[ 17%] Generating MultiSpaceUTest.cpp
[ 18%] Generating NodeUTest.cpp
[ 18%] Generating AtomUTest.cpp
Scanning dependencies of target BetaReduceUTest
Scanning dependencies of target DefineLinkUTest
Scanning dependencies of target VariablesUTest
[ 18%] Building CXX object tests/atoms/CMakeFiles/BetaReduceUTest.dir/BetaReduceUTest.cpp.o
[ 18%] Building CXX object tests/atoms/CMakeFiles/VariablesUTest.dir/VariablesUTest.cpp.o
Scanning dependencies of target RemoveUTest
[ 20%] Building CXX object tests/atoms/CMakeFiles/DefineLinkUTest.dir/DefineLinkUTest.cpp.o
Scanning dependencies of target MultiSpaceUTest
Scanning dependencies of target NodeUTest
Scanning dependencies of target ThreadSafeHandleMapUTest
Scanning dependencies of target AtomUTest
[ 21%] Building CXX object tests/atomspace/CMakeFiles/RemoveUTest.dir/RemoveUTest.cpp.o
[ 21%] Building CXX object tests/atomspace/CMakeFiles/MultiSpaceUTest.dir/MultiSpaceUTest.cpp.o
[ 21%] Building CXX object tests/atomspace/CMakeFiles/NodeUTest.dir/NodeUTest.cpp.o
[ 21%] Building CXX object tests/atomspace/CMakeFiles/ThreadSafeHandleMapUTest.dir/ThreadSafeHandleMapUTest.cpp.o
[ 21%] Building CXX object tests/atomspace/CMakeFiles/AtomUTest.dir/AtomUTest.cpp.o
[ 21%] Linking CXX executable NodeUTest
[ 21%] Built target NodeUTest
[ 21%] Generating UseCountUTest.cpp
Scanning dependencies of target UseCountUTest
[ 21%] Building CXX object tests/atomspace/CMakeFiles/UseCountUTest.dir/UseCountUTest.cpp.o
[ 21%] Linking CXX executable DefineLinkUTest
[ 21%] Built target DefineLinkUTest
[ 21%] Linking CXX executable AtomUTest
[ 22%] Generating COWSpaceUTest.cpp
Scanning dependencies of target COWSpaceUTest
[ 22%] Building CXX object tests/atomspace/CMakeFiles/COWSpaceUTest.dir/COWSpaceUTest.cpp.o
[ 22%] Linking CXX executable VariablesUTest
[ 22%] Built target AtomUTest
[ 23%] Generating AtomSpaceAsyncUTest.cpp
Scanning dependencies of target AtomSpaceAsyncUTest
[ 23%] Building CXX object tests/atomspace/CMakeFiles/AtomSpaceAsyncUTest.dir/AtomSpaceAsyncUTest.cpp.o
[ 23%] Linking CXX executable BetaReduceUTest
[ 23%] Built target VariablesUTest
[ 24%] Linking CXX executable ThreadSafeHandleMapUTest
[ 24%] Generating ClassServerUTest.cpp
Scanning dependencies of target ClassServerUTest
[ 25%] Building CXX object tests/atomspace/CMakeFiles/ClassServerUTest.dir/ClassServerUTest.cpp.o
[ 25%] Built target BetaReduceUTest
[ 25%] Generating LinkUTest.cpp
[ 25%] Built target ThreadSafeHandleMapUTest
[ 25%] Generating TLBUTest.cpp
Scanning dependencies of target LinkUTest
Scanning dependencies of target TLBUTest
[ 25%] Building CXX object tests/atomspace/CMakeFiles/LinkUTest.dir/LinkUTest.cpp.o
[ 25%] Building CXX object tests/atomspace/CMakeFiles/TLBUTest.dir/TLBUTest.cpp.o
[ 25%] Linking CXX executable RemoveUTest
[ 26%] Linking CXX executable MultiSpaceUTest
[ 26%] Built target RemoveUTest
[ 26%] Generating AtomSpaceUTest.cpp
Scanning dependencies of target AtomSpaceUTest
[ 26%] Building CXX object tests/atomspace/CMakeFiles/AtomSpaceUTest.dir/AtomSpaceUTest.cpp.o
[ 26%] Built target MultiSpaceUTest
[ 26%] Generating HashMixUTest.cpp
Scanning dependencies of target HashMixUTest
[ 27%] Building CXX object tests/atomspace/CMakeFiles/HashMixUTest.dir/HashMixUTest.cpp.o
[ 27%] Linking CXX executable ClassServerUTest
[ 27%] Built target ClassServerUTest
[ 28%] Generating AtomSpaceUtilsUTest.cpp
Scanning dependencies of target AtomSpaceUtilsUTest
[ 28%] Building CXX object tests/atomspaceutils/CMakeFiles/AtomSpaceUtilsUTest.dir/AtomSpaceUtilsUTest.cpp.o
[ 29%] Linking CXX executable UseCountUTest
[ 29%] Built target UseCountUTest
[ 32%] Built target smob
[ 32%] Built target unify
[ 32%] Generating AtomTableUTest.cpp
Scanning dependencies of target AtomTableUTest
[ 32%] Building CXX object tests/atomspace/CMakeFiles/AtomTableUTest.dir/AtomTableUTest.cpp.o
[ 32%] Linking CXX executable TLBUTest
[ 32%] Linking CXX executable COWSpaceUTest
[ 33%] Linking CXX executable LinkUTest
[ 33%] Built target TLBUTest
[ 33%] Generating RewriteLinkUTest.cpp
[ 33%] Built target COWSpaceUTest
[ 33%] Generating FreeLinkUTest.cpp
Scanning dependencies of target RewriteLinkUTest
[ 33%] Building CXX object tests/atoms/CMakeFiles/RewriteLinkUTest.dir/RewriteLinkUTest.cpp.o
[ 33%] Built target LinkUTest
[ 33%] Generating HashUTest.cpp
Scanning dependencies of target FreeLinkUTest
[ 34%] Building CXX object tests/atoms/CMakeFiles/FreeLinkUTest.dir/FreeLinkUTest.cpp.o
Scanning dependencies of target HashUTest
[ 34%] Building CXX object tests/atoms/CMakeFiles/HashUTest.dir/HashUTest.cpp.o
[ 34%] Linking CXX executable HashMixUTest
[ 34%] Built target HashMixUTest
[ 34%] Generating ScopeLinkUTest.cpp
Scanning dependencies of target ScopeLinkUTest
[ 35%] Building CXX object tests/atoms/CMakeFiles/ScopeLinkUTest.dir/ScopeLinkUTest.cpp.o
[ 35%] Linking CXX executable AtomSpaceAsyncUTest
[ 35%] Built target AtomSpaceAsyncUTest
[ 35%] Generating TVMergeUTest.cpp
Scanning dependencies of target TVMergeUTest
[ 35%] Building CXX object tests/atoms/truthvalue/CMakeFiles/TVMergeUTest.dir/TVMergeUTest.cpp.o
[ 35%] Linking CXX executable AtomSpaceUtilsUTest
[ 35%] Built target AtomSpaceUtilsUTest
[ 35%] Generating TVandAVUTest.cpp
Scanning dependencies of target TVandAVUTest
[ 35%] Building CXX object tests/atoms/truthvalue/CMakeFiles/TVandAVUTest.dir/TVandAVUTest.cpp.o
[ 35%] Linking CXX executable AtomTableUTest
[ 35%] Linking CXX executable HashUTest
[ 35%] Linking CXX executable FreeLinkUTest
[ 35%] Linking CXX executable AtomSpaceUTest
[ 35%] Built target AtomSpaceUTest
[ 35%] Generating SimpleTruthValueUTest.cpp
[ 35%] Built target FreeLinkUTest
[ 35%] Built target HashUTest
[ 35%] Built target AtomTableUTest
[ 35%] Linking CXX executable RewriteLinkUTest
Scanning dependencies of target SimpleTruthValueUTest
[ 35%] Generating FuzzyUTest.cpp
[ 36%] Linking CXX executable TVMergeUTest
[ 36%] Building CXX object tests/atoms/truthvalue/CMakeFiles/SimpleTruthValueUTest.dir/SimpleTruthValueUTest.cpp.o
[ 36%] Generating NeighborUTest.cpp
[ 36%] Generating EvidenceCountTruthValueUTest.cpp
Scanning dependencies of target EvidenceCountTruthValueUTest
Scanning dependencies of target FuzzyUTest
[ 36%] Building CXX object tests/atoms/truthvalue/CMakeFiles/EvidenceCountTruthValueUTest.dir/EvidenceCountTruthValueUTest.cpp.o
Scanning dependencies of target NeighborUTest
[ 36%] Building CXX object tests/atomutils/CMakeFiles/FuzzyUTest.dir/FuzzyUTest.cpp.o
[ 36%] Building CXX object tests/atomutils/CMakeFiles/NeighborUTest.dir/NeighborUTest.cpp.o
[ 36%] Built target RewriteLinkUTest
[ 36%] Built target TVMergeUTest
[ 36%] Generating FindUtilsUTest.cpp
[ 36%] Generating AtomUtilsUTest.cpp
Scanning dependencies of target FindUtilsUTest
[ 37%] Building CXX object tests/atomutils/CMakeFiles/FindUtilsUTest.dir/FindUtilsUTest.cpp.o
Scanning dependencies of target AtomUtilsUTest
[ 37%] Building CXX object tests/atomutils/CMakeFiles/AtomUtilsUTest.dir/AtomUtilsUTest.cpp.o
[ 37%] Linking CXX executable ScopeLinkUTest
[ 37%] Built target ScopeLinkUTest
[ 37%] Linking CXX executable TVandAVUTest
[ 37%] Generating UnifyUTest.cpp
Scanning dependencies of target UnifyUTest
[ 37%] Building CXX object tests/unify/CMakeFiles/UnifyUTest.dir/UnifyUTest.cpp.o
[ 37%] Built target TVandAVUTest
[ 38%] Built target dist-gearman
[ 38%] Built target persist
[ 41%] Built target persist-sql
[ 41%] Linking CXX executable SimpleTruthValueUTest
[ 41%] Linking CXX executable EvidenceCountTruthValueUTest
[ 41%] Built target PythonEval
[ 43%] Built target query
[ 43%] Generating GearmanUTest.cpp
[ 43%] Built target SimpleTruthValueUTest
[ 43%] Built target EvidenceCountTruthValueUTest
Scanning dependencies of target GearmanUTest
[ 43%] Built target utilities_cython
[ 44%] Building CXX object tests/persist/gearman/CMakeFiles/GearmanUTest.dir/GearmanUTest.cpp.o
[ 46%] Built target execution
[ 48%] Built target attentionbank
[ 48%] Generating ReductUTest.cpp
[ 51%] Built target ruleengine
[ 51%] Generating QuotationUTest.cpp
Scanning dependencies of target ReductUTest
[ 51%] Building CXX object tests/atoms/CMakeFiles/ReductUTest.dir/ReductUTest.cpp.o
Scanning dependencies of target QuotationUTest
[ 51%] Building CXX object tests/atoms/CMakeFiles/QuotationUTest.dir/QuotationUTest.cpp.o
[ 51%] Linking CXX executable FuzzyUTest
[ 52%] Linking CXX executable NeighborUTest
[ 52%] Built target FuzzyUTest
[ 53%] Generating AlphaConvertUTest.cpp
[ 53%] Linking CXX executable FindUtilsUTest
Scanning dependencies of target AlphaConvertUTest
[ 53%] Building CXX object tests/atoms/CMakeFiles/AlphaConvertUTest.dir/AlphaConvertUTest.cpp.o
[ 53%] Built target NeighborUTest
[ 53%] Generating StateLinkUTest.cpp
[ 53%] Linking CXX executable AtomUtilsUTest
Scanning dependencies of target StateLinkUTest
[ 53%] Building CXX object tests/atoms/CMakeFiles/StateLinkUTest.dir/StateLinkUTest.cpp.o
[ 53%] Built target FindUtilsUTest
[ 53%] Generating MapLinkUTest.cpp
Scanning dependencies of target MapLinkUTest
[ 53%] Built target AtomUtilsUTest
[ 53%] Building CXX object tests/atoms/CMakeFiles/MapLinkUTest.dir/MapLinkUTest.cpp.o
[ 53%] Generating DeleteLinkUTest.cpp
Scanning dependencies of target DeleteLinkUTest
[ 54%] Building CXX object tests/atoms/CMakeFiles/DeleteLinkUTest.dir/DeleteLinkUTest.cpp.o
[ 54%] Linking CXX executable GearmanUTest
[ 54%] Built target GearmanUTest
[ 54%] Generating IdenticalLinkUTest.cpp
Scanning dependencies of target IdenticalLinkUTest
[ 55%] Building CXX object tests/atoms/CMakeFiles/IdenticalLinkUTest.dir/IdenticalLinkUTest.cpp.o
[ 55%] Linking CXX executable ReductUTest
[ 55%] Linking CXX executable QuotationUTest
[ 55%] Built target ReductUTest
[ 55%] Generating RandomUTest.cpp
[ 55%] Built target QuotationUTest
[ 55%] Generating EqualLinkUTest.cpp
Scanning dependencies of target RandomUTest
[ 55%] Building CXX object tests/atoms/CMakeFiles/RandomUTest.dir/RandomUTest.cpp.o
Scanning dependencies of target EqualLinkUTest
[ 56%] Building CXX object tests/atoms/CMakeFiles/EqualLinkUTest.dir/EqualLinkUTest.cpp.o
[ 56%] Linking CXX executable AlphaConvertUTest
[ 56%] Linking CXX executable DeleteLinkUTest
[ 56%] Linking CXX executable MapLinkUTest
[ 56%] Built target AlphaConvertUTest
[ 56%] Generating StreamUTest.cpp
Scanning dependencies of target StreamUTest
[ 56%] Built target DeleteLinkUTest
[ 57%] Generating PutLinkUTest.cpp
[ 57%] Building CXX object tests/atoms/CMakeFiles/StreamUTest.dir/StreamUTest.cpp.o
[ 57%] Built target MapLinkUTest
[ 57%] Generating GroundedSchemaLocalUTest.cpp
Scanning dependencies of target PutLinkUTest
[ 57%] Building CXX object tests/atoms/CMakeFiles/PutLinkUTest.dir/PutLinkUTest.cpp.o
Scanning dependencies of target GroundedSchemaLocalUTest
[ 57%] Building CXX object tests/atoms/CMakeFiles/GroundedSchemaLocalUTest.dir/GroundedSchemaLocalUTest.cpp.o
[ 57%] Linking CXX executable StateLinkUTest
[ 57%] Linking CXX executable IdenticalLinkUTest
[ 57%] Built target StateLinkUTest
[ 57%] Built target IdenticalLinkUTest
[ 57%] Generating ExistsLinkUTest.cpp
[ 57%] Generating ParallelUTest.cpp
Scanning dependencies of target ExistsLinkUTest
[ 57%] Building CXX object tests/atoms/CMakeFiles/ExistsLinkUTest.dir/ExistsLinkUTest.cpp.o
Scanning dependencies of target ParallelUTest
[ 57%] Building CXX object tests/atoms/CMakeFiles/ParallelUTest.dir/ParallelUTest.cpp.o
[ 57%] Linking CXX executable RandomUTest
[ 57%] Linking CXX executable EqualLinkUTest
[ 57%] Built target RandomUTest
[ 57%] Generating ValueOfUTest.cpp
[ 57%] Built target EqualLinkUTest
Scanning dependencies of target ValueOfUTest
[ 58%] Generating BankImplUTest.cpp
[ 58%] Building CXX object tests/atoms/CMakeFiles/ValueOfUTest.dir/ValueOfUTest.cpp.o
Scanning dependencies of target BankImplUTest
[ 58%] Building CXX object tests/attentionbank/CMakeFiles/BankImplUTest.dir/BankImplUTest.cpp.o
[ 58%] Linking CXX executable GroundedSchemaLocalUTest
[ 58%] Built target GroundedSchemaLocalUTest
[ 58%] Generating BankAsyncUTest.cpp
Scanning dependencies of target BankAsyncUTest
[ 58%] Building CXX object tests/attentionbank/CMakeFiles/BankAsyncUTest.dir/BankAsyncUTest.cpp.o
[ 60%] Linking CXX executable StreamUTest
[ 60%] Linking CXX executable UnifyUTest
[ 60%] Linking CXX executable ParallelUTest
[ 60%] Linking CXX executable ExistsLinkUTest
[ 60%] Built target StreamUTest
[ 60%] Built target ParallelUTest
[ 61%] Built target ExistsLinkUTest
[ 61%] Generating AttentionUTest.cpp
[ 61%] Generating AttentionValueUTest.cpp
[ 62%] Generating AttentionalFocusCBUTest.cpp
[ 62%] Built target UnifyUTest
Scanning dependencies of target AttentionUTest
[ 62%] Built target logger
Scanning dependencies of target AttentionValueUTest
[ 62%] Building CXX object tests/attentionbank/CMakeFiles/AttentionUTest.dir/AttentionUTest.cpp.o
[ 62%] Generating VectorAPIUTest.cpp
[ 62%] Building CXX object tests/attentionbank/CMakeFiles/AttentionValueUTest.dir/AttentionValueUTest.cpp.o
Scanning dependencies of target AttentionalFocusCBUTest
[ 62%] Building CXX object tests/attentionbank/CMakeFiles/AttentionalFocusCBUTest.dir/AttentionalFocusCBUTest.cpp.o
Scanning dependencies of target VectorAPIUTest
[ 62%] Building CXX object tests/matrix/CMakeFiles/VectorAPIUTest.dir/VectorAPIUTest.cpp.o
[ 62%] Linking CXX executable ValueOfUTest
[ 62%] Built target ValueOfUTest
[ 62%] Generating NoExceptionUTest.cpp
Scanning dependencies of target NoExceptionUTest
[ 62%] Building CXX object tests/query/CMakeFiles/NoExceptionUTest.dir/NoExceptionUTest.cpp.o
[ 62%] Linking CXX executable BankAsyncUTest
[ 62%] Built target BankAsyncUTest
[ 62%] Generating SudokuUTest.cpp
Scanning dependencies of target SudokuUTest
[ 62%] Building CXX object tests/query/CMakeFiles/SudokuUTest.dir/SudokuUTest.cpp.o
[ 62%] Linking CXX executable BankImplUTest
[ 62%] Built target BankImplUTest
[ 62%] Generating FirstNUTest.cpp
Scanning dependencies of target FirstNUTest
[ 63%] Building CXX object tests/query/CMakeFiles/FirstNUTest.dir/FirstNUTest.cpp.o
[ 63%] Linking CXX executable PutLinkUTest
[ 63%] Built target PutLinkUTest
[ 63%] Generating NestedPutUTest.cpp
Scanning dependencies of target NestedPutUTest
[ 63%] Building CXX object tests/query/CMakeFiles/NestedPutUTest.dir/NestedPutUTest.cpp.o
[ 63%] Linking CXX executable AttentionalFocusCBUTest
[ 63%] Linking CXX executable AttentionUTest
[ 63%] Built target AttentionalFocusCBUTest
[ 63%] Generating EvalLinkDefaultTVUTest.cpp
[ 63%] Built target AttentionUTest
Scanning dependencies of target EvalLinkDefaultTVUTest
[ 63%] Generating UnorderedUTest.cpp
[ 63%] Building CXX object tests/query/CMakeFiles/EvalLinkDefaultTVUTest.dir/EvalLinkDefaultTVUTest.cpp.o
Scanning dependencies of target UnorderedUTest
[ 63%] Building CXX object tests/query/CMakeFiles/UnorderedUTest.dir/UnorderedUTest.cpp.o
[ 63%] Linking CXX executable AttentionValueUTest
[ 63%] Built target AttentionValueUTest
[ 63%] Generating ConstantClausesUTest.cpp
Scanning dependencies of target ConstantClausesUTest
[ 63%] Building CXX object tests/query/CMakeFiles/ConstantClausesUTest.dir/ConstantClausesUTest.cpp.o
[ 64%] Linking CXX executable NoExceptionUTest
[ 64%] Built target NoExceptionUTest
[ 64%] Generating VarTypeNotUTest.cpp
Scanning dependencies of target VarTypeNotUTest
[ 64%] Building CXX object tests/query/CMakeFiles/VarTypeNotUTest.dir/VarTypeNotUTest.cpp.o
[ 65%] Linking CXX executable SudokuUTest
[ 65%] Built target SudokuUTest
[ 66%] Generating BindTVUTest.cpp
Scanning dependencies of target BindTVUTest
[ 66%] Building CXX object tests/query/CMakeFiles/BindTVUTest.dir/BindTVUTest.cpp.o
[ 66%] Linking CXX executable FirstNUTest
[ 66%] Built target FirstNUTest
[ 66%] Generating ExecutionOutputUTest.cpp
Scanning dependencies of target ExecutionOutputUTest
[ 67%] Building CXX object tests/query/CMakeFiles/ExecutionOutputUTest.dir/ExecutionOutputUTest.cpp.o
[ 67%] Linking CXX executable NestedPutUTest
[ 67%] Built target NestedPutUTest
[ 67%] Linking CXX executable EvalLinkDefaultTVUTest
[ 67%] Generating ScopeUTest.cpp
Scanning dependencies of target ScopeUTest
[ 67%] Building CXX object tests/query/CMakeFiles/ScopeUTest.dir/ScopeUTest.cpp.o
[ 67%] Built target EvalLinkDefaultTVUTest
[ 67%] Generating StackUTest.cpp
Scanning dependencies of target StackUTest
[ 67%] Building CXX object tests/query/CMakeFiles/StackUTest.dir/StackUTest.cpp.o
[ 68%] Linking CXX executable UnorderedUTest
[ 68%] Built target UnorderedUTest
[ 68%] Generating FiniteStateMachineUTest.cpp
Scanning dependencies of target FiniteStateMachineUTest
[ 68%] Building CXX object tests/query/CMakeFiles/FiniteStateMachineUTest.dir/FiniteStateMachineUTest.cpp.o
[ 68%] Linking CXX executable ConstantClausesUTest
[ 69%] Linking CXX executable VarTypeNotUTest
[ 69%] Built target ConstantClausesUTest
[ 70%] Generating BigPatternUTest.cpp
[ 70%] Built target VarTypeNotUTest
[ 70%] Generating ImplicationUTest.cpp
Scanning dependencies of target BigPatternUTest
[ 70%] Building CXX object tests/query/CMakeFiles/BigPatternUTest.dir/BigPatternUTest.cpp.o
Scanning dependencies of target ImplicationUTest
[ 70%] Building CXX object tests/query/CMakeFiles/ImplicationUTest.dir/ImplicationUTest.cpp.o
[ 71%] Linking CXX executable VectorAPIUTest
[ 71%] Built target VectorAPIUTest
[ 71%] Generating BuggyLinkUTest.cpp
[ 71%] Linking CXX executable BindTVUTest
Scanning dependencies of target BuggyLinkUTest
[ 71%] Building CXX object tests/query/CMakeFiles/BuggyLinkUTest.dir/BuggyLinkUTest.cpp.o
[ 71%] Built target BindTVUTest
[ 71%] Generating LoopPatternUTest.cpp
Scanning dependencies of target LoopPatternUTest
[ 71%] Building CXX object tests/query/CMakeFiles/LoopPatternUTest.dir/LoopPatternUTest.cpp.o
[ 71%] Linking CXX executable ScopeUTest
[ 72%] Linking CXX executable StackUTest
[ 72%] Built target ScopeUTest
[ 72%] Generating GreaterComputeUTest.cpp
[ 72%] Built target StackUTest
Scanning dependencies of target GreaterComputeUTest
[ 72%] Building CXX object tests/query/CMakeFiles/GreaterComputeUTest.dir/GreaterComputeUTest.cpp.o
[ 72%] Generating PatternUTest.cpp
Scanning dependencies of target PatternUTest
[ 72%] Building CXX object tests/query/CMakeFiles/PatternUTest.dir/PatternUTest.cpp.o
[ 72%] Linking CXX executable ExecutionOutputUTest
[ 72%] Linking CXX executable FiniteStateMachineUTest
[ 72%] Built target FiniteStateMachineUTest
[ 73%] Generating BooleanUTest.cpp
[ 73%] Built target ExecutionOutputUTest
[ 73%] Generating RecognizerUTest.cpp
Scanning dependencies of target BooleanUTest
[ 73%] Building CXX object tests/query/CMakeFiles/BooleanUTest.dir/BooleanUTest.cpp.o
Scanning dependencies of target RecognizerUTest
[ 74%] Building CXX object tests/query/CMakeFiles/RecognizerUTest.dir/RecognizerUTest.cpp.o
[ 74%] Linking CXX executable BigPatternUTest
[ 74%] Linking CXX executable BuggyLinkUTest
[ 74%] Linking CXX executable ImplicationUTest
[ 74%] Built target BigPatternUTest
[ 74%] Generating BuggyStackUTest.cpp
[ 74%] Built target BuggyLinkUTest
[ 74%] Generating GetStateUTest.cpp
[ 74%] Built target ImplicationUTest
Scanning dependencies of target BuggyStackUTest
[ 74%] Generating UnquoteUTest.cpp
[ 74%] Building CXX object tests/query/CMakeFiles/BuggyStackUTest.dir/BuggyStackUTest.cpp.o
Scanning dependencies of target GetStateUTest
Scanning dependencies of target UnquoteUTest
[ 75%] Building CXX object tests/query/CMakeFiles/GetStateUTest.dir/GetStateUTest.cpp.o
[ 75%] Building CXX object tests/query/CMakeFiles/UnquoteUTest.dir/UnquoteUTest.cpp.o
[ 76%] Linking CXX executable LoopPatternUTest
[ 76%] Built target LoopPatternUTest
[ 76%] Generating StackMoreUTest.cpp
Scanning dependencies of target StackMoreUTest
[ 76%] Building CXX object tests/query/CMakeFiles/StackMoreUTest.dir/StackMoreUTest.cpp.o
[ 76%] Linking CXX executable GreaterComputeUTest
[ 76%] Built target GreaterComputeUTest
[ 76%] Generating DefineUTest.cpp
[ 76%] Linking CXX executable RecognizerUTest
Scanning dependencies of target DefineUTest
[ 76%] Building CXX object tests/query/CMakeFiles/DefineUTest.dir/DefineUTest.cpp.o
[ 76%] Linking CXX executable PatternUTest
[ 76%] Built target RecognizerUTest
[ 77%] Generating BuggyNotUTest.cpp
Scanning dependencies of target BuggyNotUTest
[ 77%] Building CXX object tests/query/CMakeFiles/BuggyNotUTest.dir/BuggyNotUTest.cpp.o
[ 77%] Built target PatternUTest
[ 77%] Generating DisconnectedUTest.cpp
Scanning dependencies of target DisconnectedUTest
[ 77%] Building CXX object tests/query/CMakeFiles/DisconnectedUTest.dir/DisconnectedUTest.cpp.o
[ 77%] Linking CXX executable BooleanUTest
[ 77%] Built target BooleanUTest
[ 77%] Generating DeepTypeUTest.cpp
Scanning dependencies of target DeepTypeUTest
[ 77%] Building CXX object tests/query/CMakeFiles/DeepTypeUTest.dir/DeepTypeUTest.cpp.o
[ 77%] Linking CXX executable BuggyStackUTest
[ 77%] Built target BuggyStackUTest
[ 77%] Generating EinsteinUTest.cpp
Scanning dependencies of target EinsteinUTest
[ 77%] Linking CXX executable GetStateUTest
[ 77%] Building CXX object tests/query/CMakeFiles/EinsteinUTest.dir/EinsteinUTest.cpp.o
[ 77%] Linking CXX executable UnquoteUTest
[ 77%] Built target GetStateUTest
[ 77%] Generating MatchLinkUTest.cpp
Scanning dependencies of target MatchLinkUTest
[ 77%] Building CXX object tests/query/CMakeFiles/MatchLinkUTest.dir/MatchLinkUTest.cpp.o
[ 77%] Built target UnquoteUTest
[ 77%] Generating BiggerPatternUTest.cpp
Scanning dependencies of target BiggerPatternUTest
[ 77%] Building CXX object tests/query/CMakeFiles/BiggerPatternUTest.dir/BiggerPatternUTest.cpp.o
[ 77%] Linking CXX executable StackMoreUTest
[ 77%] Built target StackMoreUTest
[ 77%] Generating ArcanaUTest.cpp
Scanning dependencies of target ArcanaUTest
[ 77%] Building CXX object tests/query/CMakeFiles/ArcanaUTest.dir/ArcanaUTest.cpp.o
[ 77%] Linking CXX executable DefineUTest
[ 77%] Built target DefineUTest
[ 77%] Generating SubstitutionUTest.cpp
Scanning dependencies of target SubstitutionUTest
[ 77%] Building CXX object tests/query/CMakeFiles/SubstitutionUTest.dir/SubstitutionUTest.cpp.o
[ 77%] Linking CXX executable BuggyNotUTest
[ 77%] Built target BuggyNotUTest
[ 77%] Generating GetLinkUTest.cpp
[ 77%] Linking CXX executable DisconnectedUTest
Scanning dependencies of target GetLinkUTest
[ 77%] Building CXX object tests/query/CMakeFiles/GetLinkUTest.dir/GetLinkUTest.cpp.o
[ 77%] Built target DisconnectedUTest
[ 77%] Generating NotLinkUTest.cpp
Scanning dependencies of target NotLinkUTest
[ 77%] Building CXX object tests/query/CMakeFiles/NotLinkUTest.dir/NotLinkUTest.cpp.o
[ 77%] Linking CXX executable DeepTypeUTest
[ 77%] Built target DeepTypeUTest
[ 77%] Generating GreaterThanUTest.cpp
Scanning dependencies of target GreaterThanUTest
[ 78%] Building CXX object tests/query/CMakeFiles/GreaterThanUTest.dir/GreaterThanUTest.cpp.o
[ 78%] Linking CXX executable EinsteinUTest
[ 80%] Linking CXX executable MatchLinkUTest
[ 80%] Built target EinsteinUTest
[ 80%] Generating Boolean2NotUTest.cpp
[ 80%] Built target MatchLinkUTest
Scanning dependencies of target Boolean2NotUTest
[ 80%] Generating SequenceUTest.cpp
[ 80%] Building CXX object tests/query/CMakeFiles/Boolean2NotUTest.dir/Boolean2NotUTest.cpp.o
Scanning dependencies of target SequenceUTest
[ 80%] Building CXX object tests/query/CMakeFiles/SequenceUTest.dir/SequenceUTest.cpp.o
[ 80%] Linking CXX executable ArcanaUTest
[ 80%] Built target ArcanaUTest
[ 80%] Generating EvaluationUTest.cpp
Scanning dependencies of target EvaluationUTest
[ 81%] Building CXX object tests/query/CMakeFiles/EvaluationUTest.dir/EvaluationUTest.cpp.o
[ 81%] Linking CXX executable BiggerPatternUTest
[ 81%] Built target BiggerPatternUTest
[ 81%] Generating DontExecUTest.cpp
Scanning dependencies of target DontExecUTest
[ 82%] Building CXX object tests/query/CMakeFiles/DontExecUTest.dir/DontExecUTest.cpp.o
[ 82%] Linking CXX executable SubstitutionUTest
[ 82%] Built target SubstitutionUTest
[ 82%] Generating TypeChoiceUTest.cpp
Scanning dependencies of target TypeChoiceUTest
[ 82%] Building CXX object tests/query/CMakeFiles/TypeChoiceUTest.dir/TypeChoiceUTest.cpp.o
[ 82%] Linking CXX executable GetLinkUTest
[ 83%] Linking CXX executable NotLinkUTest
[ 83%] Built target GetLinkUTest
[ 83%] Generating GlobUTest.cpp
Scanning dependencies of target GlobUTest
[ 83%] Building CXX object tests/query/CMakeFiles/GlobUTest.dir/GlobUTest.cpp.o
[ 83%] Built target NotLinkUTest
[ 83%] Generating BuggyQuoteUTest.cpp
Scanning dependencies of target BuggyQuoteUTest
[ 83%] Linking CXX executable GreaterThanUTest
[ 83%] Building CXX object tests/query/CMakeFiles/BuggyQuoteUTest.dir/BuggyQuoteUTest.cpp.o
[ 83%] Built target GreaterThanUTest
[ 83%] Generating PatternCrashUTest.cpp
Scanning dependencies of target PatternCrashUTest
[ 83%] Building CXX object tests/query/CMakeFiles/PatternCrashUTest.dir/PatternCrashUTest.cpp.o
[ 84%] Linking CXX executable SequenceUTest
[ 84%] Built target SequenceUTest
[ 84%] Generating AbsentUTest.cpp
Scanning dependencies of target AbsentUTest
[ 84%] Building CXX object tests/query/CMakeFiles/AbsentUTest.dir/AbsentUTest.cpp.o
[ 84%] Linking CXX executable Boolean2NotUTest
[ 84%] Linking CXX executable EvaluationUTest
[ 84%] Built target Boolean2NotUTest
[ 84%] Generating QuoteUTest.cpp
[ 84%] Built target EvaluationUTest
[ 84%] Generating LocalQuoteUTest.cpp
Scanning dependencies of target QuoteUTest
[ 85%] Building CXX object tests/query/CMakeFiles/QuoteUTest.dir/QuoteUTest.cpp.o
Scanning dependencies of target LocalQuoteUTest
[ 85%] Building CXX object tests/query/CMakeFiles/LocalQuoteUTest.dir/LocalQuoteUTest.cpp.o
[ 85%] Linking CXX executable DontExecUTest
[ 85%] Built target DontExecUTest
[ 86%] Generating BuggyEqualUTest.cpp
Scanning dependencies of target BuggyEqualUTest
[ 86%] Building CXX object tests/query/CMakeFiles/BuggyEqualUTest.dir/BuggyEqualUTest.cpp.o
[ 86%] Linking CXX executable TypeChoiceUTest
[ 86%] Built target TypeChoiceUTest
[ 87%] Generating BuggySelfGroundUTest.cpp
Scanning dependencies of target BuggySelfGroundUTest
[ 87%] Building CXX object tests/query/CMakeFiles/BuggySelfGroundUTest.dir/BuggySelfGroundUTest.cpp.o
[ 87%] Linking CXX executable BuggyQuoteUTest
[ 87%] Linking CXX executable GlobUTest
[ 87%] Built target BuggyQuoteUTest
[ 87%] Generating BuggyBindLinkUTest.cpp
Scanning dependencies of target BuggyBindLinkUTest
[ 87%] Building CXX object tests/query/CMakeFiles/BuggyBindLinkUTest.dir/BuggyBindLinkUTest.cpp.o
[ 87%] Built target GlobUTest
[ 87%] Generating ChoiceLinkUTest.cpp
Scanning dependencies of target ChoiceLinkUTest
[ 87%] Building CXX object tests/query/CMakeFiles/ChoiceLinkUTest.dir/ChoiceLinkUTest.cpp.o
[ 88%] Linking CXX executable PatternCrashUTest
[ 88%] Built target PatternCrashUTest
[ 88%] Generating SingleUTest.cpp
Scanning dependencies of target SingleUTest
[ 88%] Building CXX object tests/query/CMakeFiles/SingleUTest.dir/SingleUTest.cpp.o
[ 88%] Linking CXX executable AbsentUTest
[ 88%] Built target AbsentUTest
[ 88%] Generating ActionSelectionUTest.cpp
[ 88%] Linking CXX executable LocalQuoteUTest
Scanning dependencies of target ActionSelectionUTest
[ 88%] Building CXX object tests/rule-engine/CMakeFiles/ActionSelectionUTest.dir/ActionSelectionUTest.cpp.o
[ 88%] Linking CXX executable BuggyEqualUTest
[ 88%] Built target LocalQuoteUTest
[ 88%] Linking CXX executable QuoteUTest
[ 88%] Linking CXX executable BuggySelfGroundUTest
[ 88%] Built target BuggyEqualUTest
[ 89%] Generating BetaDistributionUTest.cpp
[ 89%] Generating RuleUTest.cpp
Scanning dependencies of target BetaDistributionUTest
[ 89%] Building CXX object tests/rule-engine/CMakeFiles/BetaDistributionUTest.dir/BetaDistributionUTest.cpp.o
[ 89%] Built target QuoteUTest
[ 89%] Generating UREConfigUTest.cpp
Scanning dependencies of target RuleUTest
[ 90%] Building CXX object tests/rule-engine/CMakeFiles/RuleUTest.dir/RuleUTest.cpp.o
[ 90%] Built target BuggySelfGroundUTest
[ 90%] Generating ForwardChainerUTest.cpp
Scanning dependencies of target UREConfigUTest
[ 90%] Building CXX object tests/rule-engine/CMakeFiles/UREConfigUTest.dir/UREConfigUTest.cpp.o
[ 90%] Linking CXX executable BuggyBindLinkUTest
Scanning dependencies of target ForwardChainerUTest
[ 90%] Building CXX object tests/rule-engine/forwardchainer/CMakeFiles/ForwardChainerUTest.dir/ForwardChainerUTest.cpp.o
[ 90%] Built target BuggyBindLinkUTest
[ 90%] Generating ControlPolicyUTest.cpp
Scanning dependencies of target ControlPolicyUTest
[ 91%] Building CXX object tests/rule-engine/backwardchainer/CMakeFiles/ControlPolicyUTest.dir/ControlPolicyUTest.cpp.o
[ 91%] Linking CXX executable ChoiceLinkUTest
[ 92%] Linking CXX executable SingleUTest
[ 92%] Built target ChoiceLinkUTest
[ 92%] Generating GradientUTest.cpp
[ 92%] Built target SingleUTest
[ 92%] Generating BITUTest.cpp
Scanning dependencies of target GradientUTest
[ 93%] Building CXX object tests/rule-engine/backwardchainer/CMakeFiles/GradientUTest.dir/GradientUTest.cpp.o
Scanning dependencies of target BITUTest
[ 93%] Building CXX object tests/rule-engine/backwardchainer/CMakeFiles/BITUTest.dir/BITUTest.cpp.o
[ 94%] Linking CXX executable UREConfigUTest
[ 94%] Built target UREConfigUTest
[ 95%] Generating BackwardChainerUTest.cpp
Scanning dependencies of target BackwardChainerUTest
[ 95%] Building CXX object tests/rule-engine/backwardchainer/CMakeFiles/BackwardChainerUTest.dir/BackwardChainerUTest.cpp.o
[ 95%] Linking CXX executable BetaDistributionUTest
[ 95%] Linking CXX executable ActionSelectionUTest
[ 95%] Built target BetaDistributionUTest
[ 95%] Built target atomspace_cython
[ 95%] Generating MultiAtomSpaceUTest.cpp
[ 95%] Built target ActionSelectionUTest
[ 95%] Generating MultiThreadUTest.cpp
Scanning dependencies of target MultiAtomSpaceUTest
[ 95%] Building CXX object tests/scm/CMakeFiles/MultiAtomSpaceUTest.dir/MultiAtomSpaceUTest.cpp.o
Scanning dependencies of target MultiThreadUTest
[ 95%] Building CXX object tests/scm/CMakeFiles/MultiThreadUTest.dir/MultiThreadUTest.cpp.o
[ 95%] Linking CXX executable ControlPolicyUTest
[ 95%] Linking CXX executable ForwardChainerUTest
[ 95%] Built target ControlPolicyUTest
[ 95%] Generating SCMPrimitiveUTest.cpp
Scanning dependencies of target SCMPrimitiveUTest
[ 96%] Building CXX object tests/scm/CMakeFiles/SCMPrimitiveUTest.dir/SCMPrimitiveUTest.cpp.o
[ 96%] Linking CXX executable RuleUTest
[ 96%] Linking CXX executable GradientUTest
[ 96%] Built target ForwardChainerUTest
[ 96%] Generating BasicSCMUTest.cpp
Scanning dependencies of target BasicSCMUTest
[ 96%] Building CXX object tests/scm/CMakeFiles/BasicSCMUTest.dir/BasicSCMUTest.cpp.o
[ 96%] Built target RuleUTest
[ 96%] Built target GradientUTest
[ 96%] Generating SCMUtilsUTest.cpp
[ 96%] Generating SCMExecutionOutputUTest.cpp
Scanning dependencies of target SCMExecutionOutputUTest
Scanning dependencies of target SCMUtilsUTest
[ 96%] Building CXX object tests/scm/CMakeFiles/SCMUtilsUTest.dir/SCMUtilsUTest.cpp.o
[ 96%] Building CXX object tests/scm/CMakeFiles/SCMExecutionOutputUTest.dir/SCMExecutionOutputUTest.cpp.o
[ 96%] Linking CXX executable BITUTest
[ 96%] Built target BITUTest
[ 97%] Generating PythonEvalUTest.cpp
Scanning dependencies of target PythonEvalUTest
[ 97%] Building CXX object tests/cython/CMakeFiles/PythonEvalUTest.dir/PythonEvalUTest.cpp.o
[ 97%] Linking CXX executable MultiThreadUTest
[ 97%] Linking CXX executable SCMPrimitiveUTest
[ 97%] Linking CXX executable SCMUtilsUTest
[ 97%] Built target MultiThreadUTest
[ 97%] Built target SCMPrimitiveUTest
[ 97%] Built target backwardchainer_cython
[ 97%] Built target SCMUtilsUTest
[ 97%] Generating PythonUtilitiesUTest.cpp
Scanning dependencies of target PythonUtilitiesUTest
[ 98%] Building CXX object tests/cython/CMakeFiles/PythonUtilitiesUTest.dir/PythonUtilitiesUTest.cpp.o
[ 98%] Linking CXX executable BackwardChainerUTest
[ 98%] Linking CXX executable SCMExecutionOutputUTest
[ 98%] Linking CXX executable PythonEvalUTest
[ 98%] Linking CXX executable MultiAtomSpaceUTest
[ 98%] Built target BackwardChainerUTest
[ 98%] Built target SCMExecutionOutputUTest
[ 98%] Built target MultiAtomSpaceUTest
[ 98%] Built target PythonEvalUTest
[ 98%] Linking CXX executable BasicSCMUTest
[ 98%] Built target BasicSCMUTest
[ 98%] Linking CXX executable PythonUtilitiesUTest
[ 98%] Built target PythonUtilitiesUTest
Scanning dependencies of target tests
[ 98%] Built target tests
Scanning dependencies of target test
[100%] Running tests...
Test project /home/opencog/atomspace/build/tests
        Start   1: AtomTableUTest
  1/132 Test   #1: AtomTableUTest ...................   Passed    6.16 sec
        Start   2: ClassServerUTest
  2/132 Test   #2: ClassServerUTest .................   Passed    0.00 sec
        Start   3: AtomUTest
  3/132 Test   #3: AtomUTest ........................   Passed    0.00 sec
        Start   4: NodeUTest
  4/132 Test   #4: NodeUTest ........................   Passed    0.00 sec
        Start   5: LinkUTest
  5/132 Test   #5: LinkUTest ........................   Passed    0.00 sec
        Start   6: TLBUTest
  6/132 Test   #6: TLBUTest .........................   Passed    0.00 sec
        Start   7: HashMixUTest
  7/132 Test   #7: HashMixUTest .....................   Passed    1.70 sec
        Start   8: AtomSpaceUTest
  8/132 Test   #8: AtomSpaceUTest ...................   Passed    0.01 sec
        Start   9: AtomSpaceAsyncUTest
  9/132 Test   #9: AtomSpaceAsyncUTest ..............   Passed    7.60 sec
        Start  10: UseCountUTest
 10/132 Test  #10: UseCountUTest ....................   Passed    7.15 sec
        Start  11: MultiSpaceUTest
 11/132 Test  #11: MultiSpaceUTest ..................   Passed    0.01 sec
        Start  12: COWSpaceUTest
 12/132 Test  #12: COWSpaceUTest ....................   Passed    0.00 sec
        Start  13: RemoveUTest
 13/132 Test  #13: RemoveUTest ......................   Passed    0.56 sec
        Start  14: ThreadSafeHandleMapUTest
 14/132 Test  #14: ThreadSafeHandleMapUTest .........   Passed    0.35 sec
        Start  15: FreeLinkUTest
 15/132 Test  #15: FreeLinkUTest ....................   Passed    0.19 sec
        Start  16: MapLinkUTest
 16/132 Test  #16: MapLinkUTest .....................   Passed    1.27 sec
        Start  17: ParallelUTest
 17/132 Test  #17: ParallelUTest ....................   Passed   11.29 sec
        Start  18: RandomUTest
 18/132 Test  #18: RandomUTest ......................   Passed    0.82 sec
        Start  19: ReductUTest
 19/132 Test  #19: ReductUTest ......................   Passed    0.19 sec
        Start  20: RewriteLinkUTest
 20/132 Test  #20: RewriteLinkUTest .................   Passed    0.34 sec
        Start  21: ScopeLinkUTest
 21/132 Test  #21: ScopeLinkUTest ...................   Passed    0.19 sec
        Start  22: PutLinkUTest
 22/132 Test  #22: PutLinkUTest .....................   Passed    1.13 sec
        Start  23: QuotationUTest
 23/132 Test  #23: QuotationUTest ...................   Passed    0.20 sec
        Start  24: HashUTest
 24/132 Test  #24: HashUTest ........................   Passed    1.24 sec
        Start  25: AlphaConvertUTest
 25/132 Test  #25: AlphaConvertUTest ................   Passed    0.01 sec
        Start  26: BetaReduceUTest
 26/132 Test  #26: BetaReduceUTest ..................   Passed    0.01 sec
        Start  27: DefineLinkUTest
 27/132 Test  #27: DefineLinkUTest ..................   Passed    0.07 sec
        Start  28: DeleteLinkUTest
 28/132 Test  #28: DeleteLinkUTest ..................   Passed    0.01 sec
        Start  29: EqualLinkUTest
 29/132 Test  #29: EqualLinkUTest ...................   Passed    0.01 sec
        Start  30: GroundedSchemaLocalUTest
 30/132 Test  #30: GroundedSchemaLocalUTest .........   Passed    0.01 sec
        Start  31: StateLinkUTest
 31/132 Test  #31: StateLinkUTest ...................   Passed    0.03 sec
        Start  32: VariablesUTest
 32/132 Test  #32: VariablesUTest ...................   Passed    0.01 sec
        Start  33: ExistsLinkUTest
 33/132 Test  #33: ExistsLinkUTest ..................   Passed    0.02 sec
        Start  34: ValueOfUTest
 34/132 Test  #34: ValueOfUTest .....................   Passed    0.01 sec
        Start  35: StreamUTest
 35/132 Test  #35: StreamUTest ......................   Passed    0.31 sec
        Start  36: IdenticalLinkUTest
 36/132 Test  #36: IdenticalLinkUTest ...............   Passed    0.01 sec
        Start  37: SimpleTruthValueUTest
 37/132 Test  #37: SimpleTruthValueUTest ............   Passed    0.02 sec
        Start  38: TVandAVUTest
 38/132 Test  #38: TVandAVUTest .....................   Passed    0.48 sec
        Start  39: TVMergeUTest
 39/132 Test  #39: TVMergeUTest .....................   Passed    0.01 sec
        Start  40: EvidenceCountTruthValueUTest
 40/132 Test  #40: EvidenceCountTruthValueUTest .....   Passed    0.00 sec
        Start  41: AtomUtilsUTest
 41/132 Test  #41: AtomUtilsUTest ...................   Passed    0.00 sec
        Start  42: FindUtilsUTest
 42/132 Test  #42: FindUtilsUTest ...................   Passed    0.00 sec
        Start  43: FuzzyUTest
 43/132 Test  #43: FuzzyUTest .......................   Passed    0.01 sec
        Start  44: NeighborUTest
 44/132 Test  #44: NeighborUTest ....................   Passed    0.00 sec
        Start  45: UnifyUTest
 45/132 Test  #45: UnifyUTest .......................   Passed    8.43 sec
        Start  46: AtomSpaceUtilsUTest
 46/132 Test  #46: AtomSpaceUtilsUTest ..............   Passed    0.00 sec
        Start  47: AttentionValueUTest
 47/132 Test  #47: AttentionValueUTest ..............   Passed    0.01 sec
        Start  48: AttentionUTest
 48/132 Test  #48: AttentionUTest ...................   Passed    0.03 sec
        Start  49: BankImplUTest
 49/132 Test  #49: BankImplUTest ....................   Passed    0.01 sec
        Start  50: BankAsyncUTest
 50/132 Test  #50: BankAsyncUTest ...................   Passed    0.01 sec
        Start  51: AttentionalFocusCBUTest
 51/132 Test  #51: AttentionalFocusCBUTest ..........   Passed    0.25 sec
        Start  52: GearmanUTest
 52/132 Test  #52: GearmanUTest .....................   Passed    2.26 sec
        Start  53: BasicSCMUTest
 53/132 Test  #53: BasicSCMUTest ....................   Passed    0.92 sec
        Start  54: SCMPrimitiveUTest
 54/132 Test  #54: SCMPrimitiveUTest ................   Passed    0.47 sec
        Start  55: MultiAtomSpaceUTest
 55/132 Test  #55: MultiAtomSpaceUTest ..............   Passed    1.25 sec
        Start  56: MultiThreadUTest
 56/132 Test  #56: MultiThreadUTest .................   Passed    4.02 sec
        Start  57: SCMUtilsUTest
 57/132 Test  #57: SCMUtilsUTest ....................   Passed    0.36 sec
        Start  58: SCMExecutionOutputUTest
 58/132 Test  #58: SCMExecutionOutputUTest ..........   Passed    0.27 sec
        Start  59: SCMOpencogTestRunnerPass
 59/132 Test  #59: SCMOpencogTestRunnerPass .........   Passed    0.56 sec
        Start  60: SCMOpencogTestRunnerFail
 60/132 Test  #60: SCMOpencogTestRunnerFail .........   Passed    0.36 sec
        Start  61: SCMOpenogPython
 61/132 Test  #61: SCMOpenogPython ..................   Passed    0.41 sec
        Start  62: VectorAPIUTest
 62/132 Test  #62: VectorAPIUTest ...................***Failed    5.25 sec
Running cxxtest tests (6 tests);;; note: auto-compilation is enabled, set GUILE_AUTO_COMPILE=0
;;;       or pass the --no-auto-compile argument to disable.
;;; compiling ../../../tests/matrix/basic-api.scm
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/persist.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/persist.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix/object-api.scm
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/exec.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/exec.scm.go
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix/object-api.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix/dynamic.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix/dynamic.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix/support.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix/support.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix/transpose.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix/transpose.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix/report-api.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix/report-api.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix/fold-api.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix/fold-api.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix/loop-api.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix/loop-api.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix/bin-count.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix/bin-count.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix/symmetric-mi.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix/symmetric-mi.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix/cosine.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix/cosine.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix/entropy.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix/entropy.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix/compute-mi.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix/compute-mi.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix/trans-batch.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix/trans-batch.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix/filter.scm
;;; opencog/matrix/filter.scm:129:28: warning: possibly unbound variable `PAIR'
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix/filter.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix/similarity-api.scm
;;; compiled [2019-01-21 22:35:12:562] [DEBUG] BEGIN TEST: test_basic
Load of data >>>
Got >>>#t
Got >>>#t
[2019-01-21 22:35:12:602] [DEBUG] END TEST: test_basic
.[2019-01-21 22:35:12:605] [DEBUG] BEGIN TEST: test_marginals
Load of data >>>
[2019-01-21 22:35:12:641] [ERROR] Cannot connect to database: could not connect to server: No such file or directory
	Is the server running locally and accepting
	connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?
 (/home/opencog/atomspace/opencog/persist/sql/multi-driver/ll-pg-cxx.cc:54)
	Stack Trace:
	2: Logger.cc:513	  opencog::Logger::logva(opencog::Logger::Level, char const*, __va_list_tag*)
	3: Logger.cc:525	  opencog::Logger::Error::operator()(char const*, ...)
	4: exceptions.cc:55	  opencog::StandardException::parse_error_message(char const*, __va_list_tag*, bool)
	5: exceptions.cc:82	  opencog::StandardException::parse_error_message(char const*, char const*, __va_list_tag*, bool)
	6: exceptions.cc:142	  opencog::RuntimeException::RuntimeException(char const*, char const*, ...)
	7: ll-pg-cxx.cc:55	  LLPGConnection::LLPGConnection(char const*)
	8: SQLAtomStorage.cc:106	  opencog::SQLAtomStorage::init(char const*)
	9: SQLAtomStorage.cc:161	  opencog::SQLAtomStorage::SQLAtomStorage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
	10: SQLPersistSCM.cc:98	  opencog::SQLPersistSCM::do_open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	11: SchemePrimitive.h:315	  void opencog::SchemePrimitiveBase<void, opencog::SQLPersistSCM, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>::conv_call_method<0ul>(scm_unused_struct*, std::integer_sequence<unsigned long, 0ul>)
	12: SchemePrimitive.cc:162	  opencog::PrimitiveEnviron::do_call(scm_unused_struct*, scm_unused_struct*)
	13: vm-engine.c:787	vm_regular_engine()
	14: vm.c:1258	scm_call_n()
	15: eval.c:502	scm_call_3()
	16: vm-engine.c:787	vm_regular_engine()
	17: vm.c:1258	scm_call_n()
	18: throw.c:139	catch()
	19: SchemeEval.cc:590	  opencog::SchemeEval::do_eval(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	20: SchemeEval.cc:509	  opencog::SchemeEval::c_wrap_eval(void*)
	21: continuations.c:422	c_body()
	22: vm-engine.c:787	vm_regular_engine()
	23: vm.c:1258	scm_call_n()
	24: throw.c:139	catch()
	25: continuations.c:367	scm_i_with_continuation_barrier()
	26: continuations.c:461	scm_c_with_continuation_barrier()
	27: [0x21c97] ??() ??:0
	28: threads.c:690	with_guile()
	29: [0x1bc62] ??() ??:0
	30: threads.c:711	scm_with_guile()
	31: SchemeEval.cc:480	  opencog::SchemeEval::eval_expr(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	32: SchemeEval.h:161	  opencog::SchemeEval::eval(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	33: basic_string.h:589	  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
	34: RealDescriptions.cpp:125	  CxxTest::RealTestDescription::run()
	35: TestRunner.h:104	  CxxTest::TestRunner::runTest(CxxTest::TestDescription&)
	36: VectorAPIUTest.cpp:20	main()
	37: [0x20830] ??() ??:0
	38: [0x40c2a9] ??() ??:0


In VectorAPIUTest::test_marginals:
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:176: Error: Test failed: Caught scm error during eval
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:176: Error: Assertion failed: (false == eval->eval_error())
[2019-01-21 22:35:12:761] [ERROR] No backing store (/home/opencog/atomspace/opencog/atomspace/AtomSpace.cc:335)
	Stack Trace:
	2: Logger.cc:513	  opencog::Logger::logva(opencog::Logger::Level, char const*, __va_list_tag*)
	3: Logger.cc:525	  opencog::Logger::Error::operator()(char const*, ...)
	4: exceptions.cc:55	  opencog::StandardException::parse_error_message(char const*, __va_list_tag*, bool)
	5: exceptions.cc:82	  opencog::StandardException::parse_error_message(char const*, char const*, __va_list_tag*, bool)
	6: exceptions.cc:142	  opencog::RuntimeException::RuntimeException(char const*, char const*, ...)
	7: AtomSpace.cc:338	  opencog::AtomSpace::store_atom(opencog::Handle const&)
	8: shared_ptr_base.h:923	  std::__shared_ptr<opencog::Atom, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<opencog::Atom, (__gnu_cxx::_Lock_policy)2> const&)
	9: shared_ptr_base.h:658	  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
	10: SchemePrimitive.cc:162	  opencog::PrimitiveEnviron::do_call(scm_unused_struct*, scm_unused_struct*)
	11: vm-engine.c:787	vm_regular_engine()
	12: vm.c:1258	scm_call_n()
	13: eval.c:502	scm_call_3()
	14: vm-engine.c:787	vm_regular_engine()
	15: vm.c:1258	scm_call_n()
	16: throw.c:139	catch()
	17: SchemeEval.cc:590	  opencog::SchemeEval::do_eval(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	18: SchemeEval.cc:509	  opencog::SchemeEval::c_wrap_eval(void*)
	19: continuations.c:422	c_body()
	20: vm-engine.c:787	vm_regular_engine()
	21: vm.c:1258	scm_call_n()
	22: throw.c:139	catch()
	23: continuations.c:367	scm_i_with_continuation_barrier()
	24: continuations.c:461	scm_c_with_continuation_barrier()
	25: [0x21c97] ??() ??:0
	26: threads.c:690	with_guile()
	27: [0x1bc62] ??() ??:0
	28: threads.c:711	scm_with_guile()
	29: SchemeEval.cc:480	  opencog::SchemeEval::eval_expr(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	30: SchemeEval.h:161	  opencog::SchemeEval::eval(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	31: basic_string.h:589	  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
	32: RealDescriptions.cpp:125	  CxxTest::RealTestDescription::run()
	33: TestRunner.h:104	  CxxTest::TestRunner::runTest(CxxTest::TestDescription&)
	34: VectorAPIUTest.cpp:20	main()
	35: [0x20830] ??() ??:0
	36: [0x40c2a9] ??() ??:0

Batch >>>Start computing the basis
Support: found num left= 3 num right= 4 in 0 secs
Finished left norm marginals in 0 secs
Finished left totals in 0 secs
Finished right norm marginals in 0 secs
Finished right totals in 0 secs
Done with wild-card count N(x,*) and N(*,y) in 0 secs
Total count N(*,*) = 22.0 = 22.0
Finished column (left) norm averages in 0 secs
Finished row (right) norm averages in 0 secs
Going to do individual pair frequencies
Done computing 7 pairs in 0 secs
Start computing log P(*,y)
Done computing 4 left-wilds in 0 secs
Done with -log P(*,y), start -log P(x,*)
Done computing 3 right-wilds in 0 secs
Backtrace:
           8 (apply-smob/1 #<catch-closure 1f9cd00>)
           7 (apply-smob/1 #<catch-closure 1f9cc00>)
In ice-9/boot-9.scm:
   2312:4  6 (save-module-excursion #<procedure 1f7d3e0 at ice-9/evaâ¦>)
In ice-9/eval-string.scm:
     38:6  5 (read-and-eval #<input: string 1f7e070> #:lang _)
In opencog/matrix/compute-mi.scm:
    577:8  4 (batch-all-pair-mi _)
   427:24  3 (_ _ . _)
In unknown file:
           2 (opencog-extension store-atom (#))
In ice-9/boot-9.scm:
   751:25  1 (dispatch-exception 0 C++-EXCEPTION ("store-atom" "Noâ¦"))
In unknown file:
           0 (apply-smob/1 #<catch-closure 1f9cbc0> C++-EXCEPTION "â¦" â¦)

ERROR: In procedure apply-smob/1:
In procedure store-atom: No backing store (/home/opencog/atomspace/opencog/atomspace/AtomSpace.cc:335)
Function args:
((EvaluationLink (ctv 0 0 22)
   (PredicateNode "foo")
   (ListLink
      (AnyNode "left-wild")
      (AnyNode "right-wild")
   )
)
)
ABORT: C++-EXCEPTION
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:181: Error: Test failed: Caught scm error during eval
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:181: Error: Assertion failed: (false == eval->eval_error())
[2019-01-21 22:35:12:862] [ERROR] sql-close: Error: Database not open (/home/opencog/atomspace/opencog/persist/sql/multi-driver/SQLPersistSCM.cc:118)
	Stack Trace:
	2: Logger.cc:513	  opencog::Logger::logva(opencog::Logger::Level, char const*, __va_list_tag*)
	3: Logger.cc:525	  opencog::Logger::Error::operator()(char const*, ...)
	4: exceptions.cc:55	  opencog::StandardException::parse_error_message(char const*, __va_list_tag*, bool)
	5: exceptions.cc:82	  opencog::StandardException::parse_error_message(char const*, char const*, __va_list_tag*, bool)
	6: exceptions.cc:142	  opencog::RuntimeException::RuntimeException(char const*, char const*, ...)
	7: SQLPersistSCM.cc:119	  opencog::SQLPersistSCM::do_close()
	8: SchemePrimitive.h:433	  opencog::SchemePrimitive<void, opencog::SQLPersistSCM>::invoke(scm_unused_struct*)
	9: SchemePrimitive.cc:162	  opencog::PrimitiveEnviron::do_call(scm_unused_struct*, scm_unused_struct*)
	10: vm-engine.c:787	vm_regular_engine()
	11: vm.c:1258	scm_call_n()
	12: eval.c:502	scm_call_3()
	13: vm-engine.c:787	vm_regular_engine()
	14: vm.c:1258	scm_call_n()
	15: throw.c:139	catch()
	16: SchemeEval.cc:590	  opencog::SchemeEval::do_eval(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	17: SchemeEval.cc:509	  opencog::SchemeEval::c_wrap_eval(void*)
	18: continuations.c:422	c_body()
	19: vm-engine.c:787	vm_regular_engine()
	20: vm.c:1258	scm_call_n()
	21: throw.c:139	catch()
	22: continuations.c:367	scm_i_with_continuation_barrier()
	23: continuations.c:461	scm_c_with_continuation_barrier()
	24: [0x21c97] ??() ??:0
	25: threads.c:690	with_guile()
	26: [0x1bc62] ??() ??:0
	27: threads.c:711	scm_with_guile()
	28: SchemeEval.cc:480	  opencog::SchemeEval::eval_expr(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	29: SchemeEval.h:161	  opencog::SchemeEval::eval(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	30: basic_string.h:589	  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
	31: RealDescriptions.cpp:125	  CxxTest::RealTestDescription::run()
	32: TestRunner.h:104	  CxxTest::TestRunner::runTest(CxxTest::TestDescription&)
	33: VectorAPIUTest.cpp:20	main()
	34: [0x20830] ??() ??:0
	35: [0x40c2a9] ??() ??:0

/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:184: Error: Test failed: Caught scm error during eval
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:184: Error: Assertion failed: (false == eval->eval_error())
---------------------------------------------------------
Expect Left size=3 got=3
Expect Right size=4 got=4
Expect Wild-wild count=22 got=22.0
Expect chicken stars=3 got=3
Expect dog stars=3 got=3
Expect table stars=1 got=1
Expect legs stars=3 got=3
Expect eyes stars=2 got=2
Expect wings stars=1 got=1
Expect snouts stars=1 got=1
---------------------------------------------------------
Expect chicken support=3 got=3.0
Expect dog support=3 got=3.0
Expect table support=1 got=1.0
Expect legs support=3 got=3.0
Expect eyes support=2 got=2.0
Expect wings support=1 got=1.0
Expect snouts support=1 got=1.0
---------------------------------------------------------
Expect chicken count=11 got=11.0
Expect dog count=7 got=7.0
Expect table count=4 got=4.0
Expect legs count=11 got=11.0
Expect eyes count=4 got=4.0
Expect wings count=6 got=6.0
Expect snouts count=1 got=1.0
---------------------------------------------------------
Expect chicken support set size=3 got=3
Expect chicken support=3 got=3
Expect dog support=3 got=3
Expect table support=1 got=1
Expect legs stars=3 got=3
Expect wings stars=1 got=1
Expect eyes stars=2 got=2
Expect snouts stars=1 got=1
Expect total support left=7 got=7.0
Expect total support right=7 got=7.0
Expect total count left=22 got=22.0
Expect total count right=22 got=22.0
---------------------------------------------------------
Expect chicken wild-freq=0.500000 got=0.5
Expect dog wild-freq=0.318182 got=0.3181818181818182
Expect table wild-freq=0.181818 got=0.18181818181818182
---------------------------------------------------------
Expect total right support=2.636364 got=2.6363636363636362
Expect total left support=2.181818 got=2.1818181818181817
Expect total right count=8.454545 got=8.454545454545455
Expect total left count=7.909091 got=7.909090909090909
---------------------------------------------------------
Expect left dimension=3 got=3
Expect right dimension=4 got=4
Expect num-pairs=7 got=7
Expect total-count=22 got=22.0
Expect report right support=2.636364 got=2.6363636363636362
Expect report left support=2.181818 got=2.1818181818181817
Expect report right count=8.454545 got=8.454545454545455
Expect report left count=7.909091 got=7.909090909090909
---------------------------------------------------------
Expect chicken wild-mi=0.153481 got=Backtrace:
           6 (apply-smob/1 #<catch-closure 164f8e0>)
           5 (apply-smob/1 #<catch-closure 164f7e0>)
In ice-9/boot-9.scm:
   2312:4  4 (save-module-excursion #<procedure 1659fe0 at ice-9/evaâ¦>)
In ice-9/eval-string.scm:
     38:6  3 (read-and-eval #<input: string 1ba0380> #:lang _)
In unknown file:
           2 (scm-error misc-error #f "~A ~S" ("No such value! Dâ¦" â¦) â¦)
In ice-9/boot-9.scm:
   751:25  1 (dispatch-exception 0 misc-error (#f "~A ~S" ("Noâ¦" â¦) â¦))
In unknown file:
           0 (apply-smob/1 #<catch-closure 164f780> misc-error #f "â¦" â¦)

ERROR: In procedure apply-smob/1:
No such value! Did you forget to compute frequencies?
 (EvaluationLink
   (PredicateNode "foo")
   (ListLink
      (WordNode "chicken")
      (AnyNode "right-wild")
   )
)

ABORT: misc-error
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:373: Error: Test failed: Caught scm error during eval
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:373: Error: Assertion failed: (false == eval->eval_error())
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:373: Error: Test failed: chicken wild-mi
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:373: Error: Expected (chmi-1.0e-9 < atof(num.c_str())), found (0.1534 >= 0.0000)
Expect dog wild-mi=0.169400 got=Backtrace:
           6 (apply-smob/1 #<catch-closure 12e6a20>)
           5 (apply-smob/1 #<catch-closure 12e6920>)
In ice-9/boot-9.scm:
   2312:4  4 (save-module-excursion #<procedure 13d00c0 at ice-9/evaâ¦>)
In ice-9/eval-string.scm:
     38:6  3 (read-and-eval #<input: string 16c10e0> #:lang _)
In unknown file:
           2 (scm-error misc-error #f "~A ~S" ("No such value! Dâ¦" â¦) â¦)
In ice-9/boot-9.scm:
   751:25  1 (dispatch-exception 0 misc-error (#f "~A ~S" ("Noâ¦" â¦) â¦))
In unknown file:
           0 (apply-smob/1 #<catch-closure 12e68e0> misc-error #f "â¦" â¦)

ERROR: In procedure apply-smob/1:
No such value! Did you forget to compute frequencies?
 (EvaluationLink
   (PredicateNode "foo")
   (ListLink
      (WordNode "dog")
      (AnyNode "right-wild")
   )
)

ABORT: misc-error
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:383: Error: Test failed: Caught scm error during eval
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:383: Error: Assertion failed: (false == eval->eval_error())
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:383: Error: Test failed: dog wild-mi
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:383: Error: Expected (domi-1.0e-9 < atof(num.c_str())), found (0.1694 >= 0.0000)
Expect table wild-mi=0.181818 got=Backtrace:
           6 (apply-smob/1 #<catch-closure 15873a0>)
           5 (apply-smob/1 #<catch-closure 15872a0>)
In ice-9/boot-9.scm:
   2312:4  4 (save-module-excursion #<procedure 161c7e0 at ice-9/evaâ¦>)
In ice-9/eval-string.scm:
     38:6  3 (read-and-eval #<input: string 16d6e00> #:lang _)
In unknown file:
           2 (scm-error misc-error #f "~A ~S" ("No such value! Dâ¦" â¦) â¦)
In ice-9/boot-9.scm:
   751:25  1 (dispatch-exception 0 misc-error (#f "~A ~S" ("Noâ¦" â¦) â¦))
In unknown file:
           0 (apply-smob/1 #<catch-closure 1587260> misc-error #f "â¦" â¦)

ERROR: In procedure apply-smob/1:
No such value! Did you forget to compute frequencies?
 (EvaluationLink
   (PredicateNode "foo")
   (ListLink
      (WordNode "table")
      (AnyNode "right-wild")
   )
)

ABORT: misc-error
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:393: Error: Test failed: Caught scm error during eval
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:393: Error: Assertion failed: (false == eval->eval_error())
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:393: Error: Test failed: table wild-mi
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:393: Error: Expected (tami-1.0e-9 < atof(num.c_str())), found (0.1818 >= 0.0000)
Expect report total mi=0.504700 got=Backtrace:
           6 (apply-smob/1 #<catch-closure 17c3cc0>)
           5 (apply-smob/1 #<catch-closure 17c3bc0>)
In ice-9/boot-9.scm:
   2312:4  4 (save-module-excursion #<procedure 17c4f60 at ice-9/evaâ¦>)
In ice-9/eval-string.scm:
     38:6  3 (read-and-eval #<input: string 17bfb60> #:lang _)
In unknown file:
           2 (cog-value-ref () 0)
In ice-9/boot-9.scm:
   751:25  1 (dispatch-exception 0 wrong-type-arg ("cog-value-ref" â¦))
In unknown file:
           0 (apply-smob/1 #<catch-closure 17c3b80> wrong-type-arg # â¦)

ERROR: In procedure apply-smob/1:
In procedure cog-value-ref: Wrong type argument in position 1 (expecting opencog value): ()
ABORT: wrong-type-arg
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:396: Error: Test failed: Caught scm error during eval
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:396: Error: Assertion failed: (false == eval->eval_error())
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:396: Error: Test failed: report total mi
/home/opencog/atomspace/build/tests/matrix/../../../tests/matrix/VectorAPIUTest.cxxtest:396: Error: Expected (chmi+domi+tami-1.0e-9 < atof(num.c_str())), found (0.5047 >= 0.0000)
[2019-01-21 22:35:12:982] [DEBUG] END TEST: test_marginals
[2019-01-21 22:35:12:986] [DEBUG] BEGIN TEST: test_cosines
Load of data >>>
Expect product (table,dog)=16.000000 got=16.0
Expect cosine (table,dog)=0.872872 got=0.8728715609439696
Expect product (chicken,table)=12.000000 got=12.0
Expect cosine (chicken,table)=0.428571 got=0.42857142857142855
Expect product (chicken,dog)=16.000000 got=16.0
Expect cosine (chicken,dog)=0.498784 got=0.4987837491108398
[2019-01-21 22:35:12:988] [DEBUG] END TEST: test_cosines
.[2019-01-21 22:35:12:990] [DEBUG] BEGIN TEST: test_fold
Load of data >>>
Expect length (table - dog)=2.236068 got=2.23606797749979
Expect length (chicken - dog)=6.164414 got=6.164414002968976
[2019-01-21 22:35:12:991] [DEBUG] END TEST: test_fold
.[2019-01-21 22:35:12:994] [DEBUG] BEGIN TEST: test_transpose
Load of data >>>
Support compute >>>Finished left norm marginals in 0 secs
Finished left totals in 0 secs
Finished right norm marginals in 0 secs
Finished right totals in 0 secs
#t
Transpose compute >>>Finished mmt norm marginals in 0 secs
Finished mmt totals in 0 secs
Finished mtm norm marginals in 0 secs
Finished mtm totals in 0 secs
#t
Expect mmt chicken =77.000000 got=77.0
Expect mmt dog =53.000000 got=53.0
Expect mmt table =44.000000 got=44.0
Expect mtm legs =77.000000 got=77.0
Expect mtm eyes =36.000000 got=36.0
Expect mtm wings =66.000000 got=66.0
Expect mtm snouts =7.000000 got=7.0
Expect api mmt chicken =77.000000 got=77.0
Expect api mmt dog =53.000000 got=53.0
Expect api mmt table =44.000000 got=44.0
Expect api mtm legs =77.000000 got=77.0
Expect api mtm eyes =36.000000 got=36.0
Expect api mtm wings =66.000000 got=66.0
Expect api mtm snouts =7.000000 got=7.0
Expect total-mmt =174.000000 got=174.0
Expect total-mtm =186.000000 got=186.0
Expect total-mmt =174.000000 got=174.0
Expect total-mtm =186.000000 got=186.0
[2019-01-21 22:35:12:998] [DEBUG] END TEST: test_transpose
.[2019-01-21 22:35:13:002] [DEBUG] BEGIN TEST: test_symmetric_mi
Load of data >>>
Support compute >>>Finished left norm marginals in 0 secs
Finished left totals in 0 secs
Finished right norm marginals in 0 secs
Finished right totals in 0 secs
#t
Transpose compute >>>Finished mmt norm marginals in 0 secs
Finished mmt totals in 0 secs
Finished mtm norm marginals in 0 secs
Finished mtm totals in 0 secs
#t
Expect chicken-dog fmi=-0.551763 got=-0.5517634994093722
Expect chicken-dog fmi again=-0.551763 got=-0.5517634994093722
Expect chicken-table fmi=-0.698312 got=-0.6983121627623141
Expect dog-table fmi=0.255591 got=0.25559142264823176
Expect chicken-chicken fmi=0.524080 got=0.5240802585741339
Expect dog-dog fmi=0.379420 got=0.3794200095010901
Expect table-table fmi=0.524080 got=0.5240802585741339
Expect wings-eyes fmi=-0.090198 got=-0.09019780897157814
Expect eyes-wings=-0.090198 got=-0.09019780897157814
Expect wings-eyes fmi=-0.090198 got=-0.09019780897157814
Expect eyes-legs fmi=-0.090198 got=-0.09019780897157814
Expect eyes-snouts fmi=0.561879 got=0.561878887608115
Expect wings-wings fmi=0.620296 got=0.6202955738334369
Expect wings-legs fmi=-0.602097 got=-0.6020968475030112
Expect legs-legs fmi=0.363138 got=0.36313773433631225
Expect legs-snouts fmi=0.465017 got=0.465017348355526
Expect snouts-snouts fmi=1.924449 got=1.9244489669928233
[2019-01-21 22:35:13:013] [DEBUG] END TEST: test_symmetric_mi
.
Failed 1 and Skipped 0 of 6 tests
Success rate: 83%
/home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix/similarity-api.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/matrix/thresh-pca.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/matrix/thresh-pca.scm.go
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/tests/matrix/basic-api.scm.go
;;; compiling ../../../tests/matrix/basic-data.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/tests/matrix/basic-data.scm.go
;;; compiling /home/opencog/atomspace/build/opencog/scm/opencog/persist-sql.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/atomspace/build/opencog/scm/opencog/persist-sql.scm.go

        Start  63: PatternUTest
 63/132 Test  #63: PatternUTest .....................   Passed    0.01 sec
        Start  64: StackUTest
 64/132 Test  #64: StackUTest .......................   Passed    0.01 sec
        Start  65: BigPatternUTest
 65/132 Test  #65: BigPatternUTest ..................   Passed    0.01 sec
        Start  66: BiggerPatternUTest
 66/132 Test  #66: BiggerPatternUTest ...............   Passed    0.01 sec
        Start  67: LoopPatternUTest
 67/132 Test  #67: LoopPatternUTest .................   Passed    0.02 sec
        Start  68: BooleanUTest
 68/132 Test  #68: BooleanUTest .....................   Passed    0.01 sec
        Start  69: Boolean2NotUTest
 69/132 Test  #69: Boolean2NotUTest .................   Passed    0.01 sec
        Start  70: ConstantClausesUTest
 70/132 Test  #70: ConstantClausesUTest .............   Passed    0.40 sec
        Start  71: PatternCrashUTest
 71/132 Test  #71: PatternCrashUTest ................   Passed    0.19 sec
        Start  72: DisconnectedUTest
 72/132 Test  #72: DisconnectedUTest ................   Passed    0.62 sec
        Start  73: ImplicationUTest
 73/132 Test  #73: ImplicationUTest .................   Passed    0.19 sec
        Start  74: ExecutionOutputUTest
 74/132 Test  #74: ExecutionOutputUTest .............   Passed    0.21 sec
        Start  75: BindTVUTest
 75/132 Test  #75: BindTVUTest ......................   Passed    0.22 sec
        Start  76: EvalLinkDefaultTVUTest
 76/132 Test  #76: EvalLinkDefaultTVUTest ...........   Passed    0.24 sec
        Start  77: BuggyStackUTest
 77/132 Test  #77: BuggyStackUTest ..................   Passed    0.33 sec
        Start  78: VarTypeNotUTest
 78/132 Test  #78: VarTypeNotUTest ..................   Passed    0.31 sec
        Start  79: BuggyNotUTest
 79/132 Test  #79: BuggyNotUTest ....................   Passed    0.30 sec
        Start  80: MatchLinkUTest
 80/132 Test  #80: MatchLinkUTest ...................   Passed    0.41 sec
        Start  81: UnorderedUTest
 81/132 Test  #81: UnorderedUTest ...................   Passed    0.71 sec
        Start  82: StackMoreUTest
 82/132 Test  #82: StackMoreUTest ...................   Passed    2.31 sec
        Start  83: GlobUTest
 83/132 Test  #83: GlobUTest ........................   Passed    1.16 sec
        Start  84: RecognizerUTest
 84/132 Test  #84: RecognizerUTest ..................   Passed    0.35 sec
        Start  85: ArcanaUTest
 85/132 Test  #85: ArcanaUTest ......................   Passed    4.59 sec
        Start  86: SubstitutionUTest
 86/132 Test  #86: SubstitutionUTest ................   Passed    0.29 sec
        Start  87: GetLinkUTest
 87/132 Test  #87: GetLinkUTest .....................   Passed    0.36 sec
        Start  88: NotLinkUTest
 88/132 Test  #88: NotLinkUTest .....................   Passed    0.19 sec
        Start  89: GetStateUTest
 89/132 Test  #89: GetStateUTest ....................   Passed    1.13 sec
        Start  90: DeepTypeUTest
 90/132 Test  #90: DeepTypeUTest ....................   Passed    0.31 sec
        Start  91: GreaterThanUTest
 91/132 Test  #91: GreaterThanUTest .................   Passed    0.35 sec
        Start  92: GreaterComputeUTest
 92/132 Test  #92: GreaterComputeUTest ..............   Passed    0.28 sec
        Start  93: SequenceUTest
 93/132 Test  #93: SequenceUTest ....................   Passed    0.47 sec
        Start  94: EvaluationUTest
 94/132 Test  #94: EvaluationUTest ..................   Passed    0.52 sec
        Start  95: DontExecUTest
 95/132 Test  #95: DontExecUTest ....................   Passed    0.35 sec
        Start  96: QuoteUTest
 96/132 Test  #96: QuoteUTest .......................   Passed    0.62 sec
        Start  97: UnquoteUTest
 97/132 Test  #97: UnquoteUTest .....................   Passed    0.02 sec
        Start  98: LocalQuoteUTest
 98/132 Test  #98: LocalQuoteUTest ..................   Passed    0.01 sec
        Start  99: BuggyLinkUTest
 99/132 Test  #99: BuggyLinkUTest ...................   Passed    0.24 sec
        Start 100: BuggyQuoteUTest
100/132 Test #100: BuggyQuoteUTest ..................   Passed    0.26 sec
        Start 101: BuggyEqualUTest
101/132 Test #101: BuggyEqualUTest ..................   Passed    0.32 sec
        Start 102: BuggySelfGroundUTest
102/132 Test #102: BuggySelfGroundUTest .............   Passed    0.22 sec
        Start 103: BuggyBindLinkUTest
103/132 Test #103: BuggyBindLinkUTest ...............   Passed    0.27 sec
        Start 104: ChoiceLinkUTest
104/132 Test #104: ChoiceLinkUTest ..................   Passed    0.94 sec
        Start 105: DefineUTest
105/132 Test #105: DefineUTest ......................   Passed    0.31 sec
        Start 106: FiniteStateMachineUTest
106/132 Test #106: FiniteStateMachineUTest ..........   Passed    0.25 sec
        Start 107: AbsentUTest
107/132 Test #107: AbsentUTest ......................   Passed    0.50 sec
        Start 108: SingleUTest
108/132 Test #108: SingleUTest ......................   Passed    0.24 sec
        Start 109: ScopeUTest
109/132 Test #109: ScopeUTest .......................   Passed    0.69 sec
        Start 110: NestedPutUTest
110/132 Test #110: NestedPutUTest ...................   Passed    0.23 sec
        Start 111: FirstNUTest
111/132 Test #111: FirstNUTest ......................   Passed    0.32 sec
        Start 112: SudokuUTest
112/132 Test #112: SudokuUTest ......................   Passed    0.45 sec
        Start 113: EinsteinUTest
113/132 Test #113: EinsteinUTest ....................   Passed    2.37 sec
        Start 114: TypeChoiceUTest
114/132 Test #114: TypeChoiceUTest ..................   Passed    0.01 sec
        Start 115: NoExceptionUTest
115/132 Test #115: NoExceptionUTest .................   Passed    0.27 sec
        Start 116: UREConfigUTest
116/132 Test #116: UREConfigUTest ...................   Passed    0.38 sec
        Start 117: BetaDistributionUTest
117/132 Test #117: BetaDistributionUTest ............   Passed    0.01 sec
        Start 118: ActionSelectionUTest
118/132 Test #118: ActionSelectionUTest .............   Passed    0.01 sec
        Start 119: RuleUTest
119/132 Test #119: RuleUTest ........................   Passed    0.71 sec
        Start 120: ForwardChainerUTest
120/132 Test #120: ForwardChainerUTest ..............   Passed    0.81 sec
        Start 121: BackwardChainerUTest
121/132 Test #121: BackwardChainerUTest .............   Passed    3.50 sec
        Start 122: ControlPolicyUTest
122/132 Test #122: ControlPolicyUTest ...............   Passed    0.34 sec
        Start 123: BITUTest
123/132 Test #123: BITUTest .........................   Passed    1.65 sec
        Start 124: GradientUTest
124/132 Test #124: GradientUTest ....................   Passed    0.02 sec
        Start 125: PythonEvalUTest
125/132 Test #125: PythonEvalUTest ..................   Passed    0.35 sec
        Start 126: PythonUtilitiesUTest
126/132 Test #126: PythonUtilitiesUTest .............   Passed    0.04 sec
        Start 127: Cython
127/132 Test #127: Cython ...........................   Passed    1.82 sec
        Start 128: CythonAtomSpace
128/132 Test #128: CythonAtomSpace ..................   Passed    1.16 sec
        Start 129: CythonUtilities
129/132 Test #129: CythonUtilities ..................   Passed    0.16 sec
        Start 130: CythonBindlink
130/132 Test #130: CythonBindlink ...................   Passed    0.14 sec
        Start 131: CythonBackwardchainer
131/132 Test #131: CythonBackwardchainer ............   Passed    0.59 sec
        Start 132: CythonGuile
132/132 Test #132: CythonGuile ......................   Passed    0.36 sec

99% tests passed, 1 tests failed out of 132

Total Test time (real) = 104.01 sec

The following tests FAILED:
	 62 - VectorAPIUTest (Failed)
Errors while running CTest
make[3]: *** [CMakeFiles/test] Error 8
CMakeFiles/test.dir/build.make:57: recipe for target 'CMakeFiles/test' failed
CMakeFiles/Makefile2:99: recipe for target 'CMakeFiles/test.dir/all' failed
make[2]: *** [CMakeFiles/test.dir/all] Error 2
make[1]: *** [CMakeFiles/test.dir/rule] Error 2
CMakeFiles/Makefile2:106: recipe for target 'CMakeFiles/test.dir/rule' failed
Makefile:197: recipe for target 'test' failed
make: *** [test] Error 2
*#*#*# BENCHMARK START
Uptime:  22:35:50 up 134 days,  4:54,  0 users,  load average: 2.47, 4.97, 5.24
python: can't open file '../opencog/benchmark/benchmark.py': [Errno 2] No such file or directory

( This is not a dedicated machine)
*#*#*# BENCHMARK END
+ DSTATUS=TESTPASS
+ /var/lib/jenkins/status/updateStatus TESTPASS /var/lib/jenkins/jobs/OpenCOG_U1604_AtomSpace/builds/423/log OpenCOG_U1604_AtomSpace
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
error: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

error: pack-objects died of signal 15
error: failed to run repack

Already up-to-date.
