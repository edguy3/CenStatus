Started by user [8mha:////4L2jTPWu9zIb56dnp8RqVObesKKV2DVGI0jJXlam1DqAAAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAzWEgZu/dLi1CL9xJTczDwAj6GcLcAAAAA=[0madmin
Building in workspace /var/lib/jenkins/workspace/OpenCOG_DebStab_Opencog
[OpenCOG_DebStab_Opencog] $ /bin/sh -xe /tmp/jenkins4343266337959384722.sh
+ COGDIR=../OpenCOG_DebStab
+ . ../OpenCOG_DebStab/build.docker/docker.env
+ CID=548fb64b719b352a7143b9cc05273e75ea1e82e303c88b7b70c6ddd56304814d
+ DKRUNROOT=docker exec --user root   548fb64b719b352a7143b9cc05273e75ea1e82e303c88b7b70c6ddd56304814d
+ DKRUNUSER=docker exec --user jenkins  548fb64b719b352a7143b9cc05273e75ea1e82e303c88b7b70c6ddd56304814d
+ UID=125
+ GID=132
+ LOGFILE=/var/lib/jenkins/jobs/OpenCOG_DebStab_Opencog/builds/72/log
+ cat


**********************************************************
**********************************************************
**********************************************************
**********************************************************
*****                                                *****
*****                  Opencog TEST                *****
*****                                                *****
**********************************************************
**********************************************************
**********************************************************
**********************************************************


+ echo GIT_COMMIT=
GIT_COMMIT=
+ echo GIT_BRANCH=
GIT_BRANCH=
+ echo GIT_URL=
GIT_URL=
+ WDIR=opencog/
+ JOBDIR=../OpenCOG_DebStab/dependencies
+ cat
+ chmod +x ../OpenCOG_DebStab/dependencies/job1
+ docker exec --user jenkins 548fb64b719b352a7143b9cc05273e75ea1e82e303c88b7b70c6ddd56304814d bash dependencies/job1
+ cd opencog/
+ cd build
+ make -j8 test
[  1%] Generating PLNRulesUTest.cpp
[  1%] Generating MOSESPLNSynergyUTest.cpp
[  3%] Built target nlp_atom_types
[  5%] Built target attention_atom_types
[  8%] Built target json_spirit
[ 12%] Built target xpatternminer
[ 15%] Built target openpsi
[ 17%] Built target dimensionalembedding
[ 17%] Built target spacetime_atom_types
[ 17%] Generating XPatternMinerUTest.cpp
[ 19%] Built target statistics
[ 21%] Generating UREPatternMinerUTest.cpp
[ 22%] Built target patternminer_atom_types
[ 24%] Built target nlp-types
[ 26%] Built target attention-types
[ 26%] Generating OpenPsiSCMUTest.cpp
[ 35%] Built target patternindex
[ 36%] Built target atomspacepublishermodule
[ 38%] Generating OpenPsiImplicatorUTest.cpp
Scanning dependencies of target MOSESPLNSynergyUTest
Scanning dependencies of target PLNRulesUTest
[ 38%] Generating OpenPsiRulesUTest.cpp
[ 38%] Generating StatisticsUTest.cpp
[ 40%] Building CXX object tests/pln/CMakeFiles/MOSESPLNSynergyUTest.dir/MOSESPLNSynergyUTest.cpp.o
Scanning dependencies of target XPatternMinerUTest
[ 40%] Building CXX object tests/pln/rules/CMakeFiles/PLNRulesUTest.dir/PLNRulesUTest.cpp.o
[ 42%] Building CXX object tests/learning/xpattern-miner/c++-based/CMakeFiles/XPatternMinerUTest.dir/XPatternMinerUTest.cpp.o
Scanning dependencies of target UREPatternMinerUTest
Scanning dependencies of target OpenPsiSCMUTest
[ 42%] Building CXX object tests/learning/xpattern-miner/ure-based/CMakeFiles/UREPatternMinerUTest.dir/UREPatternMinerUTest.cpp.o
Scanning dependencies of target StatisticsUTest
Scanning dependencies of target OpenPsiImplicatorUTest
[ 43%] Building CXX object tests/learning/statistics/CMakeFiles/StatisticsUTest.dir/StatisticsUTest.cpp.o
Scanning dependencies of target OpenPsiRulesUTest
[ 45%] Building CXX object tests/openpsi/CMakeFiles/OpenPsiSCMUTest.dir/OpenPsiSCMUTest.cpp.o
[ 45%] Building CXX object tests/openpsi/CMakeFiles/OpenPsiImplicatorUTest.dir/OpenPsiImplicatorUTest.cpp.o
[ 45%] Building CXX object tests/openpsi/CMakeFiles/OpenPsiRulesUTest.dir/OpenPsiRulesUTest.cpp.o
[ 45%] Linking CXX executable StatisticsUTest
[ 45%] Built target StatisticsUTest
[ 47%] Built target patternminer-types
[ 47%] Generating PatternIndexAPIUTest.cpp
Scanning dependencies of target PatternIndexAPIUTest
[ 49%] Building CXX object tests/learning/pattern-index/CMakeFiles/PatternIndexAPIUTest.dir/PatternIndexAPIUTest.cpp.o
[ 49%] Linking CXX executable OpenPsiSCMUTest
[ 49%] Built target OpenPsiSCMUTest
[ 50%] Linking CXX executable OpenPsiRulesUTest
[ 61%] Built target server
[ 66%] Built target PatternMiner
[ 66%] Built target OpenPsiRulesUTest
[ 77%] Built target attention
[ 77%] Generating AtomSpacePublisherModuleUTest.cpp
[ 77%] Generating AgentUTest.cpp
Scanning dependencies of target AtomSpacePublisherModuleUTest
Scanning dependencies of target AgentUTest
[ 77%] Building CXX object tests/server/CMakeFiles/AgentUTest.dir/AgentUTest.cpp.o
[ 78%] Building CXX object tests/persist/zmq/events/CMakeFiles/AtomSpacePublisherModuleUTest.dir/AtomSpacePublisherModuleUTest.cpp.o
[ 80%] Linking CXX executable OpenPsiImplicatorUTest
[ 80%] Linking CXX executable MOSESPLNSynergyUTest
[ 80%] Built target OpenPsiImplicatorUTest
[ 82%] Generating ShellUTest.cpp
[ 82%] Built target MOSESPLNSynergyUTest
Scanning dependencies of target ShellUTest
[ 82%] Building CXX object tests/server/CMakeFiles/ShellUTest.dir/ShellUTest.cpp.o
[ 82%] Generating CogServerUTest.cpp
Scanning dependencies of target CogServerUTest
[ 84%] Building CXX object tests/server/CMakeFiles/CogServerUTest.dir/CogServerUTest.cpp.o
[ 85%] Linking CXX executable PLNRulesUTest
[ 87%] Linking CXX executable UREPatternMinerUTest
[ 87%] Built target PLNRulesUTest
[ 89%] Generating DimEmbedUTest.cpp
Scanning dependencies of target DimEmbedUTest
[ 89%] Built target UREPatternMinerUTest
[ 91%] Generating PatternMinerUTest.cpp
[ 91%] Building CXX object tests/learning/dimensionalembedding/CMakeFiles/DimEmbedUTest.dir/DimEmbedUTest.cpp.o
Scanning dependencies of target PatternMinerUTest
[ 91%] Building CXX object tests/learning/PatternMiner/CMakeFiles/PatternMinerUTest.dir/PatternMinerUTest.cpp.o
[ 91%] Linking CXX executable PatternIndexAPIUTest
CMakeFiles/PatternIndexAPIUTest.dir/PatternIndexAPIUTest.cpp.o: In function `PatternIndexAPIUTest::PatternIndexAPIUTest()':
/home/opencog/opencog/build/tests/learning/pattern-index/../../../../tests/learning/pattern-index/PatternIndexAPIUTest.cxxtest:76: warning: the use of `tmpnam' is dangerous, better use `mkstemp'
[ 91%] Built target PatternIndexAPIUTest
[ 92%] Generating AttentionParamQueryUTest.cpp
Scanning dependencies of target AttentionParamQueryUTest
[ 92%] Building CXX object tests/attention/CMakeFiles/AttentionParamQueryUTest.dir/AttentionParamQueryUTest.cpp.o
[ 92%] Linking CXX executable XPatternMinerUTest
[ 92%] Built target XPatternMinerUTest
[ 94%] Linking CXX executable AgentUTest
[ 94%] Built target AgentUTest
[ 96%] Linking CXX executable ShellUTest
[ 96%] Built target ShellUTest
[ 96%] Linking CXX executable PatternMinerUTest
[ 96%] Linking CXX executable CogServerUTest
[ 96%] Built target PatternMinerUTest
[ 96%] Built target CogServerUTest
[ 98%] Linking CXX executable AttentionParamQueryUTest
[ 98%] Built target AttentionParamQueryUTest
[100%] Linking CXX executable DimEmbedUTest
[100%] Built target DimEmbedUTest
[100%] Linking CXX executable AtomSpacePublisherModuleUTest
[100%] Built target AtomSpacePublisherModuleUTest
Scanning dependencies of target tests
[100%] Built target tests
Scanning dependencies of target test
[100%] Running tests...
Test project /home/opencog/opencog/build/tests
      Start  1: AttentionParamQueryUTest
 1/16 Test  #1: AttentionParamQueryUTest .........   Passed    0.02 sec
      Start  2: AtomSpacePublisherModuleUTest
 2/16 Test  #2: AtomSpacePublisherModuleUTest ....***Exception: SegFault  0.30 sec
Running cxxtest tests (1 test)[2018-02-28 11:25:03:005] [INFO] Using config file found at: /home/opencog/opencog/build/tests/persist/zmq/events/../../../../lib/opencog-test.conf

[2018-02-28 11:25:03:005] [DEBUG] [SystemActivityTable] constructor
[2018-02-28 11:25:03:187] [INFO] [global_python_initialize] Start
[2018-02-28 11:25:03:225] [INFO] [global_python_initialize] Adding OpenCog sys.path directories
[2018-02-28 11:25:03:225] [DEBUG] Python 'sys.path' is:
[2018-02-28 11:25:03:225] [DEBUG]      0 > /usr/local/share/opencog/python
[2018-02-28 11:25:03:225] [DEBUG]      1 > /usr/lib/python2.7
[2018-02-28 11:25:03:225] [DEBUG]      2 > /usr/lib/python2.7/plat-x86_64-linux-gnu
[2018-02-28 11:25:03:225] [DEBUG]      3 > /usr/lib/python2.7/lib-tk
[2018-02-28 11:25:03:225] [DEBUG]      4 > /usr/lib/python2.7/lib-old
[2018-02-28 11:25:03:225] [DEBUG]      5 > /usr/lib/python2.7/lib-dynload
[2018-02-28 11:25:03:225] [DEBUG]      6 > /usr/local/lib/python2.7/dist-packages
[2018-02-28 11:25:03:225] [DEBUG]      7 > /usr/lib/python2.7/dist-packages
[2018-02-28 11:25:03:225] [DEBUG]      8 > /usr/lib/python2.7/dist-packages/PILcompat
[2018-02-28 11:25:03:225] [DEBUG]      9 > /usr/lib/python2.7/dist-packages/gtk-2.0
ImportError: No module named opencog.atomspace
[2018-02-28 11:25:03:225] [WARN] PythonEval::try_to_load_modules Failed to load the opencog.atomspace module
[2018-02-28 11:25:03:225] [INFO] [global_python_initialize] Finish
[2018-02-28 11:25:03:225] [INFO] [global_python_initialize] Start
[2018-02-28 11:25:03:225] [WARN] PythonEval::atomspace_py_object Failed to load theopencog.atomspace module

      Start  3: CogServerUTest
 3/16 Test  #3: CogServerUTest ...................***Exception: SegFault  0.27 sec
Running cxxtest tests (2 tests)ImportError: No module named opencog.atomspace

      Start  4: ShellUTest
 4/16 Test  #4: ShellUTest .......................***Exception: SegFault  0.27 sec
Running cxxtest tests (5 tests)ImportError: No module named opencog.atomspace

      Start  5: AgentUTest
 5/16 Test  #5: AgentUTest .......................***Exception: SegFault  0.26 sec
Running cxxtest tests (2 tests)ImportError: No module named opencog.atomspace

      Start  6: MOSESPLNSynergyUTest
 6/16 Test  #6: MOSESPLNSynergyUTest .............   Passed    7.15 sec
      Start  7: PLNRulesUTest
 7/16 Test  #7: PLNRulesUTest ....................***Failed    1.79 sec
Running cxxtest tests (21 tests)[DEBUG] BEGIN TEST: test_deduction
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-assertions.scm":


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/term/deduction.scm":
Backtrace:
          14 (apply-smob/1 #<catch-closure 5563b708acc0>)
          13 (apply-smob/1 #<catch-closure 5563b708aa40>)
In ice-9/boot-9.scm:
   2312:4 12 (save-module-excursion #<procedure 5563b77e95a0 at ice-…>)
In ice-9/eval-string.scm:
     38:6 11 (read-and-eval #<input: string 5563b74e0070> #:lang _)
In ice-9/boot-9.scm:
   1693:5 10 (%start-stack load-stack _)
   1695:9  9 (_)
In unknown file:
           8 (primitive-load-path "opencog/pln/rules/term/deduction.…")
In term/deduction.scm:
     27:0  7 (_)
In ice-9/boot-9.scm:
   2312:4  6 (save-module-excursion #<procedure 5563b7040930 at ice-…>)
   3836:9  5 (_)
   1693:5  4 (%start-stack load-stack _)
   1695:9  3 (_)
In unknown file:
           2 (primitive-load-path "term/formulas.scm")
In ice-9/boot-9.scm:
   751:25  1 (dispatch-exception 0 misc-error ("primitive-load-pa…" …))
In unknown file:
           0 (apply-smob/1 #<catch-closure 5563b708a980> misc-error # …)

ERROR: In procedure apply-smob/1:
In procedure primitive-load-path: Unable to find file "term/formulas.scm" in load path
ABORT: misc-error

[ERROR] Backtrace:
           8 (apply-smob/1 #<catch-closure 5563b7a2a5e0>)
           7 (apply-smob/1 #<catch-closure 5563b7a2a540>)
In ice-9/boot-9.scm:
   2312:4  6 (save-module-excursion #<procedure 5563b7a14140 at ice-…>)
In ice-9/eval-string.scm:
     38:6  5 (read-and-eval #<input: string 5563b7a18690> #:lang _)
In ice-9/eval.scm:
   191:35  4 (_ #f)
   223:20  3 (proc #<directory (guile-user) 5563b715d140>)
In unknown file:
           2 (%resolve-variable (7 . deduction-inheritance-rule) #<d…>)
In ice-9/boot-9.scm:
   751:25  1 (dispatch-exception 0 unbound-variable (#f "Unbound …" …))
In unknown file:
           0 (apply-smob/1 #<catch-closure 5563b7a2a500> # #f "Unbo…" …)

ERROR: In procedure apply-smob/1:
Unbound variable: deduction-inheritance-rule
ABORT: unbound-variable
 (/home/opencog/atomspace/opencog/guile/SchemeEval.cc:930)
	Stack Trace:
	2: Logger.cc:481	  opencog::Logger::logva(opencog::Logger::Level, char const*, __va_list_tag*)
	3: Logger.cc:493	  opencog::Logger::Error::operator()(char const*, ...)
	4: exceptions.cc:55	  opencog::StandardException::parse_error_message(char const*, __va_list_tag*, bool)
	5: exceptions.cc:82	  opencog::StandardException::parse_error_message(char const*, char const*, __va_list_tag*, bool)
	6: exceptions.cc:150	  opencog::RuntimeException::RuntimeException(char const*, char const*, ...)
	7: SchemeEval.cc:930	  opencog::SchemeEval::eval_v(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	8: SchemeEval.h:170	  opencog::SchemeEval::eval_h(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	9: shared_ptr_base.h:661	  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
	10: RealDescriptions.cpp:125	  CxxTest::RealTestDescription::run()
	11: TestRunner.h:104	  CxxTest::TestRunner::runTest(CxxTest::TestDescription&)
	12: PLNRulesUTest.cpp:20	main()
	13: [0x202b1] ??() ??:0
	14: [0x1389a] ??() ??:0


In PLNRulesUTest::test_deduction:
/home/opencog/opencog/tests/pln/rules/PLNRulesUTest.cxxtest:81: Error: Test failed: Backtrace:
           8 (apply-smob/1 #<catch-closure 5563b7a2a5e0>)
           7 (apply-smob/1 #<catch-closure 5563b7a2a540>)
In ice-9/boot-9.scm:
   2312:4  6 (save-module-excursion #<procedure 5563b7a14140 at ice-…>)
In ice-9/eval-string.scm:
     38:6  5 (read-and-eval #<input: string 5563b7a18690> #:lang _)
In ice-9/eval.scm:
   191:35  4 (_ #f)
   223:20  3 (proc #<directory (guile-user) 5563b715d140>)
In unknown file:
           2 (%resolve-variable (7 . deduction-inheritance-rule) #<d…>)
In ice-9/boot-9.scm:
   751:25  1 (dispatch-exception 0 unbound-variable (#f "Unbound …" …))
In unknown file:
           0 (apply-smob/1 #<catch-closure 5563b7a2a500> # #f "Unbo…" …)

ERROR: In procedure apply-smob/1:
Unbound variable: deduction-inheritance-rule
ABORT: unbound-variable
 (/home/opencog/atomspace/opencog/guile/SchemeEval.cc:930)
[DEBUG] BEGIN TEST: test_and_introduction
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-predicates.scm":
(PredicateNode "Q" (stv 0.6 1))


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/and-introduction.scm":
(DefineLink
   (DefinedSchemaNode "and-introduction-grounded-evaluation-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$A")
            (TypeNode "EvaluationLink")
         )
         (TypedVariableLink
            (VariableNode "$B")
            (TypeNode "EvaluationLink")
         )
         (TypedVariableLink
            (VariableNode "$C")
            (TypeNode "EvaluationLink")
         )
      )
      (AndLink
         (VariableNode "$A")
         (VariableNode "$C")
         (VariableNode "$B")
         (NotLink
            (EqualLink
               (VariableNode "$A")
               (VariableNode "$C")
            )
         )
         (NotLink
            (EqualLink
               (VariableNode "$A")
               (VariableNode "$B")
            )
         )
         (EvaluationLink
            (GroundedPredicateNode "scm: fully-grounded")
            (ListLink
               (VariableNode "$A")
            )
         )
         (NotLink
            (EqualLink
               (VariableNode "$C")
               (VariableNode "$B")
            )
         )
         (EvaluationLink
            (GroundedPredicateNode "scm: fully-grounded")
            (ListLink
               (VariableNode "$C")
            )
         )
         (EvaluationLink
            (GroundedPredicateNode "scm: fully-grounded")
            (ListLink
               (VariableNode "$B")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: and-introduction-grounded-evaluation-formula")
         (ListLink
            (VariableNode "$A")
            (VariableNode "$B")
            (VariableNode "$C")
         )
      )
   )
)


.[DEBUG] BEGIN TEST: test_or_introduction
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-predicates.scm":
(PredicateNode "Q" (stv 0.6 1))


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/or-introduction.scm":
(DefineLink
   (DefinedSchemaNode "or-introduction-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$A")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "ConceptNode")
            )
         )
         (TypedVariableLink
            (VariableNode "$B")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "ConceptNode")
            )
         )
      )
      (AndLink
         (VariableNode "$A")
         (VariableNode "$B")
         (NotLink
            (EqualLink
               (VariableNode "$A")
               (VariableNode "$B")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: or-introduction-formula")
         (ListLink
            (VariableNode "$A")
            (VariableNode "$B")
         )
      )
   )
)


.[DEBUG] BEGIN TEST: test_not_introduction
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-predicates.scm":
(PredicateNode "Q" (stv 0.6 1))


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/not-introduction.scm":
(DefineLink
   (DefinedSchemaNode "not-introduction-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$A")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "ConceptNode")
            )
         )
      )
      (VariableNode "$A")
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: not-introduction-formula")
         (ListLink
            (VariableNode "$A")
         )
      )
   )
)


.[DEBUG] BEGIN TEST: test_forall_full_instantiation
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-forall.scm":
(ForAllLink (stv 1 1)
   (TypedVariableLink
      (VariableNode "$X")
      (TypeNode "ConceptNode")
   )
   (ImplicationLink
      (EvaluationLink
         (PredicateNode "P")
         (VariableNode "$X")
      )
      (EvaluationLink
         (PredicateNode "P")
         (VariableNode "$X")
      )
   )
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/forall-instantiation.scm":
(DefineLink
   (DefinedSchemaNode "forall-partial-instantiation-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeNode "VariableList")
         )
         (VariableNode "$B")
      )
      (QuoteLink
         (ForAllLink
            (UnquoteLink
               (VariableNode "$TyVs")
            )
            (UnquoteLink
               (VariableNode "$B")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: forall-partial-instantiation-formula")
         (ListLink
            (VariableNode "$TyVs")
            (VariableNode "$B")
         )
      )
   )
)


.[DEBUG] BEGIN TEST: test_forall_partial_instantiation
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-forall.scm":
(ForAllLink (stv 1 1)
   (TypedVariableLink
      (VariableNode "$X")
      (TypeNode "ConceptNode")
   )
   (ImplicationLink
      (EvaluationLink
         (PredicateNode "P")
         (VariableNode "$X")
      )
      (EvaluationLink
         (PredicateNode "P")
         (VariableNode "$X")
      )
   )
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/forall-instantiation.scm":
(DefineLink
   (DefinedSchemaNode "forall-partial-instantiation-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeNode "VariableList")
         )
         (VariableNode "$B")
      )
      (QuoteLink
         (ForAllLink
            (UnquoteLink
               (VariableNode "$TyVs")
            )
            (UnquoteLink
               (VariableNode "$B")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: forall-partial-instantiation-formula")
         (ListLink
            (VariableNode "$TyVs")
            (VariableNode "$B")
         )
      )
   )
)


.[DEBUG] BEGIN TEST: test_forall_implication_to_higher_order
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-forall.scm":
(ForAllLink (stv 1 1)
   (TypedVariableLink
      (VariableNode "$X")
      (TypeNode "ConceptNode")
   )
   (ImplicationLink
      (EvaluationLink
         (PredicateNode "P")
         (VariableNode "$X")
      )
      (EvaluationLink
         (PredicateNode "P")
         (VariableNode "$X")
      )
   )
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/forall-implication-to-higher-order.scm":
(DefineLink
   (DefinedSchemaNode "forall-implication-to-higher-order-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeChoice
               (TypeNode "TypedVariableLink")
               (TypeNode "VariableList")
            )
         )
         (TypedVariableLink
            (VariableNode "$Impl")
            (TypeNode "ImplicationLink")
         )
      )
      (QuoteLink
         (ForAllLink
            (UnquoteLink
               (VariableNode "$TyVs")
            )
            (UnquoteLink
               (VariableNode "$Impl")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: forall-implication-to-higher-order-formula")
         (ListLink
            (VariableNode "$TyVs")
            (VariableNode "$Impl")
         )
      )
   )
)


.[DEBUG] results = (SetLink
  (ImplicationLink (stv 1.000000 1.000000)
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [17949168881855469356][1]
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [17949168881855469356][1]
  ) ; [12304348726284166735][1]
) ; [12319442821909952197][1]

[DEBUG] expected = (SetLink
  (ImplicationLink (stv 1.000000 1.000000)
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [17949168881855469356][1]
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [17949168881855469356][1]
  ) ; [12304348726284166735][1]
) ; [12319442821909952197][1]

[DEBUG] BEGIN TEST: test_implication_full_instantiation
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-implication.scm":
(ImplicationLink (stv 1 1)
   (PredicateNode "P")
   (PredicateNode "Q")
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-instantiation.scm":
(DefineLink
   (DefinedSchemaNode "implication-partial-instantiation-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeNode "VariableList")
         )
         (VariableNode "$P")
         (VariableNode "$Q")
      )
      (QuoteLink
         (ImplicationScopeLink
            (UnquoteLink
               (VariableNode "$TyVs")
            )
            (UnquoteLink
               (VariableNode "$P")
            )
            (UnquoteLink
               (VariableNode "$Q")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-partial-instantiation-formula")
         (ListLink
            (QuoteLink
               (ImplicationScopeLink
                  (UnquoteLink
                     (VariableNode "$TyVs")
                  )
                  (UnquoteLink
                     (VariableNode "$P")
                  )
                  (UnquoteLink
                     (VariableNode "$Q")
                  )
               )
            )
         )
      )
   )
)


.[DEBUG] results = (SetLink
  (EvaluationLink (stv 1.000000 0.960000)
    (PredicateNode "Q") ; [1103054420470118233][1]
    (ListLink
      (ConceptNode "B") ; [241327676611018844][1]
      (ConceptNode "A") ; [6977206836600634430][1]
    ) ; [15458283211017134999][1]
  ) ; [16670643202686237375][1]
  (EvaluationLink (stv 1.000000 0.800000)
    (PredicateNode "Q") ; [1103054420470118233][1]
    (ConceptNode "A") ; [6977206836600634430][1]
  ) ; [17412938865124512614][1]
) ; [14639947498134717755][1]

[DEBUG] expected = (SetLink
  (EvaluationLink (stv 1.000000 0.960000)
    (PredicateNode "Q") ; [1103054420470118233][1]
    (ListLink
      (ConceptNode "B") ; [241327676611018844][1]
      (ConceptNode "A") ; [6977206836600634430][1]
    ) ; [15458283211017134999][1]
  ) ; [16670643202686237375][1]
  (EvaluationLink (stv 1.000000 0.800000)
    (PredicateNode "Q") ; [1103054420470118233][1]
    (ConceptNode "A") ; [6977206836600634430][1]
  ) ; [17412938865124512614][1]
) ; [14639947498134717755][1]

[DEBUG] BEGIN TEST: test_implication_full_instantiation_extra_variables
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/implication-extra-variables.scm":
(EvaluationLink (stv 1 1)
   (PredicateNode "P")
   (ConceptNode "A")
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-instantiation.scm":
(DefineLink
   (DefinedSchemaNode "implication-partial-instantiation-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeNode "VariableList")
         )
         (VariableNode "$P")
         (VariableNode "$Q")
      )
      (QuoteLink
         (ImplicationScopeLink
            (UnquoteLink
               (VariableNode "$TyVs")
            )
            (UnquoteLink
               (VariableNode "$P")
            )
            (UnquoteLink
               (VariableNode "$Q")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-partial-instantiation-formula")
         (ListLink
            (QuoteLink
               (ImplicationScopeLink
                  (UnquoteLink
                     (VariableNode "$TyVs")
                  )
                  (UnquoteLink
                     (VariableNode "$P")
                  )
                  (UnquoteLink
                     (VariableNode "$Q")
                  )
               )
            )
         )
      )
   )
)


.[DEBUG] results = (SetLink
  (EvaluationLink (stv 1.000000 0.800000)
    (PredicateNode "Q") ; [1103054420470118233][1]
    (ListLink
      (ConceptNode "A") ; [6977206836600634430][1]
      (ConceptNode "A") ; [6977206836600634430][1]
    ) ; [16381366606159829945][1]
  ) ; [17593726597828932321][1]
) ; [17608820693454717783][1]

[DEBUG] expected = (SetLink
  (EvaluationLink (stv 1.000000 0.800000)
    (PredicateNode "Q") ; [1103054420470118233][1]
    (ListLink
      (ConceptNode "A") ; [6977206836600634430][1]
      (ConceptNode "A") ; [6977206836600634430][1]
    ) ; [16381366606159829945][1]
  ) ; [17593726597828932321][1]
) ; [17608820693454717783][1]

[DEBUG] BEGIN TEST: test_implication_partial_instantiation
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-implication.scm":
(ImplicationLink (stv 1 1)
   (PredicateNode "P")
   (PredicateNode "Q")
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-instantiation.scm":
(DefineLink
   (DefinedSchemaNode "implication-partial-instantiation-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeNode "VariableList")
         )
         (VariableNode "$P")
         (VariableNode "$Q")
      )
      (QuoteLink
         (ImplicationScopeLink
            (UnquoteLink
               (VariableNode "$TyVs")
            )
            (UnquoteLink
               (VariableNode "$P")
            )
            (UnquoteLink
               (VariableNode "$Q")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-partial-instantiation-formula")
         (ListLink
            (QuoteLink
               (ImplicationScopeLink
                  (UnquoteLink
                     (VariableNode "$TyVs")
                  )
                  (UnquoteLink
                     (VariableNode "$P")
                  )
                  (UnquoteLink
                     (VariableNode "$Q")
                  )
               )
            )
         )
      )
   )
)


.[DEBUG] results = (SetLink
  (ImplicationScopeLink (stv 1.000000 1.000000)
    (TypedVariableLink
      (VariableNode "$Y") ; [5319120082979945173][1]
      (TypeNode "ConceptNode") ; [3788696113922021255][1]
    ) ; [15368014373885762288][1]
    (EvaluationLink
      (PredicateNode "P") ; [2213889286841575705][1]
      (ListLink
        (ConceptNode "A") ; [6977206836600634430][1]
        (VariableNode "$Y") ; [5319120082979945173][1]
      ) ; [14723279852539140688][1]
    ) ; [15699702287047236408][1]
    (EvaluationLink
      (PredicateNode "Q") ; [1103054420470118233][1]
      (ListLink
        (VariableNode "$Y") ; [5319120082979945173][1]
        (ConceptNode "A") ; [6977206836600634430][1]
      ) ; [17004735957805739312][1]
    ) ; [18217095949474841688][1]
  ) ; [16343311253396650220][1]
) ; [16358405349022435682][1]

[DEBUG] possible_results_1 = (SetLink
  (ImplicationScopeLink
    (TypedVariableLink
      (VariableNode "$X") ; [6809953386495729144][1]
      (TypeNode "ConceptNode") ; [3788696113922021255][1]
    ) ; [9225281168777978483][1]
    (EvaluationLink
      (PredicateNode "P") ; [2213889286841575705][1]
      (ListLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (ConceptNode "B") ; [241327676611018844][1]
      ) ; [13349495629563115729][1]
    ) ; [14325918064071211449][1]
    (EvaluationLink
      (PredicateNode "Q") ; [1103054420470118233][1]
      (ListLink
        (ConceptNode "B") ; [241327676611018844][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [15291029760912229713][1]
    ) ; [16503389752581332089][1]
  ) ; [17950672363692661087][1]
) ; [17965766459318446549][1]

[DEBUG] possible_results_2 = (SetLink
  (ImplicationScopeLink (stv 1.000000 1.000000)
    (TypedVariableLink
      (VariableNode "$Y") ; [5319120082979945173][1]
      (TypeNode "ConceptNode") ; [3788696113922021255][1]
    ) ; [15368014373885762288][1]
    (EvaluationLink
      (PredicateNode "P") ; [2213889286841575705][1]
      (ListLink
        (ConceptNode "A") ; [6977206836600634430][1]
        (VariableNode "$Y") ; [5319120082979945173][1]
      ) ; [14723279852539140688][1]
    ) ; [15699702287047236408][1]
    (EvaluationLink
      (PredicateNode "Q") ; [1103054420470118233][1]
      (ListLink
        (VariableNode "$Y") ; [5319120082979945173][1]
        (ConceptNode "A") ; [6977206836600634430][1]
      ) ; [17004735957805739312][1]
    ) ; [18217095949474841688][1]
  ) ; [16343311253396650220][1]
) ; [16358405349022435682][1]

[DEBUG] BEGIN TEST: test_implication_scope_to_implication
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-implication.scm":
(ImplicationLink (stv 1 1)
   (PredicateNode "P")
   (PredicateNode "Q")
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-scope-to-implication.scm":
(DefineLink
   (DefinedSchemaNode "implication-scope-to-implication-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeChoice
               (TypeNode "TypedVariableLink")
               (TypeNode "VariableList")
            )
         )
         (VariableNode "$P")
         (VariableNode "$Q")
      )
      (QuoteLink
         (ImplicationScopeLink
            (UnquoteLink
               (VariableNode "$TyVs")
            )
            (UnquoteLink
               (VariableNode "$P")
            )
            (UnquoteLink
               (VariableNode "$Q")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-scope-to-implication-formula")
         (ListLink
            (ImplicationLink
               (QuoteLink
                  (LambdaLink
                     (UnquoteLink
                        (VariableNode "$TyVs")
                     )
                     (UnquoteLink
                        (VariableNode "$P")
                     )
                  )
               )
               (QuoteLink
                  (LambdaLink
                     (UnquoteLink
                        (VariableNode "$TyVs")
                     )
                     (UnquoteLink
                        (VariableNode "$Q")
                     )
                  )
               )
            )
            (QuoteLink
               (ImplicationScopeLink
                  (UnquoteLink
                     (VariableNode "$TyVs")
                  )
                  (UnquoteLink
                     (VariableNode "$P")
                  )
                  (UnquoteLink
                     (VariableNode "$Q")
                  )
               )
            )
         )
      )
   )
)


results = (SetLink
  (ImplicationLink (stv 1.000000 1.000000)
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "dummy-implicant") ; [5139476396159911888][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [12097030059961160823][1]
    ) ; [13036451083958029036][1]
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "dummy-implicand") ; [970581742967573218][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [12874087057435621833][1]
    ) ; [13813508081432490517][1]
  ) ; [12069697258631621880][1]
  (ImplicationLink (stv 1.000000 1.000000)
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink (stv 0.200000 0.900000)
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [17949168881855469356][1]
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "Q") ; [1103054420470118233][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17245685415019607328][1]
    ) ; [18185106439016476012][1]
  ) ; [12540286283445173391][1]
  (ImplicationLink (stv 1.000000 1.000000)
    (LambdaLink
      (VariableList
        (TypedVariableLink
          (VariableNode "$X") ; [6809953386495729144][1]
          (TypeNode "ConceptNode") ; [3788696113922021255][1]
        ) ; [9225281168777978483][1]
        (TypedVariableLink
          (VariableNode "$Y") ; [5319120082979945173][1]
          (TypeNode "ConceptNode") ; [3788696113922021255][1]
        ) ; [15368014373885762288][1]
      ) ; [16369752366847415642][1]
      (EvaluationLink (stv 0.040000 0.600000)
        (PredicateNode "P") ; [2213889286841575705][1]
        (ListLink
          (VariableNode "$X") ; [6809953386495729144][1]
          (VariableNode "$Y") ; [5319120082979945173][1]
        ) ; [18427288035932042058][1]
      ) ; [10180338433585361970][1]
    ) ; [18102432007526708032][1]
    (LambdaLink
      (VariableList
        (TypedVariableLink
          (VariableNode "$X") ; [6809953386495729144][1]
          (TypeNode "ConceptNode") ; [3788696113922021255][1]
        ) ; [9225281168777978483][1]
        (TypedVariableLink
          (VariableNode "$Y") ; [5319120082979945173][1]
          (TypeNode "ConceptNode") ; [3788696113922021255][1]
        ) ; [15368014373885762288][1]
      ) ; [16369752366847415642][1]
      (EvaluationLink
        (PredicateNode "Q") ; [1103054420470118233][1]
        (ListLink
          (VariableNode "$Y") ; [5319120082979945173][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [16837482507700834026][1]
      ) ; [18049842499369936402][1]
    ) ; [18338369565224583136][1]
  ) ; [17751232556804156823][1]
) ; [15114826446581484788][1]
expected = (SetLink
  (ImplicationLink (stv 1.000000 1.000000)
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "dummy-implicant") ; [5139476396159911888][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [12097030059961160823][1]
    ) ; [13036451083958029036][1]
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "dummy-implicand") ; [970581742967573218][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [12874087057435621833][1]
    ) ; [13813508081432490517][1]
  ) ; [12069697258631621880][1]
  (ImplicationLink (stv 1.000000 1.000000)
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink (stv 0.200000 0.900000)
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [17949168881855469356][1]
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "Q") ; [1103054420470118233][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17245685415019607328][1]
    ) ; [18185106439016476012][1]
  ) ; [12540286283445173391][1]
  (ImplicationLink (stv 1.000000 1.000000)
    (LambdaLink
      (VariableList
        (TypedVariableLink
          (VariableNode "$X") ; [6809953386495729144][1]
          (TypeNode "ConceptNode") ; [3788696113922021255][1]
        ) ; [9225281168777978483][1]
        (TypedVariableLink
          (VariableNode "$Y") ; [5319120082979945173][1]
          (TypeNode "ConceptNode") ; [3788696113922021255][1]
        ) ; [15368014373885762288][1]
      ) ; [16369752366847415642][1]
      (EvaluationLink (stv 0.040000 0.600000)
        (PredicateNode "P") ; [2213889286841575705][1]
        (ListLink
          (VariableNode "$X") ; [6809953386495729144][1]
          (VariableNode "$Y") ; [5319120082979945173][1]
        ) ; [18427288035932042058][1]
      ) ; [10180338433585361970][1]
    ) ; [18102432007526708032][1]
    (LambdaLink
      (VariableList
        (TypedVariableLink
          (VariableNode "$X") ; [6809953386495729144][1]
          (TypeNode "ConceptNode") ; [3788696113922021255][1]
        ) ; [9225281168777978483][1]
        (TypedVariableLink
          (VariableNode "$Y") ; [5319120082979945173][1]
          (TypeNode "ConceptNode") ; [3788696113922021255][1]
        ) ; [15368014373885762288][1]
      ) ; [16369752366847415642][1]
      (EvaluationLink
        (PredicateNode "Q") ; [1103054420470118233][1]
        (ListLink
          (VariableNode "$Y") ; [5319120082979945173][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [16837482507700834026][1]
      ) ; [18049842499369936402][1]
    ) ; [18338369565224583136][1]
  ) ; [17751232556804156823][1]
) ; [15114826446581484788][1]
.[DEBUG] BEGIN TEST: test_and_lambda_distribution
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-lambda.scm":
(AndLink
   (LambdaLink
      (VariableNode "$X")
      (EvaluationLink (stv 0.4 0.7)
         (PredicateNode "P")
         (ConceptNode "A")
      )
   )
   (LambdaLink (stv 0.6 0.3)
      (VariableNode "$X")
      (AndLink
         (EvaluationLink
            (PredicateNode "P")
            (VariableNode "$X")
         )
         (EvaluationLink
            (PredicateNode "Q")
            (VariableNode "$X")
         )
      )
   )
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/and-lambda-distribution.scm":
(DefineLink
   (DefinedSchemaNode "and-lambda-distribution-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeChoice
               (TypeNode "TypedVariableLink")
               (TypeNode "VariableNode")
               (TypeNode "VariableList")
            )
         )
         (TypedVariableLink
            (VariableNode "$And")
            (TypeNode "AndLink")
         )
      )
      (QuoteLink
         (LambdaLink
            (UnquoteLink
               (VariableNode "$TyVs")
            )
            (UnquoteLink
               (VariableNode "$And")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: and-lambda-distribution-formula")
         (ListLink
            (QuoteLink
               (LambdaLink
                  (UnquoteLink
                     (VariableNode "$TyVs")
                  )
                  (UnquoteLink
                     (VariableNode "$And")
                  )
               )
            )
         )
      )
   )
)


results = (SetLink
  (AndLink (stv 0.600000 0.300000)
    (LambdaLink
      (VariableNode "$X") ; [6809953386495729144][1]
      (EvaluationLink
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [17949168881578691228][1]
    (LambdaLink
      (VariableNode "$X") ; [6809953386495729144][1]
      (EvaluationLink
        (PredicateNode "Q") ; [1103054420470118233][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17245685415019607328][1]
    ) ; [18185106438739697884][1]
  ) ; [11716496978150502786][1]
) ; [11731591073776288248][1]
expected = (SetLink
  (AndLink (stv 0.600000 0.300000)
    (LambdaLink
      (VariableNode "$X") ; [6809953386495729144][1]
      (EvaluationLink
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [17949168881578691228][1]
    (LambdaLink
      (VariableNode "$X") ; [6809953386495729144][1]
      (EvaluationLink
        (PredicateNode "Q") ; [1103054420470118233][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17245685415019607328][1]
    ) ; [18185106438739697884][1]
  ) ; [11716496978150502786][1]
) ; [11731591073776288248][1]
.[DEBUG] BEGIN TEST: test_implication_implicant_distribution
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-implication.scm":
(ImplicationLink (stv 1 1)
   (PredicateNode "P")
   (PredicateNode "Q")
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-implicant-distribution.scm":
(DefineLink
   (DefinedSchemaNode "implication-implicant-distribution-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$P")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
            )
         )
         (TypedVariableLink
            (VariableNode "$Q")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
            )
         )
      )
      (AndLink
         (ImplicationLink
            (VariableNode "$P")
            (VariableNode "$Q")
         )
         (EvaluationLink
            (GroundedPredicateNode "scm: gt-zero-confidence")
            (ImplicationLink
               (VariableNode "$P")
               (VariableNode "$Q")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-implicant-distribution-formula")
         (ListLink
            (ImplicationLink
               (VariableNode "$P")
               (AndLink
                  (VariableNode "$P")
                  (VariableNode "$Q")
               )
            )
            (ImplicationLink
               (VariableNode "$P")
               (VariableNode "$Q")
            )
         )
      )
   )
)


results = (SetLink
  (ImplicationLink (stv 1.000000 1.000000)
    (PredicateNode "P") ; [2213889286841575705][1]
    (AndLink
      (PredicateNode "Q") ; [1103054420470118233][1]
      (PredicateNode "P") ; [2213889286841575705][1]
    ) ; [11672568894665571868][1]
  ) ; [12495728204357999820][1]
) ; [12510822299983785282][1]
expected = (SetLink
  (ImplicationLink (stv 1.000000 1.000000)
    (PredicateNode "P") ; [2213889286841575705][1]
    (AndLink
      (PredicateNode "Q") ; [1103054420470118233][1]
      (PredicateNode "P") ; [2213889286841575705][1]
    ) ; [11672568894665571868][1]
  ) ; [12495728204357999820][1]
) ; [12510822299983785282][1]
.[DEBUG] BEGIN TEST: test_implication_introduction
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-predicates.scm":
(PredicateNode "Q" (stv 0.6 1))


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-introduction.scm":
(DefineLink
   (DefinedSchemaNode "implication-introduction-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$P")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
            )
         )
         (TypedVariableLink
            (VariableNode "$Q")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
            )
         )
      )
      (AndLink
         (VariableNode "$P")
         (VariableNode "$Q")
         (NotLink
            (EqualLink
               (VariableNode "$P")
               (VariableNode "$Q")
            )
         )
         (EvaluationLink
            (GroundedPredicateNode "scm: implication-introduction-precondition")
            (ListLink
               (VariableNode "$P")
               (VariableNode "$Q")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-introduction-formula")
         (ListLink
            (ImplicationLink
               (VariableNode "$P")
               (VariableNode "$Q")
            )
            (VariableNode "$P")
            (VariableNode "$Q")
         )
      )
   )
)


results = (SetLink
  (ImplicationLink (stv 0.600000 1.000000)
    (PredicateNode "P" (stv 0.200000 1.000000)) ; [2213889286841575705][1]
    (PredicateNode "Q" (stv 0.600000 1.000000)) ; [1103054420470118233][1]
  ) ; [11149585767017321993][1]
  (ImplicationLink (stv 0.200000 1.000000)
    (PredicateNode "Q" (stv 0.600000 1.000000)) ; [1103054420470118233][1]
    (PredicateNode "P" (stv 0.200000 1.000000)) ; [2213889286841575705][1]
  ) ; [12496358190549786121][1]
) ; [11995912183581299816][1]
expected = (SetLink
  (ImplicationLink (stv 0.600000 1.000000)
    (PredicateNode "P" (stv 0.200000 1.000000)) ; [2213889286841575705][1]
    (PredicateNode "Q" (stv 0.600000 1.000000)) ; [1103054420470118233][1]
  ) ; [11149585767017321993][1]
  (ImplicationLink (stv 0.200000 1.000000)
    (PredicateNode "Q" (stv 0.600000 1.000000)) ; [1103054420470118233][1]
    (PredicateNode "P" (stv 0.200000 1.000000)) ; [2213889286841575705][1]
  ) ; [12496358190549786121][1]
) ; [11995912183581299816][1]
.[DEBUG] BEGIN TEST: test_closed_lambda_introduction
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-lambda.scm":
(AndLink
   (LambdaLink
      (VariableNode "$X")
      (EvaluationLink (stv 0.4 0.7)
         (PredicateNode "P")
         (ConceptNode "A")
      )
   )
   (LambdaLink (stv 0.6 0.3)
      (VariableNode "$X")
      (AndLink
         (EvaluationLink
            (PredicateNode "P")
            (VariableNode "$X")
         )
         (EvaluationLink
            (PredicateNode "Q")
            (VariableNode "$X")
         )
      )
   )
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/closed-lambda-introduction.scm":
(DefineLink
   (DefinedSchemaNode "closed-lambda-introduction-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$V")
            (TypeChoice
               (TypeNode "TypedVariableLink")
               (TypeNode "VariableList")
               (TypeNode "VariableNode")
            )
         )
         (TypedVariableLink
            (VariableNode "$B")
            (TypeNode "EvaluationLink")
         )
      )
      (AndLink
         (VariableNode "$V")
         (VariableNode "$B")
         (EvaluationLink
            (GroundedPredicateNode "scm: closed-lambda-introduction-precondition")
            (VariableNode "$B")
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: closed-lambda-introduction-formula")
         (ListLink
            (QuoteLink
               (LambdaLink
                  (UnquoteLink
                     (VariableNode "$V")
                  )
                  (UnquoteLink
                     (VariableNode "$B")
                  )
               )
            )
            (VariableNode "$B")
         )
      )
   )
)


results = (SetLink
  (LambdaLink (stv 0.400000 0.700000)
    (VariableNode "$X") ; [6809953386495729144][1]
    (EvaluationLink (stv 0.400000 0.700000)
      (PredicateNode "P") ; [2213889286841575705][1]
      (ConceptNode "A") ; [6977206836600634430][1]
    ) ; [17177001307963505958][1]
  ) ; [15703003681307772240][1]
  (LambdaLink (stv 0.400000 0.700000)
    (TypedVariableLink
      (VariableNode "$B") ; [4905990271079964112][1]
      (TypeNode "EvaluationLink") ; [9191314558674562418][1]
    ) ; [16360721062793704246][1]
    (EvaluationLink (stv 0.400000 0.700000)
      (PredicateNode "P") ; [2213889286841575705][1]
      (ConceptNode "A") ; [6977206836600634430][1]
    ) ; [17177001307963505958][1]
  ) ; [15703003682847350577][1]
  (LambdaLink (stv 0.400000 0.700000)
    (TypedVariableLink
      (VariableNode "$V") ; [4586185897468188423][1]
      (TypeChoice
        (TypeNode "TypedVariableLink") ; [1359961696412228875][1]
        (TypeNode "VariableList") ; [7312217543151217883][1]
        (TypeNode "VariableNode") ; [5990260802578042438][1]
      ) ; [13298594162570589437][1]
    ) ; [9914456337501133528][1]
    (EvaluationLink (stv 0.400000 0.700000)
      (PredicateNode "P") ; [2213889286841575705][1]
      (ConceptNode "A") ; [6977206836600634430][1]
    ) ; [17177001307963505958][1]
  ) ; [15703003684853992005][1]
  (LambdaLink (stv 0.400000 0.700000)
    (VariableList
      (TypedVariableLink
        (VariableNode "$V") ; [4586185897468188423][1]
        (TypeChoice
          (TypeNode "TypedVariableLink") ; [1359961696412228875][1]
          (TypeNode "VariableList") ; [7312217543151217883][1]
          (TypeNode "VariableNode") ; [5990260802578042438][1]
        ) ; [13298594162570589437][1]
      ) ; [9914456337501133528][1]
      (TypedVariableLink
        (VariableNode "$B") ; [4905990271079964112][1]
        (TypeNode "EvaluationLink") ; [9191314558674562418][1]
      ) ; [16360721062793704246][1]
    ) ; [12435123513055146661][1]
    (EvaluationLink (stv 0.400000 0.700000)
      (PredicateNode "P") ; [2213889286841575705][1]
      (ConceptNode "A") ; [6977206836600634430][1]
    ) ; [17177001307963505958][1]
  ) ; [15856266806782638504][1]
) ; [12291965199335687172][1]
expected = (LambdaLink (stv 0.400000 0.700000)
  (VariableNode "$X") ; [6809953386495729144][1]
  (EvaluationLink (stv 0.400000 0.700000)
    (PredicateNode "P") ; [2213889286841575705][1]
    (ConceptNode "A") ; [6977206836600634430][1]
  ) ; [17177001307963505958][1]
) ; [15703003681307772240][1]
.[DEBUG] BEGIN TEST: test_equivalence_to_implication
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-equivalence.scm":
(EquivalenceLink (stv 0.6 0.7)
   (PredicateNode "Q" (stv 0.12 0.4))
   (PredicateNode "P" (stv 0.1 0.5))
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/equivalence-to-implication.scm":
(DefineLink
   (DefinedSchemaNode "equivalence-to-implication-rule")
   (BindLink
      (VariableList
         (VariableNode "$A")
         (VariableNode "$B")
      )
      (AndLink
         (EvaluationLink
            (GroundedPredicateNode "scm: gt-zero-confidence")
            (EquivalenceLink
               (VariableNode "$A")
               (VariableNode "$B")
            )
         )
         (EquivalenceLink
            (VariableNode "$A")
            (VariableNode "$B")
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: equivalence-to-implication-formula")
         (ListLink
            (ImplicationLink
               (VariableNode "$A")
               (VariableNode "$B")
            )
            (EquivalenceLink
               (VariableNode "$A")
               (VariableNode "$B")
            )
         )
      )
   )
)


results = (SetLink
  (ImplicationLink (stv 0.825000 0.700000)
    (PredicateNode "P" (stv 0.100000 0.500000)) ; [2213889286841575705][1]
    (PredicateNode "Q" (stv 0.120000 0.400000)) ; [1103054420470118233][1]
  ) ; [11149585767017321993][1]
  (ImplicationLink (stv 0.687500 0.700000)
    (PredicateNode "Q" (stv 0.120000 0.400000)) ; [1103054420470118233][1]
    (PredicateNode "P" (stv 0.100000 0.500000)) ; [2213889286841575705][1]
  ) ; [12496358190549786121][1]
) ; [11995912183581299816][1]
expected = (SetLink
  (ImplicationLink (stv 0.825000 0.700000)
    (PredicateNode "P" (stv 0.100000 0.500000)) ; [2213889286841575705][1]
    (PredicateNode "Q" (stv 0.120000 0.400000)) ; [1103054420470118233][1]
  ) ; [11149585767017321993][1]
  (ImplicationLink (stv 0.687500 0.700000)
    (PredicateNode "Q" (stv 0.120000 0.400000)) ; [1103054420470118233][1]
    (PredicateNode "P" (stv 0.100000 0.500000)) ; [2213889286841575705][1]
  ) ; [12496358190549786121][1]
) ; [11995912183581299816][1]
.[DEBUG] BEGIN TEST: test_implication_and_lambda_factorization
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-lambda.scm":
(AndLink
   (LambdaLink
      (VariableNode "$X")
      (EvaluationLink (stv 0.4 0.7)
         (PredicateNode "P")
         (ConceptNode "A")
      )
   )
   (LambdaLink (stv 0.6 0.3)
      (VariableNode "$X")
      (AndLink
         (EvaluationLink
            (PredicateNode "P")
            (VariableNode "$X")
         )
         (EvaluationLink
            (PredicateNode "Q")
            (VariableNode "$X")
         )
      )
   )
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-and-lambda-factorization.scm":
(DefineLink
   (DefinedSchemaNode "implication-and-lambda-factorization-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeChoice
               (TypeNode "TypedVariableLink")
               (TypeNode "VariableNode")
               (TypeNode "VariableList")
            )
         )
         (TypedVariableLink
            (VariableNode "$A1")
            (TypeNode "EvaluationLink")
         )
         (TypedVariableLink
            (VariableNode "$A2")
            (TypeNode "EvaluationLink")
         )
      )
      (LocalQuoteLink
         (AndLink
            (QuoteLink
               (LambdaLink
                  (UnquoteLink
                     (VariableNode "$TyVs")
                  )
                  (UnquoteLink
                     (VariableNode "$A2")
                  )
               )
            )
            (QuoteLink
               (LambdaLink
                  (UnquoteLink
                     (VariableNode "$TyVs")
                  )
                  (UnquoteLink
                     (VariableNode "$A1")
                  )
               )
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-and-lambda-factorization-formula")
         (ImplicationLink
            (AndLink
               (QuoteLink
                  (LambdaLink
                     (UnquoteLink
                        (VariableNode "$TyVs")
                     )
                     (UnquoteLink
                        (VariableNode "$A2")
                     )
                  )
               )
               (QuoteLink
                  (LambdaLink
                     (UnquoteLink
                        (VariableNode "$TyVs")
                     )
                     (UnquoteLink
                        (VariableNode "$A1")
                     )
                  )
               )
            )
            (QuoteLink
               (LambdaLink
                  (UnquoteLink
                     (VariableNode "$TyVs")
                  )
                  (UnquoteLink
                     (AndLink
                        (VariableNode "$A2")
                        (VariableNode "$A1")
                     )
                  )
               )
            )
         )
      )
   )
)


results = (SetLink
  (ImplicationLink (stv 1.000000 1.000000)
    (AndLink
      (LambdaLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (EvaluationLink
          (PredicateNode "P") ; [2213889286841575705][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17009747857858600672][1]
      ) ; [17949168881578691228][1]
      (LambdaLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (EvaluationLink
          (PredicateNode "Q") ; [1103054420470118233][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17245685415019607328][1]
      ) ; [18185106438739697884][1]
    ) ; [11716496978150502786][1]
    (LambdaLink (stv 0.600000 0.300000)
      (VariableNode "$X") ; [6809953386495729144][1]
      (AndLink
        (EvaluationLink
          (PredicateNode "P") ; [2213889286841575705][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17009747857858600672][1]
        (EvaluationLink
          (PredicateNode "Q") ; [1103054420470118233][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17245685415019607328][1]
      ) ; [16669670319086527114][1]
    ) ; [17456476609709368689][1]
  ) ; [18271040479534012842][1]
) ; [18286134575159798304][1]
expected = (SetLink
  (ImplicationLink (stv 1.000000 1.000000)
    (AndLink
      (LambdaLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (EvaluationLink
          (PredicateNode "P") ; [2213889286841575705][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17009747857858600672][1]
      ) ; [17949168881578691228][1]
      (LambdaLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (EvaluationLink
          (PredicateNode "Q") ; [1103054420470118233][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17245685415019607328][1]
      ) ; [18185106438739697884][1]
    ) ; [11716496978150502786][1]
    (LambdaLink (stv 0.600000 0.300000)
      (VariableNode "$X") ; [6809953386495729144][1]
      (AndLink
        (EvaluationLink
          (PredicateNode "P") ; [2213889286841575705][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17009747857858600672][1]
        (EvaluationLink
          (PredicateNode "Q") ; [1103054420470118233][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17245685415019607328][1]
      ) ; [16669670319086527114][1]
    ) ; [17456476609709368689][1]
  ) ; [18271040479534012842][1]
) ; [18286134575159798304][1]
.[DEBUG] BEGIN TEST: test_implication_implicant_conjunction
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-implication-implicant-conjunction.scm":
(ImplicationLink (stv 0.2 0.6)
   (PredicateNode "P2" (stv 0.01 0.7))
   (PredicateNode "Q" (stv 0.05 0.8))
)


;;; note: auto-compilation is enabled, set GUILE_AUTO_COMPILE=0
;;;       or pass the --no-auto-compile argument to disable.
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-assertions.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-assertions.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-predicates.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-predicates.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/wip/and-introduction.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/and-introduction.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/wip/or-introduction.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/or-introduction.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/wip/not-introduction.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/not-introduction.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-forall.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-forall.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/wip/forall-instantiation.scm
;;; opencog/pln/rules/wip/forall-instantiation.scm:89:24: warning: possibly unbound variable `select-substitution-term'
;;; opencog/pln/rules/wip/forall-instantiation.scm:93:24: warning: possibly unbound variable `select-substitution-terms'
;;; opencog/pln/rules/wip/forall-instantiation.scm:146:26: warning: possibly unbound variable `select-rm-rnd-outgoing'
;;; opencog/pln/rules/wip/forall-instantiation.scm:151:16: warning: possibly unbound variable `select-substitution-term'
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/forall-instantiation.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/wip/forall-implication-to-higher-order.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/forall-implication-to-higher-order.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-implication.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-implication.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/implication-extra-variables.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/implication-extra-variables.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-lambda.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-lambda.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/wip/closed-lambda-introduction.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/closed-lambda-introduction.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-equivalence.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-equivalence.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-implication-implicant-conjunction.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-implication-implicant-conjunction.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/wip/implication-implicant-conjunction.scm
;;; opencog/pln/rules/wip/implication-implicant-conjunction.scm:120:11: warning: possibly unbound variable `conditional-probability-consistency'
;;; opencog/pln/rules/wip/implication-implicant-conjunction.scm:121:11: warning: possibly unbound variable `conditional-probability-consistency'
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/implication-implicant-conjunction.scm.go
;;; compiling [DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-implicant-conjunction.scm":
(DefineLink
   (DefinedSchemaNode "implication-implicant-conjunction-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$A")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
            )
         )
         (TypedVariableLink
            (VariableNode "$B")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
            )
         )
         (TypedVariableLink
            (VariableNode "$C")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
            )
         )
      )
      (AndLink
         (ImplicationLink
            (VariableNode "$B")
            (VariableNode "$C")
         )
         (ImplicationLink
            (VariableNode "$A")
            (VariableNode "$C")
         )
         (NotLink
            (EqualLink
               (VariableNode "$A")
               (VariableNode "$B")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-implicant-conjunction-formula")
         (ListLink
            (ImplicationLink
               (AndLink
                  (VariableNode "$A")
                  (VariableNode "$B")
               )
               (VariableNode "$C")
            )
            (VariableNode "$A")
            (VariableNode "$B")
            (VariableNode "$C")
            (ImplicationLink
               (VariableNode "$A")
               (VariableNode "$C")
            )
            (ImplicationLink
               (VariableNode "$B")
               (VariableNode "$C")
            )
         )
      )
   )
)


results = (SetLink
  (ImplicationLink (stv 0.400000 0.600000)
    (AndLink (stv 0.000200 0.600000)
      (PredicateNode "P2" (stv 0.010000 0.700000)) ; [1258862597075794181][1]
      (PredicateNode "P1" (stv 0.020000 0.600000)) ; [6016309567546459597][1]
    ) ; [11393286966502986236][1]
    (PredicateNode "Q" (stv 0.050000 0.800000)) ; [1103054420470118233][1]
  ) ; [9698431979636267852][1]
) ; [9713526075262053314][1]
expected = (SetLink
  (ImplicationLink (stv 0.400000 0.600000)
    (AndLink (stv 0.000200 0.600000)
      (PredicateNode "P2" (stv 0.010000 0.700000)) ; [1258862597075794181][1]
      (PredicateNode "P1" (stv 0.020000 0.600000)) ; [6016309567546459597][1]
    ) ; [11393286966502986236][1]
    (PredicateNode "Q" (stv 0.050000 0.800000)) ; [1103054420470118233][1]
  ) ; [9698431979636267852][1]
) ; [9713526075262053314][1]
.[DEBUG] BEGIN TEST: test_implication_direct_evaluation
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/implication-direct-evaluation.scm":
(EvaluationLink (stv 1 1)
   (PredicateNode "Q")
   (ConceptNode "E")
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-direct-evaluation.scm":
(DefineLink
   (DefinedSchemaNode "implication-direct-evaluation-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$P")
            (TypeNode "PredicateNode")
         )
         (TypedVariableLink
            (VariableNode "$Q")
            (TypeNode "PredicateNode")
         )
         (TypedVariableLink
            (VariableNode "$X")
            (TypeNode "ConceptNode")
         )
      )
      (AndLink
         (EvaluationLink
            (VariableNode "$P")
            (VariableNode "$X")
         )
         (NotLink
            (EqualLink
               (VariableNode "$P")
               (VariableNode "$Q")
            )
         )
         (EvaluationLink
            (VariableNode "$Q")
            (VariableNode "$X")
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-direct-evaluation-formula")
         (ListLink
            (VariableNode "$P")
            (VariableNode "$Q")
         )
      )
   )
)


results = (SetLink
  (ImplicationLink (stv 0.666667 0.003750)
    (PredicateNode "P") ; [2213889286841575705][1]
    (PredicateNode "Q") ; [1103054420470118233][1]
  ) ; [11149585767017321993][1]
  (ImplicationLink (stv 0.500000 0.005000)
    (PredicateNode "Q") ; [1103054420470118233][1]
    (PredicateNode "P") ; [2213889286841575705][1]
  ) ; [12496358190549786121][1]
) ; [11995912183581299816][1]
expected = (SetLink
  (ImplicationLink (stv 0.666667 0.003750)
    (PredicateNode "P") ; [2213889286841575705][1]
    (PredicateNode "Q") ; [1103054420470118233][1]
  ) ; [11149585767017321993][1]
  (ImplicationLink (stv 0.500000 0.005000)
    (PredicateNode "Q") ; [1103054420470118233][1]
    (PredicateNode "P") ; [2213889286841575705][1]
  ) ; [12496358190549786121][1]
) ; [11995912183581299816][1]
.[DEBUG] BEGIN TEST: test_conditional_full_instantiation_meta_rule
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-implication-scope.scm":
(ImplicationScopeLink (stv 1 1)
   (TypedVariableLink
      (VariableNode "$X")
      (TypeNode "ConceptNode")
   )
   (EvaluationLink
      (PredicateNode "P")
      (VariableNode "$X")
   )
   (EvaluationLink
      (PredicateNode "Q")
      (VariableNode "$X")
   )
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/meta-rules/predicate/conditional-full-instantiation.scm":
(DefineLink
   (DefinedSchemaNode "conditional-full-instantiation-inheritance-meta-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$A")
            (TypeNode "ConceptNode")
         )
         (TypedVariableLink
            (VariableNode "$B")
            (TypeNode "ConceptNode")
         )
      )
      (AndLink
         (EvaluationLink
            (GroundedPredicateNode "scm: gt-zero-confidence")
            (InheritanceLink
               (VariableNode "$A")
               (VariableNode "$B")
            )
         )
         (InheritanceLink
            (VariableNode "$A")
            (VariableNode "$B")
         )
      )
      (QuoteLink
         (BindLink
            (VariableNode "$X")
            (AndLink
               (EvaluationLink
                  (GroundedPredicateNode "scm: gt-zero-confidence")
                  (MemberLink
                     (VariableNode "$X")
                     (UnquoteLink
                        (VariableNode "$A")
                     )
                  )
               )
               (MemberLink
                  (VariableNode "$X")
                  (UnquoteLink
                     (VariableNode "$A")
                  )
               )
            )
            (ExecutionOutputLink
               (GroundedSchemaNode "scm: conditional-full-instantiation-formula")
               (ListLink
                  (MemberLink
                     (VariableNode "$X")
                     (UnquoteLink
                        (VariableNode "$B")
                     )
                  )
                  (MemberLink
                     (VariableNode "$X")
                     (UnquoteLink
                        (VariableNode "$A")
                     )
                  )
                  (InheritanceLink
                     (UnquoteLink
                        (VariableNode "$A")
                     )
                     (UnquoteLink
                        (VariableNode "$B")
                     )
                  )
               )
            )
         )
      )
   )
)


results = (SetLink
  (BindLink
    (TypedVariableLink
      (VariableNode "$X") ; [6809953386495729144][1]
      (TypeNode "ConceptNode") ; [3788696113922021255][1]
    ) ; [9225281168777978483][1]
    (AndLink
      (EvaluationLink
        (GroundedPredicateNode "scm: gt-zero-confidence") ; [2096565403849494700][1]
        (EvaluationLink
          (PredicateNode "P") ; [2213889286841575705][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17009747857858600672][1]
      ) ; [14114482153628023227][1]
      (EvaluationLink
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [13123684890864222853][1]
    (ExecutionOutputLink
      (GroundedSchemaNode "scm: conditional-full-instantiation-scope-formula") ; [4493803386725613298][1]
      (ListLink
        (EvaluationLink
          (PredicateNode "Q") ; [1103054420470118233][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17245685415019607328][1]
        (EvaluationLink
          (PredicateNode "P") ; [2213889286841575705][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17009747857858600672][1]
        (ImplicationScopeLink (stv 1.000000 1.000000)
          (TypedVariableLink
            (VariableNode "$X") ; [6809953386495729144][1]
            (TypeNode "ConceptNode") ; [3788696113922021255][1]
          ) ; [9225281168777978483][1]
          (EvaluationLink
            (PredicateNode "P") ; [2213889286841575705][1]
            (VariableNode "$X") ; [6809953386495729144][1]
          ) ; [17009747857858600672][1]
          (EvaluationLink
            (PredicateNode "Q") ; [1103054420470118233][1]
            (VariableNode "$X") ; [6809953386495729144][1]
          ) ; [17245685415019607328][1]
        ) ; [11246417726306593584][1]
      ) ; [10331289160163372621][1]
    ) ; [13313479423463298105][1]
  ) ; [17114744695775993775][1]
) ; [17129838791401779237][1]
expected = (SetLink
  (BindLink
    (TypedVariableLink
      (VariableNode "$X") ; [6809953386495729144][1]
      (TypeNode "ConceptNode") ; [3788696113922021255][1]
    ) ; [9225281168777978483][1]
    (AndLink
      (EvaluationLink
        (GroundedPredicateNode "scm: gt-zero-confidence") ; [2096565403849494700][1]
        (EvaluationLink
          (PredicateNode "P") ; [2213889286841575705][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17009747857858600672][1]
      ) ; [14114482153628023227][1]
      (EvaluationLink
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [13123684890864222853][1]
    (ExecutionOutputLink
      (GroundedSchemaNode "scm: conditional-full-instantiation-scope-formula") ; [4493803386725613298][1]
      (ListLink
        (EvaluationLink
          (PredicateNode "Q") ; [1103054420470118233][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17245685415019607328][1]
        (EvaluationLink
          (PredicateNode "P") ; [2213889286841575705][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17009747857858600672][1]
        (ImplicationScopeLink (stv 1.000000 1.000000)
          (TypedVariableLink
            (VariableNode "$X") ; [6809953386495729144][1]
            (TypeNode "ConceptNode") ; [3788696113922021255][1]
          ) ; [9225281168777978483][1]
          (EvaluationLink
            (PredicateNode "P") ; [2213889286841575705][1]
            (VariableNode "$X") ; [6809953386495729144][1]
          ) ; [17009747857858600672][1]
          (EvaluationLink
            (PredicateNode "Q") ; [1103054420470118233][1]
            (VariableNode "$X") ; [6809953386495729144][1]
          ) ; [17245685415019607328][1]
        ) ; [11246417726306593584][1]
      ) ; [10331289160163372621][1]
    ) ; [13313479423463298105][1]
  ) ; [17114744695775993775][1]
) ; [17129838791401779237][1]
.[DEBUG] BEGIN TEST: test_consequent_disjunction_elimination
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-consequent-disjunction-elimination.scm":
(ImplicationLink (stv 0.2 0.6)
   (PredicateNode "P" (stv 0.02 0.6))
   (PredicateNode "Q2" (stv 0.05 0.8))
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/propositional/consequent-disjunction-elimination.scm":
(DefineLink
   (DefinedSchemaNode "consequent-disjunction-elimination-implication-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$A")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
               (TypeNode "AndLink")
               (TypeNode "OrLink")
               (TypeNode "NotLink")
            )
         )
         (TypedVariableLink
            (VariableNode "$B")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
               (TypeNode "AndLink")
               (TypeNode "OrLink")
               (TypeNode "NotLink")
            )
         )
         (TypedVariableLink
            (VariableNode "$C")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
               (TypeNode "AndLink")
               (TypeNode "OrLink")
               (TypeNode "NotLink")
            )
         )
      )
      (ImplicationLink
         (VariableNode "$A")
         (OrLink
            (VariableNode "$C")
            (VariableNode "$B")
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: consequent-disjunction-elimination-formula")
         (ListLink
            (ImplicationLink
               (VariableNode "$A")
               (VariableNode "$B")
            )
            (ImplicationLink
               (VariableNode "$A")
               (OrLink
                  (VariableNode "$C")
                  (VariableNode "$B")
               )
            )
            (ImplicationLink
               (VariableNode "$A")
               (VariableNode "$C")
            )
         )
      )
   )
)


results = (SetLink
  (ImplicationLink (stv 0.125000 0.540000)
    (PredicateNode "P" (stv 0.020000 0.600000)) ; [2213889286841575705][1]
    (PredicateNode "Q1" (stv 0.010000 0.700000)) ; [2480207013189331713][1]
  ) ; [12526738359736535473][1]
) ; [12541832455362320935][1]
expected = (SetLink
  (ImplicationLink (stv 0.125000 0.540000)
    (PredicateNode "P" (stv 0.020000 0.600000)) ; [2213889286841575705][1]
    (PredicateNode "Q1" (stv 0.010000 0.700000)) ; [2480207013189331713][1]
  ) ; [12526738359736535473][1]
) ; [12541832455362320935][1]
.
Failed 1 and Skipped 0 of 21 tests
Success rate: 95%
Obsolete! Do not use cog-bind, use cog-execute! insead.
/home/opencog/opencog/opencog/pln/rules/wip/formulas.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/formulas.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/implication-direct-evaluation.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/implication-direct-evaluation.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/wip/implication-direct-evaluation.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/implication-direct-evaluation.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-implication-scope.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-implication-scope.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/meta-rules/predicate/conditional-full-instantiation.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/meta-rules/predicate/conditional-full-instantiation.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-consequent-disjunction-elimination.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-consequent-disjunction-elimination.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/propositional/consequent-disjunction-elimination.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/propositional/consequent-disjunction-elimination.scm.go

      Start  8: OpenPsiRulesUTest
 8/16 Test  #8: OpenPsiRulesUTest ................   Passed    2.14 sec
      Start  9: OpenPsiImplicatorUTest
 9/16 Test  #9: OpenPsiImplicatorUTest ...........   Passed    0.32 sec
      Start 10: OpenPsiSCMUTest
10/16 Test #10: OpenPsiSCMUTest ..................   Passed    0.23 sec
      Start 11: DimEmbedUTest
11/16 Test #11: DimEmbedUTest ....................***Exception: SegFault  0.28 sec
Running cxxtest tests (4 tests)ImportError: No module named opencog.atomspace

      Start 12: StatisticsUTest
12/16 Test #12: StatisticsUTest ..................   Passed    0.01 sec
      Start 13: PatternMinerUTest
13/16 Test #13: PatternMinerUTest ................   Passed    0.21 sec
      Start 14: PatternIndexAPIUTest
14/16 Test #14: PatternIndexAPIUTest .............   Passed    0.40 sec
      Start 15: XPatternMinerUTest
15/16 Test #15: XPatternMinerUTest ...............   Passed    3.54 sec
      Start 16: UREPatternMinerUTest
16/16 Test #16: UREPatternMinerUTest .............   Passed    3.61 sec

63% tests passed, 6 tests failed out of 16

Total Test time (real) =  20.81 sec

The following tests FAILED:
	  2 - AtomSpacePublisherModuleUTest (SEGFAULT)
	  3 - CogServerUTest (SEGFAULT)
	  4 - ShellUTest (SEGFAULT)
	  5 - AgentUTest (SEGFAULT)
	  7 - PLNRulesUTest (Failed)
	 11 - DimEmbedUTest (SEGFAULT)
Errors while running CTest
make[3]: *** [CMakeFiles/test] Error 8
make[2]: *** [CMakeFiles/test.dir/all] Error 2
make[1]: *** [CMakeFiles/test.dir/rule] Error 2
CMakeFiles/test.dir/build.make:57: recipe for target 'CMakeFiles/test' failed
CMakeFiles/Makefile2:99: recipe for target 'CMakeFiles/test.dir/all' failed
CMakeFiles/Makefile2:106: recipe for target 'CMakeFiles/test.dir/rule' failed
Makefile:197: recipe for target 'test' failed
make: *** [test] Error 2
+ DSTATUS=TESTFAIL
+ /var/lib/jenkins/status/updateStatus TESTFAIL /var/lib/jenkins/jobs/OpenCOG_DebStab_Opencog/builds/72/log OpenCOG_DebStab_Opencog
Already up-to-date.
