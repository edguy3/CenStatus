Started by user [8mha:////4L2jTPWu9zIb56dnp8RqVObesKKV2DVGI0jJXlam1DqAAAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAzWEgZu/dLi1CL9xJTczDwAj6GcLcAAAAA=[0madmin
Building in workspace /var/lib/jenkins/workspace/OpenCOG_U1604_Opencog
[OpenCOG_U1604_Opencog] $ /bin/sh -xe /tmp/jenkins3798575847798895882.sh
+ COGDIR=../OpenCOG_U1604
+ . ../OpenCOG_U1604/build.docker/docker.env
+ CID=62beca4a04d76449e8de933638249e731f8bad604425a04112fca70a51bb631b
+ DKRUNROOT=docker exec --user root   62beca4a04d76449e8de933638249e731f8bad604425a04112fca70a51bb631b
+ DKRUNUSER=docker exec --user jenkins  62beca4a04d76449e8de933638249e731f8bad604425a04112fca70a51bb631b
+ UID=125
+ GID=132
+ LOGFILE=/var/lib/jenkins/jobs/OpenCOG_U1604_Opencog/builds/178/log
+ cat


**********************************************************
**********************************************************
**********************************************************
**********************************************************
*****                                                *****
*****                  Opencog TEST                *****
*****                                                *****
**********************************************************
**********************************************************
**********************************************************
**********************************************************


+ echo GIT_COMMIT=
GIT_COMMIT=
+ echo GIT_BRANCH=
GIT_BRANCH=
+ echo GIT_URL=
GIT_URL=
+ WDIR=opencog/
+ JOBDIR=../OpenCOG_U1604/dependencies
+ cat
+ chmod +x ../OpenCOG_U1604/dependencies/job1
+ docker exec --user jenkins 62beca4a04d76449e8de933638249e731f8bad604425a04112fca70a51bb631b bash dependencies/job1
+ cd opencog/
+ cd build
+ make -j8 test
[  1%] Generating PLNRulesUTest.cpp
[  1%] Generating MOSESPLNSynergyUTest.cpp
[  3%] Built target attention_atom_types
[  6%] Built target miner
[  8%] Built target json_spirit
[ 12%] Built target atom_octomap
[ 20%] Built target server
[ 24%] Built target openpsi
[ 25%] Built target spacetime_atom_types
[ 25%] Built target patternminer_atom_types
[ 27%] Built target statistics
[ 29%] Built target nlp_atom_types
[ 29%] Generating UREMinerUTest.cpp
[ 29%] Generating MinerUTest.cpp
[ 29%] Generating CogServerUTest.cpp
[ 29%] Generating ShellUTest.cpp
[ 32%] Built target attention-types
[ 32%] Built target atomspacepublishermodule
[ 32%] Generating AgentUTest.cpp
[ 32%] Generating AtomOcTreeUTest.cpp
Scanning dependencies of target PLNRulesUTest
Scanning dependencies of target MOSESPLNSynergyUTest
[ 32%] Building CXX object tests/pln/rules/CMakeFiles/PLNRulesUTest.dir/PLNRulesUTest.cpp.o
[ 32%] Building CXX object tests/pln/CMakeFiles/MOSESPLNSynergyUTest.dir/MOSESPLNSynergyUTest.cpp.o
Scanning dependencies of target CogServerUTest
Scanning dependencies of target ShellUTest
[ 34%] Building CXX object tests/server/CMakeFiles/CogServerUTest.dir/CogServerUTest.cpp.o
Scanning dependencies of target MinerUTest
Scanning dependencies of target AtomOcTreeUTest
[ 36%] Building CXX object tests/server/CMakeFiles/ShellUTest.dir/ShellUTest.cpp.o
Scanning dependencies of target UREMinerUTest
[ 39%] Building CXX object tests/spacetime/CMakeFiles/AtomOcTreeUTest.dir/AtomOcTreeUTest.cpp.o
[ 39%] Building CXX object tests/learning/miner/CMakeFiles/MinerUTest.dir/MinerUTest.cpp.o
Scanning dependencies of target AgentUTest
[ 39%] Building CXX object tests/server/CMakeFiles/AgentUTest.dir/AgentUTest.cpp.o
[ 41%] Building CXX object tests/learning/miner/CMakeFiles/UREMinerUTest.dir/UREMinerUTest.cpp.o
[ 43%] Linking CXX executable MOSESPLNSynergyUTest
[ 43%] Built target MOSESPLNSynergyUTest
[ 44%] Generating TimeSpaceAtomUTest.cpp
Scanning dependencies of target TimeSpaceAtomUTest
[ 44%] Building CXX object tests/spacetime/CMakeFiles/TimeSpaceAtomUTest.dir/TimeSpaceAtomUTest.cpp.o
[ 46%] Linking CXX executable AgentUTest
[ 46%] Linking CXX executable ShellUTest
[ 46%] Built target AgentUTest
[ 46%] Generating OpenPsiSCMUTest.cpp
Scanning dependencies of target OpenPsiSCMUTest
[ 48%] Building CXX object tests/openpsi/CMakeFiles/OpenPsiSCMUTest.dir/OpenPsiSCMUTest.cpp.o
[ 48%] Built target ShellUTest
[ 50%] Generating OpenPsiImplicatorUTest.cpp
[ 50%] Linking CXX executable AtomOcTreeUTest
Scanning dependencies of target OpenPsiImplicatorUTest
[ 50%] Building CXX object tests/openpsi/CMakeFiles/OpenPsiImplicatorUTest.dir/OpenPsiImplicatorUTest.cpp.o
[ 50%] Built target AtomOcTreeUTest
[ 50%] Generating OpenPsiRulesUTest.cpp
Scanning dependencies of target OpenPsiRulesUTest
[ 50%] Building CXX object tests/openpsi/CMakeFiles/OpenPsiRulesUTest.dir/OpenPsiRulesUTest.cpp.o
[ 50%] Linking CXX executable CogServerUTest
[ 51%] Linking CXX executable PLNRulesUTest
[ 51%] Built target CogServerUTest
[ 53%] Built target dimensionalembedding
[ 53%] Generating StatisticsUTest.cpp
Scanning dependencies of target StatisticsUTest
[ 53%] Built target PLNRulesUTest
[ 55%] Building CXX object tests/learning/statistics/CMakeFiles/StatisticsUTest.dir/StatisticsUTest.cpp.o
[ 58%] Built target patternminer-types
[ 67%] Built target patternindex
[ 75%] Built target attention
[ 77%] Generating AtomSpacePublisherModuleUTest.cpp
Scanning dependencies of target AtomSpacePublisherModuleUTest
[ 77%] Building CXX object tests/persist/zmq/events/CMakeFiles/AtomSpacePublisherModuleUTest.dir/AtomSpacePublisherModuleUTest.cpp.o
[ 77%] Linking CXX executable UREMinerUTest
[ 77%] Built target UREMinerUTest
[ 79%] Generating DimEmbedUTest.cpp
Scanning dependencies of target DimEmbedUTest
[ 79%] Building CXX object tests/learning/dimensionalembedding/CMakeFiles/DimEmbedUTest.dir/DimEmbedUTest.cpp.o
[ 79%] Linking CXX executable MinerUTest
[ 79%] Built target MinerUTest
[ 84%] Built target PatternMiner
[ 84%] Generating PatternIndexAPIUTest.cpp
Scanning dependencies of target PatternIndexAPIUTest
[ 84%] Building CXX object tests/learning/pattern-index/CMakeFiles/PatternIndexAPIUTest.dir/PatternIndexAPIUTest.cpp.o
[ 84%] Linking CXX executable StatisticsUTest
[ 84%] Built target StatisticsUTest
[ 84%] Generating AttentionParamQueryUTest.cpp
Scanning dependencies of target AttentionParamQueryUTest
[ 84%] Building CXX object tests/attention/CMakeFiles/AttentionParamQueryUTest.dir/AttentionParamQueryUTest.cpp.o
[ 86%] Linking CXX executable OpenPsiRulesUTest
[ 86%] Linking CXX executable OpenPsiSCMUTest
[ 86%] Built target OpenPsiRulesUTest
[ 86%] Built target OpenPsiSCMUTest
[ 87%] Generating PatternMinerUTest.cpp
Scanning dependencies of target PatternMinerUTest
[ 87%] Building CXX object tests/learning/PatternMiner/CMakeFiles/PatternMinerUTest.dir/PatternMinerUTest.cpp.o
[ 89%] Linking CXX executable OpenPsiImplicatorUTest
[ 89%] Built target OpenPsiImplicatorUTest
[ 91%] Linking CXX executable TimeSpaceAtomUTest
[ 91%] Built target TimeSpaceAtomUTest
[ 93%] Linking CXX executable PatternIndexAPIUTest
CMakeFiles/PatternIndexAPIUTest.dir/PatternIndexAPIUTest.cpp.o: In function `PatternIndexAPIUTest::PatternIndexAPIUTest()':
/home/opencog/opencog/build/tests/learning/pattern-index/../../../../tests/learning/pattern-index/PatternIndexAPIUTest.cxxtest:76: warning: the use of `tmpnam' is dangerous, better use `mkstemp'
[ 93%] Built target PatternIndexAPIUTest
[ 94%] Linking CXX executable AttentionParamQueryUTest
[ 94%] Built target AttentionParamQueryUTest
[ 96%] Linking CXX executable DimEmbedUTest
[ 96%] Built target DimEmbedUTest
[ 98%] Linking CXX executable PatternMinerUTest
[ 98%] Built target PatternMinerUTest
[100%] Linking CXX executable AtomSpacePublisherModuleUTest
[100%] Built target AtomSpacePublisherModuleUTest
Scanning dependencies of target tests
[100%] Built target tests
Scanning dependencies of target test
[100%] Running tests...
Test project /home/opencog/opencog/build/tests
      Start  1: AttentionParamQueryUTest
 1/18 Test  #1: AttentionParamQueryUTest .........   Passed    0.01 sec
      Start  2: AtomSpacePublisherModuleUTest
 2/18 Test  #2: AtomSpacePublisherModuleUTest ....   Passed    5.32 sec
      Start  3: CogServerUTest
 3/18 Test  #3: CogServerUTest ...................***Exception: SegFault  0.80 sec
Running cxxtest tests (2 tests)
In CogServerUTest::testProcessAgents:
/home/opencog/opencog/build/tests/server/../../../tests/server/CogServerUTest.cxxtest:157: Error: Assertion failed: aat[a[0]].size() == 50
/home/opencog/opencog/build/tests/server/../../../tests/server/CogServerUTest.cxxtest:158: Error: Assertion failed: aat[a[1]].size() == 25
/home/opencog/opencog/build/tests/server/../../../tests/server/CogServerUTest.cxxtest:159: Error: Assertion failed: aat[a[2]].size() == 16
/home/opencog/opencog/build/tests/server/../../../tests/server/CogServerUTest.cxxtest:160: Error: Assertion failed: aat[a[3]].size() == 12
/home/opencog/opencog/build/tests/server/../../../tests/server/CogServerUTest.cxxtest:161: Error: Assertion failed: aat[a[4]].size() == 10

      Start  4: ShellUTest
 4/18 Test  #4: ShellUTest .......................   Passed  118.44 sec
      Start  5: AgentUTest
 5/18 Test  #5: AgentUTest .......................   Passed    0.21 sec
      Start  6: AtomOcTreeUTest
 6/18 Test  #6: AtomOcTreeUTest ..................***Exception: SegFault  0.07 sec
Running cxxtest tests (1 test)
generating example map

      Start  7: TimeSpaceAtomUTest
 7/18 Test  #7: TimeSpaceAtomUTest ...............***Exception: SegFault  0.07 sec
Running cxxtest tests (1 test)
generating example map

      Start  8: MOSESPLNSynergyUTest
 8/18 Test  #8: MOSESPLNSynergyUTest .............   Passed    5.40 sec
      Start  9: PLNRulesUTest
 9/18 Test  #9: PLNRulesUTest ....................***Failed    1.76 sec
Running cxxtest tests (21 tests)[DEBUG] BEGIN TEST: test_deduction
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-assertions.scm":


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/term/deduction.scm":
Backtrace:
          14 (apply-smob/1 #<catch-closure 135b160>)
          13 (apply-smob/1 #<catch-closure 135b040>)
In ice-9/boot-9.scm:
   2312:4 12 (save-module-excursion #<procedure 1315aa0 at ice-9/eva…>)
In ice-9/eval-string.scm:
     38:6 11 (read-and-eval #<input: string 11ddaf0> #:lang _)
In ice-9/boot-9.scm:
   1693:5 10 (%start-stack load-stack _)
   1695:9  9 (_)
In unknown file:
           8 (primitive-load-path "opencog/pln/rules/term/deduction.…")
In term/deduction.scm:
     27:0  7 (_)
In ice-9/boot-9.scm:
   2312:4  6 (save-module-excursion #<procedure 1470cc0 at ice-9/boo…>)
   3836:9  5 (_)
   1693:5  4 (%start-stack load-stack _)
   1695:9  3 (_)
In unknown file:
           2 (primitive-load-path "term/formulas.scm")
In ice-9/boot-9.scm:
   751:25  1 (dispatch-exception 0 misc-error ("primitive-load-pa…" …))
In unknown file:
           0 (apply-smob/1 #<catch-closure 135b000> misc-error "pri…" …)

ERROR: In procedure apply-smob/1:
In procedure primitive-load-path: Unable to find file "term/formulas.scm" in load path
ABORT: misc-error

[ERROR] Backtrace:
           8 (apply-smob/1 #<catch-closure 10db1a0>)
           7 (apply-smob/1 #<catch-closure 10db100>)
In ice-9/boot-9.scm:
   2312:4  6 (save-module-excursion #<procedure 12c2840 at ice-9/eva…>)
In ice-9/eval-string.scm:
     38:6  5 (read-and-eval #<input: string 10dc620> #:lang _)
In ice-9/eval.scm:
   191:35  4 (_ #f)
   223:20  3 (proc #<directory (guile-user) dc7140>)
In unknown file:
           2 (%resolve-variable (7 . deduction-inheritance-rule) #<d…>)
In ice-9/boot-9.scm:
   751:25  1 (dispatch-exception 0 unbound-variable (#f "Unbound …" …))
In unknown file:
           0 (apply-smob/1 #<catch-closure 10db0c0> unbound-variable …)

ERROR: In procedure apply-smob/1:
Unbound variable: deduction-inheritance-rule
ABORT: unbound-variable
 (/home/opencog/atomspace/opencog/guile/SchemeEval.cc:930)
	Stack Trace:
	2: Logger.cc:491	  opencog::Logger::logva(opencog::Logger::Level, char const*, __va_list_tag*)
	3: Logger.cc:503	  opencog::Logger::Error::operator()(char const*, ...)
	4: exceptions.cc:55	  opencog::StandardException::parse_error_message(char const*, __va_list_tag*, bool)
	5: exceptions.cc:82	  opencog::StandardException::parse_error_message(char const*, char const*, __va_list_tag*, bool)
	6: exceptions.cc:150	  opencog::RuntimeException::RuntimeException(char const*, char const*, ...)
	7: SchemeEval.cc:930	  opencog::SchemeEval::eval_v(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	8: SchemeEval.h:170	  opencog::SchemeEval::eval_h(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	9: shared_ptr_base.h:658	  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
	10: RealDescriptions.cpp:125	  CxxTest::RealTestDescription::run()
	11: TestRunner.h:104	  CxxTest::TestRunner::runTest(CxxTest::TestDescription&)
	12: PLNRulesUTest.cpp:20	main()
	13: [0x20830] ??() ??:0
	14: [0x4104d9] ??() ??:0


In PLNRulesUTest::test_deduction:
/home/opencog/opencog/tests/pln/rules/PLNRulesUTest.cxxtest:82: Error: Test failed: Backtrace:
           8 (apply-smob/1 #<catch-closure 10db1a0>)
           7 (apply-smob/1 #<catch-closure 10db100>)
In ice-9/boot-9.scm:
   2312:4  6 (save-module-excursion #<procedure 12c2840 at ice-9/eva…>)
In ice-9/eval-string.scm:
     38:6  5 (read-and-eval #<input: string 10dc620> #:lang _)
In ice-9/eval.scm:
   191:35  4 (_ #f)
   223:20  3 (proc #<directory (guile-user) dc7140>)
In unknown file:
           2 (%resolve-variable (7 . deduction-inheritance-rule) #<d…>)
In ice-9/boot-9.scm:
   751:25  1 (dispatch-exception 0 unbound-variable (#f "Unbound …" …))
In unknown file:
           0 (apply-smob/1 #<catch-closure 10db0c0> unbound-variable …)

ERROR: In procedure apply-smob/1:
Unbound variable: deduction-inheritance-rule
ABORT: unbound-variable
 (/home/opencog/atomspace/opencog/guile/SchemeEval.cc:930)
[DEBUG] BEGIN TEST: test_and_introduction
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-predicates.scm":
(PredicateNode "Q" (stv 0.6 1))


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/and-introduction.scm":
(DefineLink
   (DefinedSchemaNode "and-introduction-grounded-evaluation-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$A")
            (TypeNode "EvaluationLink")
         )
         (TypedVariableLink
            (VariableNode "$B")
            (TypeNode "EvaluationLink")
         )
         (TypedVariableLink
            (VariableNode "$C")
            (TypeNode "EvaluationLink")
         )
      )
      (AndLink
         (VariableNode "$A")
         (VariableNode "$C")
         (VariableNode "$B")
         (NotLink
            (EqualLink
               (VariableNode "$A")
               (VariableNode "$C")
            )
         )
         (NotLink
            (EqualLink
               (VariableNode "$A")
               (VariableNode "$B")
            )
         )
         (EvaluationLink
            (GroundedPredicateNode "scm: fully-grounded")
            (ListLink
               (VariableNode "$A")
            )
         )
         (NotLink
            (EqualLink
               (VariableNode "$C")
               (VariableNode "$B")
            )
         )
         (EvaluationLink
            (GroundedPredicateNode "scm: fully-grounded")
            (ListLink
               (VariableNode "$C")
            )
         )
         (EvaluationLink
            (GroundedPredicateNode "scm: fully-grounded")
            (ListLink
               (VariableNode "$B")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: and-introduction-grounded-evaluation-formula")
         (ListLink
            (VariableNode "$A")
            (VariableNode "$B")
            (VariableNode "$C")
         )
      )
   )
)


.[DEBUG] BEGIN TEST: test_or_introduction
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-predicates.scm":
(PredicateNode "Q" (stv 0.6 1))


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/or-introduction.scm":
(DefineLink
   (DefinedSchemaNode "or-introduction-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$A")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "ConceptNode")
            )
         )
         (TypedVariableLink
            (VariableNode "$B")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "ConceptNode")
            )
         )
      )
      (AndLink
         (VariableNode "$A")
         (VariableNode "$B")
         (NotLink
            (EqualLink
               (VariableNode "$A")
               (VariableNode "$B")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: or-introduction-formula")
         (ListLink
            (VariableNode "$A")
            (VariableNode "$B")
         )
      )
   )
)


.[DEBUG] BEGIN TEST: test_not_introduction
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-predicates.scm":
(PredicateNode "Q" (stv 0.6 1))


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/not-introduction.scm":
(DefineLink
   (DefinedSchemaNode "not-introduction-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$A")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "ConceptNode")
            )
         )
      )
      (VariableNode "$A")
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: not-introduction-formula")
         (ListLink
            (VariableNode "$A")
         )
      )
   )
)


.[DEBUG] BEGIN TEST: test_forall_full_instantiation
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-forall.scm":
(ForAllLink (stv 1 1)
   (TypedVariableLink
      (VariableNode "$X")
      (TypeNode "ConceptNode")
   )
   (ImplicationLink
      (EvaluationLink
         (PredicateNode "P")
         (VariableNode "$X")
      )
      (EvaluationLink
         (PredicateNode "P")
         (VariableNode "$X")
      )
   )
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/forall-instantiation.scm":
(DefineLink
   (DefinedSchemaNode "forall-partial-instantiation-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeNode "VariableList")
         )
         (VariableNode "$B")
      )
      (QuoteLink
         (ForAllLink
            (UnquoteLink
               (VariableNode "$TyVs")
            )
            (UnquoteLink
               (VariableNode "$B")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: forall-partial-instantiation-formula")
         (ListLink
            (VariableNode "$TyVs")
            (VariableNode "$B")
         )
      )
   )
)


.[DEBUG] BEGIN TEST: test_forall_partial_instantiation
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-forall.scm":
(ForAllLink (stv 1 1)
   (TypedVariableLink
      (VariableNode "$X")
      (TypeNode "ConceptNode")
   )
   (ImplicationLink
      (EvaluationLink
         (PredicateNode "P")
         (VariableNode "$X")
      )
      (EvaluationLink
         (PredicateNode "P")
         (VariableNode "$X")
      )
   )
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/forall-instantiation.scm":
(DefineLink
   (DefinedSchemaNode "forall-partial-instantiation-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeNode "VariableList")
         )
         (VariableNode "$B")
      )
      (QuoteLink
         (ForAllLink
            (UnquoteLink
               (VariableNode "$TyVs")
            )
            (UnquoteLink
               (VariableNode "$B")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: forall-partial-instantiation-formula")
         (ListLink
            (VariableNode "$TyVs")
            (VariableNode "$B")
         )
      )
   )
)


.[DEBUG] BEGIN TEST: test_forall_implication_to_higher_order
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-forall.scm":
(ForAllLink (stv 1 1)
   (TypedVariableLink
      (VariableNode "$X")
      (TypeNode "ConceptNode")
   )
   (ImplicationLink
      (EvaluationLink
         (PredicateNode "P")
         (VariableNode "$X")
      )
      (EvaluationLink
         (PredicateNode "P")
         (VariableNode "$X")
      )
   )
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/forall-implication-to-higher-order.scm":
(DefineLink
   (DefinedSchemaNode "forall-implication-to-higher-order-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeChoice
               (TypeNode "TypedVariableLink")
               (TypeNode "VariableList")
            )
         )
         (TypedVariableLink
            (VariableNode "$Impl")
            (TypeNode "ImplicationLink")
         )
      )
      (QuoteLink
         (ForAllLink
            (UnquoteLink
               (VariableNode "$TyVs")
            )
            (UnquoteLink
               (VariableNode "$Impl")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: forall-implication-to-higher-order-formula")
         (ListLink
            (VariableNode "$TyVs")
            (VariableNode "$Impl")
         )
      )
   )
)


.[DEBUG] results = (SetLink
  (ImplicationLink (stv 1.000000 1.000000)
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [14588363124250234919][1]
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [14588363124250234919][1]
  ) ; [17940789446818281381][1]
) ; [17955883542444066843][1]

[DEBUG] expected = (SetLink
  (ImplicationLink (stv 1.000000 1.000000)
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [14588363124250234919][1]
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [14588363124250234919][1]
  ) ; [17940789446818281381][1]
) ; [17955883542444066843][1]

[DEBUG] BEGIN TEST: test_implication_full_instantiation
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-implication.scm":
(ImplicationLink (stv 1 1)
   (PredicateNode "P")
   (PredicateNode "Q")
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-instantiation.scm":
(DefineLink
   (DefinedSchemaNode "implication-partial-instantiation-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeNode "VariableList")
         )
         (VariableNode "$P")
         (VariableNode "$Q")
      )
      (QuoteLink
         (ImplicationScopeLink
            (UnquoteLink
               (VariableNode "$TyVs")
            )
            (UnquoteLink
               (VariableNode "$P")
            )
            (UnquoteLink
               (VariableNode "$Q")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-partial-instantiation-formula")
         (ListLink
            (QuoteLink
               (ImplicationScopeLink
                  (UnquoteLink
                     (VariableNode "$TyVs")
                  )
                  (UnquoteLink
                     (VariableNode "$P")
                  )
                  (UnquoteLink
                     (VariableNode "$Q")
                  )
               )
            )
         )
      )
   )
)


.[DEBUG] results = (SetLink
  (EvaluationLink (stv 1.000000 0.960000)
    (PredicateNode "Q") ; [1103054420470118233][1]
    (ListLink
      (ConceptNode "B") ; [241327676611018844][1]
      (ConceptNode "A") ; [6977206836600634430][1]
    ) ; [15458283211017134999][1]
  ) ; [16670643202686237375][1]
  (EvaluationLink (stv 1.000000 0.800000)
    (PredicateNode "Q") ; [1103054420470118233][1]
    (ConceptNode "A") ; [6977206836600634430][1]
  ) ; [17412938865124512614][1]
) ; [14639947498134717755][1]

[DEBUG] expected = (SetLink
  (EvaluationLink (stv 1.000000 0.960000)
    (PredicateNode "Q") ; [1103054420470118233][1]
    (ListLink
      (ConceptNode "B") ; [241327676611018844][1]
      (ConceptNode "A") ; [6977206836600634430][1]
    ) ; [15458283211017134999][1]
  ) ; [16670643202686237375][1]
  (EvaluationLink (stv 1.000000 0.800000)
    (PredicateNode "Q") ; [1103054420470118233][1]
    (ConceptNode "A") ; [6977206836600634430][1]
  ) ; [17412938865124512614][1]
) ; [14639947498134717755][1]

[DEBUG] BEGIN TEST: test_implication_full_instantiation_extra_variables
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/implication-extra-variables.scm":
(EvaluationLink (stv 1 1)
   (PredicateNode "P")
   (ConceptNode "A")
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-instantiation.scm":
(DefineLink
   (DefinedSchemaNode "implication-partial-instantiation-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeNode "VariableList")
         )
         (VariableNode "$P")
         (VariableNode "$Q")
      )
      (QuoteLink
         (ImplicationScopeLink
            (UnquoteLink
               (VariableNode "$TyVs")
            )
            (UnquoteLink
               (VariableNode "$P")
            )
            (UnquoteLink
               (VariableNode "$Q")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-partial-instantiation-formula")
         (ListLink
            (QuoteLink
               (ImplicationScopeLink
                  (UnquoteLink
                     (VariableNode "$TyVs")
                  )
                  (UnquoteLink
                     (VariableNode "$P")
                  )
                  (UnquoteLink
                     (VariableNode "$Q")
                  )
               )
            )
         )
      )
   )
)


.[DEBUG] results = (SetLink
  (EvaluationLink (stv 1.000000 0.800000)
    (PredicateNode "Q") ; [1103054420470118233][1]
    (ListLink
      (ConceptNode "A") ; [6977206836600634430][1]
      (ConceptNode "A") ; [6977206836600634430][1]
    ) ; [16381366606159829945][1]
  ) ; [17593726597828932321][1]
) ; [17608820693454717783][1]

[DEBUG] expected = (SetLink
  (EvaluationLink (stv 1.000000 0.800000)
    (PredicateNode "Q") ; [1103054420470118233][1]
    (ListLink
      (ConceptNode "A") ; [6977206836600634430][1]
      (ConceptNode "A") ; [6977206836600634430][1]
    ) ; [16381366606159829945][1]
  ) ; [17593726597828932321][1]
) ; [17608820693454717783][1]

[DEBUG] BEGIN TEST: test_implication_partial_instantiation
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-implication.scm":
(ImplicationLink (stv 1 1)
   (PredicateNode "P")
   (PredicateNode "Q")
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-instantiation.scm":
(DefineLink
   (DefinedSchemaNode "implication-partial-instantiation-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeNode "VariableList")
         )
         (VariableNode "$P")
         (VariableNode "$Q")
      )
      (QuoteLink
         (ImplicationScopeLink
            (UnquoteLink
               (VariableNode "$TyVs")
            )
            (UnquoteLink
               (VariableNode "$P")
            )
            (UnquoteLink
               (VariableNode "$Q")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-partial-instantiation-formula")
         (ListLink
            (QuoteLink
               (ImplicationScopeLink
                  (UnquoteLink
                     (VariableNode "$TyVs")
                  )
                  (UnquoteLink
                     (VariableNode "$P")
                  )
                  (UnquoteLink
                     (VariableNode "$Q")
                  )
               )
            )
         )
      )
   )
)


.[DEBUG] results = (SetLink
  (ImplicationScopeLink (stv 1.000000 1.000000)
    (TypedVariableLink
      (VariableNode "$Y") ; [5319120082979945173][1]
      (TypeNode "ConceptNode") ; [3788696113922021255][1]
    ) ; [15368014373885762288][1]
    (EvaluationLink
      (PredicateNode "P") ; [2213889286841575705][1]
      (ListLink
        (ConceptNode "A") ; [6977206836600634430][1]
        (VariableNode "$Y") ; [5319120082979945173][1]
      ) ; [14723279852539140688][1]
    ) ; [15699702287047236408][1]
    (EvaluationLink
      (PredicateNode "Q") ; [1103054420470118233][1]
      (ListLink
        (VariableNode "$Y") ; [5319120082979945173][1]
        (ConceptNode "A") ; [6977206836600634430][1]
      ) ; [17004735957805739312][1]
    ) ; [18217095949474841688][1]
  ) ; [16406311407619762468][1]
) ; [16421405503245547930][1]

[DEBUG] possible_results_1 = (SetLink
  (ImplicationScopeLink
    (TypedVariableLink
      (VariableNode "$X") ; [6809953386495729144][1]
      (TypeNode "ConceptNode") ; [3788696113922021255][1]
    ) ; [9225281168777978483][1]
    (EvaluationLink
      (PredicateNode "P") ; [2213889286841575705][1]
      (ListLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (ConceptNode "B") ; [241327676611018844][1]
      ) ; [13349495629563115729][1]
    ) ; [14325918064071211449][1]
    (EvaluationLink
      (PredicateNode "Q") ; [1103054420470118233][1]
      (ListLink
        (ConceptNode "B") ; [241327676611018844][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [15291029760912229713][1]
    ) ; [16503389752581332089][1]
  ) ; [13995352333165931904][1]
) ; [14010446428791717366][1]

[DEBUG] possible_results_2 = (SetLink
  (ImplicationScopeLink (stv 1.000000 1.000000)
    (TypedVariableLink
      (VariableNode "$Y") ; [5319120082979945173][1]
      (TypeNode "ConceptNode") ; [3788696113922021255][1]
    ) ; [15368014373885762288][1]
    (EvaluationLink
      (PredicateNode "P") ; [2213889286841575705][1]
      (ListLink
        (ConceptNode "A") ; [6977206836600634430][1]
        (VariableNode "$Y") ; [5319120082979945173][1]
      ) ; [14723279852539140688][1]
    ) ; [15699702287047236408][1]
    (EvaluationLink
      (PredicateNode "Q") ; [1103054420470118233][1]
      (ListLink
        (VariableNode "$Y") ; [5319120082979945173][1]
        (ConceptNode "A") ; [6977206836600634430][1]
      ) ; [17004735957805739312][1]
    ) ; [18217095949474841688][1]
  ) ; [16406311407619762468][1]
) ; [16421405503245547930][1]

[DEBUG] BEGIN TEST: test_implication_scope_to_implication
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-implication.scm":
(ImplicationLink (stv 1 1)
   (PredicateNode "P")
   (PredicateNode "Q")
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-scope-to-implication.scm":
(DefineLink
   (DefinedSchemaNode "implication-scope-to-implication-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeChoice
               (TypeNode "TypedVariableLink")
               (TypeNode "VariableList")
            )
         )
         (VariableNode "$P")
         (VariableNode "$Q")
      )
      (QuoteLink
         (ImplicationScopeLink
            (UnquoteLink
               (VariableNode "$TyVs")
            )
            (UnquoteLink
               (VariableNode "$P")
            )
            (UnquoteLink
               (VariableNode "$Q")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-scope-to-implication-formula")
         (ListLink
            (ImplicationLink
               (QuoteLink
                  (LambdaLink
                     (UnquoteLink
                        (VariableNode "$TyVs")
                     )
                     (UnquoteLink
                        (VariableNode "$P")
                     )
                  )
               )
               (QuoteLink
                  (LambdaLink
                     (UnquoteLink
                        (VariableNode "$TyVs")
                     )
                     (UnquoteLink
                        (VariableNode "$Q")
                     )
                  )
               )
            )
            (QuoteLink
               (ImplicationScopeLink
                  (UnquoteLink
                     (VariableNode "$TyVs")
                  )
                  (UnquoteLink
                     (VariableNode "$P")
                  )
                  (UnquoteLink
                     (VariableNode "$Q")
                  )
               )
            )
         )
      )
   )
)


results = (SetLink
  (ImplicationLink (stv 1.000000 1.000000)
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink (stv 0.200000 0.900000)
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [14588363124250234919][1]
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "Q") ; [1103054420470118233][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17245685415019607328][1]
    ) ; [16699828174200338023][1]
  ) ; [10828882459913608677][1]
  (ImplicationLink (stv 1.000000 1.000000)
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "dummy-implicant") ; [5139476396159911888][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [12097030059961160823][1]
    ) ; [10106465455434486607][1]
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "dummy-implicand") ; [970581742967573218][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [12874087057435621833][1]
    ) ; [11708539809017810425][1]
  ) ; [14732295650342575519][1]
  (ImplicationLink (stv 1.000000 1.000000)
    (LambdaLink
      (VariableList
        (TypedVariableLink
          (VariableNode "$X") ; [6809953386495729144][1]
          (TypeNode "ConceptNode") ; [3788696113922021255][1]
        ) ; [9225281168777978483][1]
        (TypedVariableLink
          (VariableNode "$Y") ; [5319120082979945173][1]
          (TypeNode "ConceptNode") ; [3788696113922021255][1]
        ) ; [15368014373885762288][1]
      ) ; [16369752366847415642][1]
      (EvaluationLink (stv 0.040000 0.600000)
        (PredicateNode "P") ; [2213889286841575705][1]
        (ListLink
          (VariableNode "$X") ; [6809953386495729144][1]
          (VariableNode "$Y") ; [5319120082979945173][1]
        ) ; [18427288035932042058][1]
      ) ; [10180338433585361970][1]
    ) ; [14709505733433221386][1]
    (LambdaLink
      (VariableList
        (TypedVariableLink
          (VariableNode "$X") ; [6809953386495729144][1]
          (TypeNode "ConceptNode") ; [3788696113922021255][1]
        ) ; [9225281168777978483][1]
        (TypedVariableLink
          (VariableNode "$Y") ; [5319120082979945173][1]
          (TypeNode "ConceptNode") ; [3788696113922021255][1]
        ) ; [15368014373885762288][1]
      ) ; [16369752366847415642][1]
      (EvaluationLink
        (PredicateNode "Q") ; [1103054420470118233][1]
        (ListLink
          (VariableNode "$Y") ; [5319120082979945173][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [16837482507700834026][1]
      ) ; [18049842499369936402][1]
    ) ; [17041727132406887638][1]
  ) ; [15168487521158711703][1]
) ; [15669787837447769137][1]
expected = (SetLink
  (ImplicationLink (stv 1.000000 1.000000)
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink (stv 0.200000 0.900000)
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [14588363124250234919][1]
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "Q") ; [1103054420470118233][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17245685415019607328][1]
    ) ; [16699828174200338023][1]
  ) ; [10828882459913608677][1]
  (ImplicationLink (stv 1.000000 1.000000)
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "dummy-implicant") ; [5139476396159911888][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [12097030059961160823][1]
    ) ; [10106465455434486607][1]
    (LambdaLink
      (TypedVariableLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (TypeNode "ConceptNode") ; [3788696113922021255][1]
      ) ; [9225281168777978483][1]
      (EvaluationLink
        (PredicateNode "dummy-implicand") ; [970581742967573218][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [12874087057435621833][1]
    ) ; [11708539809017810425][1]
  ) ; [14732295650342575519][1]
  (ImplicationLink (stv 1.000000 1.000000)
    (LambdaLink
      (VariableList
        (TypedVariableLink
          (VariableNode "$X") ; [6809953386495729144][1]
          (TypeNode "ConceptNode") ; [3788696113922021255][1]
        ) ; [9225281168777978483][1]
        (TypedVariableLink
          (VariableNode "$Y") ; [5319120082979945173][1]
          (TypeNode "ConceptNode") ; [3788696113922021255][1]
        ) ; [15368014373885762288][1]
      ) ; [16369752366847415642][1]
      (EvaluationLink (stv 0.040000 0.600000)
        (PredicateNode "P") ; [2213889286841575705][1]
        (ListLink
          (VariableNode "$X") ; [6809953386495729144][1]
          (VariableNode "$Y") ; [5319120082979945173][1]
        ) ; [18427288035932042058][1]
      ) ; [10180338433585361970][1]
    ) ; [14709505733433221386][1]
    (LambdaLink
      (VariableList
        (TypedVariableLink
          (VariableNode "$X") ; [6809953386495729144][1]
          (TypeNode "ConceptNode") ; [3788696113922021255][1]
        ) ; [9225281168777978483][1]
        (TypedVariableLink
          (VariableNode "$Y") ; [5319120082979945173][1]
          (TypeNode "ConceptNode") ; [3788696113922021255][1]
        ) ; [15368014373885762288][1]
      ) ; [16369752366847415642][1]
      (EvaluationLink
        (PredicateNode "Q") ; [1103054420470118233][1]
        (ListLink
          (VariableNode "$Y") ; [5319120082979945173][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [16837482507700834026][1]
      ) ; [18049842499369936402][1]
    ) ; [17041727132406887638][1]
  ) ; [15168487521158711703][1]
) ; [15669787837447769137][1]
.[DEBUG] BEGIN TEST: test_and_lambda_distribution
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-lambda.scm":
(AndLink
   (LambdaLink (stv 0.6 0.3)
      (VariableNode "$X")
      (AndLink
         (EvaluationLink
            (PredicateNode "P")
            (VariableNode "$X")
         )
         (EvaluationLink
            (PredicateNode "Q")
            (VariableNode "$X")
         )
      )
   )
   (LambdaLink
      (VariableNode "$X")
      (EvaluationLink (stv 0.4 0.7)
         (PredicateNode "P")
         (ConceptNode "A")
      )
   )
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/and-lambda-distribution.scm":
(DefineLink
   (DefinedSchemaNode "and-lambda-distribution-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeChoice
               (TypeNode "TypedVariableLink")
               (TypeNode "VariableNode")
               (TypeNode "VariableList")
            )
         )
         (TypedVariableLink
            (VariableNode "$And")
            (TypeNode "AndLink")
         )
      )
      (QuoteLink
         (LambdaLink
            (UnquoteLink
               (VariableNode "$TyVs")
            )
            (UnquoteLink
               (VariableNode "$And")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: and-lambda-distribution-formula")
         (ListLink
            (QuoteLink
               (LambdaLink
                  (UnquoteLink
                     (VariableNode "$TyVs")
                  )
                  (UnquoteLink
                     (VariableNode "$And")
                  )
               )
            )
         )
      )
   )
)


results = (SetLink
  (AndLink (stv 0.600000 0.300000)
    (LambdaLink
      (VariableNode "$X") ; [6809953386495729144][1]
      (EvaluationLink
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [10899994483796243750][1]
    (LambdaLink
      (VariableNode "$X") ; [6809953386495729144][1]
      (EvaluationLink
        (PredicateNode "Q") ; [1103054420470118233][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17245685415019607328][1]
    ) ; [17936885758075965298][1]
  ) ; [9429822092035398626][1]
) ; [9444916187661184088][1]
expected = (SetLink
  (AndLink (stv 0.600000 0.300000)
    (LambdaLink
      (VariableNode "$X") ; [6809953386495729144][1]
      (EvaluationLink
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [10899994483796243750][1]
    (LambdaLink
      (VariableNode "$X") ; [6809953386495729144][1]
      (EvaluationLink
        (PredicateNode "Q") ; [1103054420470118233][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17245685415019607328][1]
    ) ; [17936885758075965298][1]
  ) ; [9429822092035398626][1]
) ; [9444916187661184088][1]
.[DEBUG] BEGIN TEST: test_implication_implicant_distribution
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-implication.scm":
(ImplicationLink (stv 1 1)
   (PredicateNode "P")
   (PredicateNode "Q")
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-implicant-distribution.scm":
(DefineLink
   (DefinedSchemaNode "implication-implicant-distribution-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$P")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
            )
         )
         (TypedVariableLink
            (VariableNode "$Q")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
            )
         )
      )
      (AndLink
         (ImplicationLink
            (VariableNode "$P")
            (VariableNode "$Q")
         )
         (EvaluationLink
            (GroundedPredicateNode "scm: gt-zero-confidence")
            (ImplicationLink
               (VariableNode "$P")
               (VariableNode "$Q")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-implicant-distribution-formula")
         (ListLink
            (ImplicationLink
               (VariableNode "$P")
               (AndLink
                  (VariableNode "$P")
                  (VariableNode "$Q")
               )
            )
            (ImplicationLink
               (VariableNode "$P")
               (VariableNode "$Q")
            )
         )
      )
   )
)


results = (SetLink
  (ImplicationLink (stv 1.000000 1.000000)
    (PredicateNode "P") ; [2213889286841575705][1]
    (AndLink
      (PredicateNode "Q") ; [1103054420470118233][1]
      (PredicateNode "P") ; [2213889286841575705][1]
    ) ; [11672568894665571868][1]
  ) ; [12495728204357999820][1]
) ; [12510822299983785282][1]
expected = (SetLink
  (ImplicationLink (stv 1.000000 1.000000)
    (PredicateNode "P") ; [2213889286841575705][1]
    (AndLink
      (PredicateNode "Q") ; [1103054420470118233][1]
      (PredicateNode "P") ; [2213889286841575705][1]
    ) ; [11672568894665571868][1]
  ) ; [12495728204357999820][1]
) ; [12510822299983785282][1]
.[DEBUG] BEGIN TEST: test_implication_introduction
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-predicates.scm":
(PredicateNode "Q" (stv 0.6 1))


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-introduction.scm":
(DefineLink
   (DefinedSchemaNode "implication-introduction-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$P")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
            )
         )
         (TypedVariableLink
            (VariableNode "$Q")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
            )
         )
      )
      (AndLink
         (VariableNode "$P")
         (VariableNode "$Q")
         (NotLink
            (EqualLink
               (VariableNode "$P")
               (VariableNode "$Q")
            )
         )
         (EvaluationLink
            (GroundedPredicateNode "scm: implication-introduction-precondition")
            (ListLink
               (VariableNode "$P")
               (VariableNode "$Q")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-introduction-formula")
         (ListLink
            (ImplicationLink
               (VariableNode "$P")
               (VariableNode "$Q")
            )
            (VariableNode "$P")
            (VariableNode "$Q")
         )
      )
   )
)


results = (SetLink
  (ImplicationLink (stv 0.600000 1.000000)
    (PredicateNode "P" (stv 0.200000 1.000000)) ; [2213889286841575705][1]
    (PredicateNode "Q" (stv 0.600000 1.000000)) ; [1103054420470118233][1]
  ) ; [11149585767017321993][1]
  (ImplicationLink (stv 0.200000 1.000000)
    (PredicateNode "Q" (stv 0.600000 1.000000)) ; [1103054420470118233][1]
    (PredicateNode "P" (stv 0.200000 1.000000)) ; [2213889286841575705][1]
  ) ; [12496358190549786121][1]
) ; [11995912183581299816][1]
expected = (SetLink
  (ImplicationLink (stv 0.600000 1.000000)
    (PredicateNode "P" (stv 0.200000 1.000000)) ; [2213889286841575705][1]
    (PredicateNode "Q" (stv 0.600000 1.000000)) ; [1103054420470118233][1]
  ) ; [11149585767017321993][1]
  (ImplicationLink (stv 0.200000 1.000000)
    (PredicateNode "Q" (stv 0.600000 1.000000)) ; [1103054420470118233][1]
    (PredicateNode "P" (stv 0.200000 1.000000)) ; [2213889286841575705][1]
  ) ; [12496358190549786121][1]
) ; [11995912183581299816][1]
.[DEBUG] BEGIN TEST: test_closed_lambda_introduction
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-lambda.scm":
(AndLink
   (LambdaLink (stv 0.6 0.3)
      (VariableNode "$X")
      (AndLink
         (EvaluationLink
            (PredicateNode "P")
            (VariableNode "$X")
         )
         (EvaluationLink
            (PredicateNode "Q")
            (VariableNode "$X")
         )
      )
   )
   (LambdaLink
      (VariableNode "$X")
      (EvaluationLink (stv 0.4 0.7)
         (PredicateNode "P")
         (ConceptNode "A")
      )
   )
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/closed-lambda-introduction.scm":
(DefineLink
   (DefinedSchemaNode "closed-lambda-introduction-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$V")
            (TypeChoice
               (TypeNode "TypedVariableLink")
               (TypeNode "VariableList")
               (TypeNode "VariableNode")
            )
         )
         (TypedVariableLink
            (VariableNode "$B")
            (TypeNode "EvaluationLink")
         )
      )
      (AndLink
         (VariableNode "$V")
         (VariableNode "$B")
         (EvaluationLink
            (GroundedPredicateNode "scm: closed-lambda-introduction-precondition")
            (VariableNode "$B")
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: closed-lambda-introduction-formula")
         (ListLink
            (QuoteLink
               (LambdaLink
                  (UnquoteLink
                     (VariableNode "$V")
                  )
                  (UnquoteLink
                     (VariableNode "$B")
                  )
               )
            )
            (VariableNode "$B")
         )
      )
   )
)


results = (SetLink
  (LambdaLink (stv 0.400000 0.700000)
    (TypedVariableLink
      (VariableNode "$V") ; [4586185897468188423][1]
      (TypeChoice
        (TypeNode "TypedVariableLink") ; [1359961696412228875][1]
        (TypeNode "VariableList") ; [7312217543151217883][1]
        (TypeNode "VariableNode") ; [5990260802578042438][1]
      ) ; [13298594162570589437][1]
    ) ; [9914456337501133528][1]
    (EvaluationLink (stv 0.400000 0.700000)
      (PredicateNode "P") ; [2213889286841575705][1]
      (ConceptNode "A") ; [6977206836600634430][1]
    ) ; [17177001307963505958][1]
  ) ; [10553669100255853716][1]
  (LambdaLink (stv 0.400000 0.700000)
    (VariableList
      (TypedVariableLink
        (VariableNode "$V") ; [4586185897468188423][1]
        (TypeChoice
          (TypeNode "TypedVariableLink") ; [1359961696412228875][1]
          (TypeNode "VariableList") ; [7312217543151217883][1]
          (TypeNode "VariableNode") ; [5990260802578042438][1]
        ) ; [13298594162570589437][1]
      ) ; [9914456337501133528][1]
      (TypedVariableLink
        (VariableNode "$B") ; [4905990271079964112][1]
        (TypeNode "EvaluationLink") ; [9191314558674562418][1]
      ) ; [16360721062793704246][1]
    ) ; [12435123513055146661][1]
    (EvaluationLink (stv 0.400000 0.700000)
      (PredicateNode "P") ; [2213889286841575705][1]
      (ConceptNode "A") ; [6977206836600634430][1]
    ) ; [17177001307963505958][1]
  ) ; [11052753510872129987][1]
  (LambdaLink (stv 0.400000 0.700000)
    (TypedVariableLink
      (VariableNode "$B") ; [4905990271079964112][1]
      (TypeNode "EvaluationLink") ; [9191314558674562418][1]
    ) ; [16360721062793704246][1]
    (EvaluationLink (stv 0.400000 0.700000)
      (PredicateNode "P") ; [2213889286841575705][1]
      (ConceptNode "A") ; [6977206836600634430][1]
    ) ; [17177001307963505958][1]
  ) ; [11093230615848302709][1]
  (LambdaLink (stv 0.400000 0.700000)
    (VariableNode "$X") ; [6809953386495729144][1]
    (EvaluationLink (stv 0.400000 0.700000)
      (PredicateNode "P") ; [2213889286841575705][1]
      (ConceptNode "A") ; [6977206836600634430][1]
    ) ; [17177001307963505958][1]
  ) ; [11917083232777086078][1]
) ; [9412742081501311712][1]
expected = (LambdaLink (stv 0.400000 0.700000)
  (VariableNode "$X") ; [6809953386495729144][1]
  (EvaluationLink (stv 0.400000 0.700000)
    (PredicateNode "P") ; [2213889286841575705][1]
    (ConceptNode "A") ; [6977206836600634430][1]
  ) ; [17177001307963505958][1]
) ; [11917083232777086078][1]
.[DEBUG] BEGIN TEST: test_equivalence_to_implication
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-equivalence.scm":
(EquivalenceLink (stv 0.6 0.7)
   (PredicateNode "Q" (stv 0.12 0.4))
   (PredicateNode "P" (stv 0.1 0.5))
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/equivalence-to-implication.scm":
(DefineLink
   (DefinedSchemaNode "equivalence-to-implication-rule")
   (BindLink
      (VariableList
         (VariableNode "$A")
         (VariableNode "$B")
      )
      (AndLink
         (EvaluationLink
            (GroundedPredicateNode "scm: gt-zero-confidence")
            (EquivalenceLink
               (VariableNode "$A")
               (VariableNode "$B")
            )
         )
         (EquivalenceLink
            (VariableNode "$A")
            (VariableNode "$B")
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: equivalence-to-implication-formula")
         (ListLink
            (ImplicationLink
               (VariableNode "$A")
               (VariableNode "$B")
            )
            (EquivalenceLink
               (VariableNode "$A")
               (VariableNode "$B")
            )
         )
      )
   )
)


results = (SetLink
  (ImplicationLink (stv 0.825000 0.700000)
    (PredicateNode "P" (stv 0.100000 0.500000)) ; [2213889286841575705][1]
    (PredicateNode "Q" (stv 0.120000 0.400000)) ; [1103054420470118233][1]
  ) ; [11149585767017321993][1]
  (ImplicationLink (stv 0.687500 0.700000)
    (PredicateNode "Q" (stv 0.120000 0.400000)) ; [1103054420470118233][1]
    (PredicateNode "P" (stv 0.100000 0.500000)) ; [2213889286841575705][1]
  ) ; [12496358190549786121][1]
) ; [11995912183581299816][1]
expected = (SetLink
  (ImplicationLink (stv 0.825000 0.700000)
    (PredicateNode "P" (stv 0.100000 0.500000)) ; [2213889286841575705][1]
    (PredicateNode "Q" (stv 0.120000 0.400000)) ; [1103054420470118233][1]
  ) ; [11149585767017321993][1]
  (ImplicationLink (stv 0.687500 0.700000)
    (PredicateNode "Q" (stv 0.120000 0.400000)) ; [1103054420470118233][1]
    (PredicateNode "P" (stv 0.100000 0.500000)) ; [2213889286841575705][1]
  ) ; [12496358190549786121][1]
) ; [11995912183581299816][1]
.[DEBUG] BEGIN TEST: test_implication_and_lambda_factorization
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-lambda.scm":
(AndLink
   (LambdaLink (stv 0.6 0.3)
      (VariableNode "$X")
      (AndLink
         (EvaluationLink
            (PredicateNode "P")
            (VariableNode "$X")
         )
         (EvaluationLink
            (PredicateNode "Q")
            (VariableNode "$X")
         )
      )
   )
   (LambdaLink
      (VariableNode "$X")
      (EvaluationLink (stv 0.4 0.7)
         (PredicateNode "P")
         (ConceptNode "A")
      )
   )
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-and-lambda-factorization.scm":
(DefineLink
   (DefinedSchemaNode "implication-and-lambda-factorization-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$TyVs")
            (TypeChoice
               (TypeNode "TypedVariableLink")
               (TypeNode "VariableNode")
               (TypeNode "VariableList")
            )
         )
         (TypedVariableLink
            (VariableNode "$A1")
            (TypeNode "EvaluationLink")
         )
         (TypedVariableLink
            (VariableNode "$A2")
            (TypeNode "EvaluationLink")
         )
      )
      (LocalQuoteLink
         (AndLink
            (QuoteLink
               (LambdaLink
                  (UnquoteLink
                     (VariableNode "$TyVs")
                  )
                  (UnquoteLink
                     (VariableNode "$A2")
                  )
               )
            )
            (QuoteLink
               (LambdaLink
                  (UnquoteLink
                     (VariableNode "$TyVs")
                  )
                  (UnquoteLink
                     (VariableNode "$A1")
                  )
               )
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-and-lambda-factorization-formula")
         (ImplicationLink
            (AndLink
               (QuoteLink
                  (LambdaLink
                     (UnquoteLink
                        (VariableNode "$TyVs")
                     )
                     (UnquoteLink
                        (VariableNode "$A2")
                     )
                  )
               )
               (QuoteLink
                  (LambdaLink
                     (UnquoteLink
                        (VariableNode "$TyVs")
                     )
                     (UnquoteLink
                        (VariableNode "$A1")
                     )
                  )
               )
            )
            (QuoteLink
               (LambdaLink
                  (UnquoteLink
                     (VariableNode "$TyVs")
                  )
                  (UnquoteLink
                     (AndLink
                        (VariableNode "$A2")
                        (VariableNode "$A1")
                     )
                  )
               )
            )
         )
      )
   )
)


results = (SetLink
  (ImplicationLink (stv 1.000000 1.000000)
    (AndLink
      (LambdaLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (EvaluationLink
          (PredicateNode "P") ; [2213889286841575705][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17009747857858600672][1]
      ) ; [10899994483796243750][1]
      (LambdaLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (EvaluationLink
          (PredicateNode "Q") ; [1103054420470118233][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17245685415019607328][1]
      ) ; [17936885758075965298][1]
    ) ; [9429822092035398626][1]
    (LambdaLink (stv 0.600000 0.300000)
      (VariableNode "$X") ; [6809953386495729144][1]
      (AndLink
        (EvaluationLink
          (PredicateNode "P") ; [2213889286841575705][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17009747857858600672][1]
        (EvaluationLink
          (PredicateNode "Q") ; [1103054420470118233][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17245685415019607328][1]
      ) ; [16669670319086527114][1]
    ) ; [9906206934425034045][1]
  ) ; [18270847894144223190][1]
) ; [18285941989770008652][1]
expected = (SetLink
  (ImplicationLink (stv 1.000000 1.000000)
    (AndLink
      (LambdaLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (EvaluationLink
          (PredicateNode "P") ; [2213889286841575705][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17009747857858600672][1]
      ) ; [10899994483796243750][1]
      (LambdaLink
        (VariableNode "$X") ; [6809953386495729144][1]
        (EvaluationLink
          (PredicateNode "Q") ; [1103054420470118233][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17245685415019607328][1]
      ) ; [17936885758075965298][1]
    ) ; [9429822092035398626][1]
    (LambdaLink (stv 0.600000 0.300000)
      (VariableNode "$X") ; [6809953386495729144][1]
      (AndLink
        (EvaluationLink
          (PredicateNode "P") ; [2213889286841575705][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17009747857858600672][1]
        (EvaluationLink
          (PredicateNode "Q") ; [1103054420470118233][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17245685415019607328][1]
      ) ; [16669670319086527114][1]
    ) ; [9906206934425034045][1]
  ) ; [18270847894144223190][1]
) ; [18285941989770008652][1]
.[DEBUG] BEGIN TEST: test_implication_implicant_conjunction
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-implication-implicant-conjunction.scm":
(ImplicationLink (stv 0.2 0.6)
   (PredicateNode "P2" (stv 0.01 0.7))
   (PredicateNode "Q" (stv 0.05 0.8))
)


;;; note: auto-compilation is enabled, set GUILE_AUTO_COMPILE=0
;;;       or pass the --no-auto-compile argument to disable.
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-assertions.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-assertions.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-predicates.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-predicates.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/wip/and-introduction.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/and-introduction.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/wip/or-introduction.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/or-introduction.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/wip/not-introduction.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/not-introduction.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-forall.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-forall.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/wip/forall-instantiation.scm
;;; opencog/pln/rules/wip/forall-instantiation.scm:89:24: warning: possibly unbound variable `select-substitution-term'
;;; opencog/pln/rules/wip/forall-instantiation.scm:93:24: warning: possibly unbound variable `select-substitution-terms'
;;; opencog/pln/rules/wip/forall-instantiation.scm:146:26: warning: possibly unbound variable `select-rm-rnd-outgoing'
;;; opencog/pln/rules/wip/forall-instantiation.scm:151:16: warning: possibly unbound variable `select-substitution-term'
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/forall-instantiation.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/wip/forall-implication-to-higher-order.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/forall-implication-to-higher-order.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-implication.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-implication.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/implication-extra-variables.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/implication-extra-variables.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-lambda.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-lambda.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/wip/closed-lambda-introduction.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/closed-lambda-introduction.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-equivalence.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-equivalence.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-implication-implicant-conjunction.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-implication-implicant-conjunction.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/wip/implication-implicant-conjunction.scm
;;; opencog/pln/rules/wip/implication-implicant-conjunction.scm:120:11: warning: possibly unbound variable `conditional-probability-consistency'
;;; opencog/pln/rules/wip/implication-implicant-conjunction.scm:121:11: warning: possibly unbound variable `conditional-probability-consistency'
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/implication-implicant-conjunction.scm.go
;;; compiling [DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-implicant-conjunction.scm":
(DefineLink
   (DefinedSchemaNode "implication-implicant-conjunction-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$A")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
            )
         )
         (TypedVariableLink
            (VariableNode "$B")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
            )
         )
         (TypedVariableLink
            (VariableNode "$C")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
            )
         )
      )
      (AndLink
         (ImplicationLink
            (VariableNode "$B")
            (VariableNode "$C")
         )
         (ImplicationLink
            (VariableNode "$A")
            (VariableNode "$C")
         )
         (NotLink
            (EqualLink
               (VariableNode "$A")
               (VariableNode "$B")
            )
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-implicant-conjunction-formula")
         (ListLink
            (ImplicationLink
               (AndLink
                  (VariableNode "$A")
                  (VariableNode "$B")
               )
               (VariableNode "$C")
            )
            (VariableNode "$A")
            (VariableNode "$B")
            (VariableNode "$C")
            (ImplicationLink
               (VariableNode "$A")
               (VariableNode "$C")
            )
            (ImplicationLink
               (VariableNode "$B")
               (VariableNode "$C")
            )
         )
      )
   )
)


results = (SetLink
  (ImplicationLink (stv 0.400000 0.600000)
    (AndLink (stv 0.000200 0.600000)
      (PredicateNode "P2" (stv 0.010000 0.700000)) ; [1258862597075794181][1]
      (PredicateNode "P1" (stv 0.020000 0.600000)) ; [6016309567546459597][1]
    ) ; [11393286966502986236][1]
    (PredicateNode "Q" (stv 0.050000 0.800000)) ; [1103054420470118233][1]
  ) ; [9698431979636267852][1]
) ; [9713526075262053314][1]
expected = (SetLink
  (ImplicationLink (stv 0.400000 0.600000)
    (AndLink (stv 0.000200 0.600000)
      (PredicateNode "P2" (stv 0.010000 0.700000)) ; [1258862597075794181][1]
      (PredicateNode "P1" (stv 0.020000 0.600000)) ; [6016309567546459597][1]
    ) ; [11393286966502986236][1]
    (PredicateNode "Q" (stv 0.050000 0.800000)) ; [1103054420470118233][1]
  ) ; [9698431979636267852][1]
) ; [9713526075262053314][1]
.[DEBUG] BEGIN TEST: test_implication_direct_evaluation
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/implication-direct-evaluation.scm":
(EvaluationLink (stv 1 1)
   (PredicateNode "Q")
   (ConceptNode "E")
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/wip/implication-direct-evaluation.scm":
(DefineLink
   (DefinedSchemaNode "implication-direct-evaluation-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$P")
            (TypeNode "PredicateNode")
         )
         (TypedVariableLink
            (VariableNode "$Q")
            (TypeNode "PredicateNode")
         )
         (TypedVariableLink
            (VariableNode "$X")
            (TypeNode "ConceptNode")
         )
      )
      (AndLink
         (EvaluationLink
            (VariableNode "$P")
            (VariableNode "$X")
         )
         (NotLink
            (EqualLink
               (VariableNode "$P")
               (VariableNode "$Q")
            )
         )
         (EvaluationLink
            (VariableNode "$Q")
            (VariableNode "$X")
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: implication-direct-evaluation-formula")
         (ListLink
            (VariableNode "$P")
            (VariableNode "$Q")
         )
      )
   )
)


results = (SetLink
  (ImplicationLink (stv 0.666667 0.003750)
    (PredicateNode "P") ; [2213889286841575705][1]
    (PredicateNode "Q") ; [1103054420470118233][1]
  ) ; [11149585767017321993][1]
  (ImplicationLink (stv 0.500000 0.005000)
    (PredicateNode "Q") ; [1103054420470118233][1]
    (PredicateNode "P") ; [2213889286841575705][1]
  ) ; [12496358190549786121][1]
) ; [11995912183581299816][1]
expected = (SetLink
  (ImplicationLink (stv 0.666667 0.003750)
    (PredicateNode "P") ; [2213889286841575705][1]
    (PredicateNode "Q") ; [1103054420470118233][1]
  ) ; [11149585767017321993][1]
  (ImplicationLink (stv 0.500000 0.005000)
    (PredicateNode "Q") ; [1103054420470118233][1]
    (PredicateNode "P") ; [2213889286841575705][1]
  ) ; [12496358190549786121][1]
) ; [11995912183581299816][1]
.[DEBUG] BEGIN TEST: test_conditional_full_instantiation_meta_rule
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-implication-scope.scm":
(ImplicationScopeLink (stv 1 1)
   (TypedVariableLink
      (VariableNode "$X")
      (TypeNode "ConceptNode")
   )
   (EvaluationLink
      (PredicateNode "P")
      (VariableNode "$X")
   )
   (EvaluationLink
      (PredicateNode "Q")
      (VariableNode "$X")
   )
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/meta-rules/predicate/conditional-full-instantiation.scm":
(DefineLink
   (DefinedSchemaNode "conditional-full-instantiation-inheritance-meta-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$A")
            (TypeNode "ConceptNode")
         )
         (TypedVariableLink
            (VariableNode "$B")
            (TypeNode "ConceptNode")
         )
      )
      (AndLink
         (EvaluationLink
            (GroundedPredicateNode "scm: gt-zero-confidence")
            (InheritanceLink
               (VariableNode "$A")
               (VariableNode "$B")
            )
         )
         (InheritanceLink
            (VariableNode "$A")
            (VariableNode "$B")
         )
      )
      (QuoteLink
         (BindLink
            (VariableNode "$X")
            (AndLink
               (EvaluationLink
                  (GroundedPredicateNode "scm: gt-zero-confidence")
                  (MemberLink
                     (VariableNode "$X")
                     (UnquoteLink
                        (VariableNode "$A")
                     )
                  )
               )
               (MemberLink
                  (VariableNode "$X")
                  (UnquoteLink
                     (VariableNode "$A")
                  )
               )
            )
            (ExecutionOutputLink
               (GroundedSchemaNode "scm: conditional-full-instantiation-formula")
               (ListLink
                  (MemberLink
                     (VariableNode "$X")
                     (UnquoteLink
                        (VariableNode "$B")
                     )
                  )
                  (MemberLink
                     (VariableNode "$X")
                     (UnquoteLink
                        (VariableNode "$A")
                     )
                  )
                  (InheritanceLink
                     (UnquoteLink
                        (VariableNode "$A")
                     )
                     (UnquoteLink
                        (VariableNode "$B")
                     )
                  )
               )
            )
         )
      )
   )
)


results = (SetLink
  (BindLink
    (TypedVariableLink
      (VariableNode "$X") ; [6809953386495729144][1]
      (TypeNode "ConceptNode") ; [3788696113922021255][1]
    ) ; [9225281168777978483][1]
    (AndLink
      (EvaluationLink
        (GroundedPredicateNode "scm: gt-zero-confidence") ; [2096565403849494700][1]
        (EvaluationLink
          (PredicateNode "P") ; [2213889286841575705][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17009747857858600672][1]
      ) ; [14114482153628023227][1]
      (EvaluationLink
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [13123684890864222853][1]
    (ExecutionOutputLink
      (GroundedSchemaNode "scm: conditional-full-instantiation-scope-formula") ; [4493803386725613298][1]
      (ListLink
        (EvaluationLink
          (PredicateNode "Q") ; [1103054420470118233][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17245685415019607328][1]
        (EvaluationLink
          (PredicateNode "P") ; [2213889286841575705][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17009747857858600672][1]
        (ImplicationScopeLink (stv 1.000000 1.000000)
          (TypedVariableLink
            (VariableNode "$X") ; [6809953386495729144][1]
            (TypeNode "ConceptNode") ; [3788696113922021255][1]
          ) ; [9225281168777978483][1]
          (EvaluationLink
            (PredicateNode "P") ; [2213889286841575705][1]
            (VariableNode "$X") ; [6809953386495729144][1]
          ) ; [17009747857858600672][1]
          (EvaluationLink
            (PredicateNode "Q") ; [1103054420470118233][1]
            (VariableNode "$X") ; [6809953386495729144][1]
          ) ; [17245685415019607328][1]
        ) ; [12169852037103557858][1]
      ) ; [11254723470960336895][1]
    ) ; [14236913734260262379][1]
  ) ; [13200081897146085479][1]
) ; [13215175992771870941][1]
expected = (SetLink
  (BindLink
    (TypedVariableLink
      (VariableNode "$X") ; [6809953386495729144][1]
      (TypeNode "ConceptNode") ; [3788696113922021255][1]
    ) ; [9225281168777978483][1]
    (AndLink
      (EvaluationLink
        (GroundedPredicateNode "scm: gt-zero-confidence") ; [2096565403849494700][1]
        (EvaluationLink
          (PredicateNode "P") ; [2213889286841575705][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17009747857858600672][1]
      ) ; [14114482153628023227][1]
      (EvaluationLink
        (PredicateNode "P") ; [2213889286841575705][1]
        (VariableNode "$X") ; [6809953386495729144][1]
      ) ; [17009747857858600672][1]
    ) ; [13123684890864222853][1]
    (ExecutionOutputLink
      (GroundedSchemaNode "scm: conditional-full-instantiation-scope-formula") ; [4493803386725613298][1]
      (ListLink
        (EvaluationLink
          (PredicateNode "Q") ; [1103054420470118233][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17245685415019607328][1]
        (EvaluationLink
          (PredicateNode "P") ; [2213889286841575705][1]
          (VariableNode "$X") ; [6809953386495729144][1]
        ) ; [17009747857858600672][1]
        (ImplicationScopeLink (stv 1.000000 1.000000)
          (TypedVariableLink
            (VariableNode "$X") ; [6809953386495729144][1]
            (TypeNode "ConceptNode") ; [3788696113922021255][1]
          ) ; [9225281168777978483][1]
          (EvaluationLink
            (PredicateNode "P") ; [2213889286841575705][1]
            (VariableNode "$X") ; [6809953386495729144][1]
          ) ; [17009747857858600672][1]
          (EvaluationLink
            (PredicateNode "Q") ; [1103054420470118233][1]
            (VariableNode "$X") ; [6809953386495729144][1]
          ) ; [17245685415019607328][1]
        ) ; [12169852037103557858][1]
      ) ; [11254723470960336895][1]
    ) ; [14236913734260262379][1]
  ) ; [13200081897146085479][1]
) ; [13215175992771870941][1]
.[DEBUG] BEGIN TEST: test_consequent_disjunction_elimination
[DEBUG] [PLNRulesUTest] Loaded "tests/pln/rules/simple-consequent-disjunction-elimination.scm":
(ImplicationLink (stv 0.2 0.6)
   (PredicateNode "P" (stv 0.02 0.6))
   (PredicateNode "Q2" (stv 0.05 0.8))
)


[DEBUG] [PLNRulesUTest] Loaded "opencog/pln/rules/propositional/consequent-disjunction-elimination.scm":
(DefineLink
   (DefinedSchemaNode "consequent-disjunction-elimination-implication-rule")
   (BindLink
      (VariableList
         (TypedVariableLink
            (VariableNode "$A")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
               (TypeNode "AndLink")
               (TypeNode "OrLink")
               (TypeNode "NotLink")
            )
         )
         (TypedVariableLink
            (VariableNode "$B")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
               (TypeNode "AndLink")
               (TypeNode "OrLink")
               (TypeNode "NotLink")
            )
         )
         (TypedVariableLink
            (VariableNode "$C")
            (TypeChoice
               (TypeNode "PredicateNode")
               (TypeNode "LambdaLink")
               (TypeNode "AndLink")
               (TypeNode "OrLink")
               (TypeNode "NotLink")
            )
         )
      )
      (ImplicationLink
         (VariableNode "$A")
         (OrLink
            (VariableNode "$C")
            (VariableNode "$B")
         )
      )
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: consequent-disjunction-elimination-formula")
         (ListLink
            (ImplicationLink
               (VariableNode "$A")
               (VariableNode "$B")
            )
            (ImplicationLink
               (VariableNode "$A")
               (OrLink
                  (VariableNode "$C")
                  (VariableNode "$B")
               )
            )
            (ImplicationLink
               (VariableNode "$A")
               (VariableNode "$C")
            )
         )
      )
   )
)


results = (SetLink
  (ImplicationLink (stv 0.125000 0.540000)
    (PredicateNode "P" (stv 0.020000 0.600000)) ; [2213889286841575705][1]
    (PredicateNode "Q1" (stv 0.010000 0.700000)) ; [2480207013189331713][1]
  ) ; [12526738359736535473][1]
) ; [12541832455362320935][1]
expected = (SetLink
  (ImplicationLink (stv 0.125000 0.540000)
    (PredicateNode "P" (stv 0.020000 0.600000)) ; [2213889286841575705][1]
    (PredicateNode "Q1" (stv 0.010000 0.700000)) ; [2480207013189331713][1]
  ) ; [12526738359736535473][1]
) ; [12541832455362320935][1]
.
Failed 1 and Skipped 0 of 21 tests
Success rate: 95%
Obsolete! Do not use cog-bind, use cog-execute! insead.
/home/opencog/opencog/opencog/pln/rules/wip/formulas.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/formulas.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/implication-direct-evaluation.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/implication-direct-evaluation.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/wip/implication-direct-evaluation.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/wip/implication-direct-evaluation.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-implication-scope.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-implication-scope.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/meta-rules/predicate/conditional-full-instantiation.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/meta-rules/predicate/conditional-full-instantiation.scm.go
;;; compiling /home/opencog/opencog/tests/pln/rules/simple-consequent-disjunction-elimination.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/tests/pln/rules/simple-consequent-disjunction-elimination.scm.go
;;; compiling /home/opencog/opencog/opencog/pln/rules/propositional/consequent-disjunction-elimination.scm
;;; compiled /home/jenkins/.cache/guile/ccache/2.2-LE-8-3.A/home/opencog/opencog/opencog/pln/rules/propositional/consequent-disjunction-elimination.scm.go

      Start 10: OpenPsiRulesUTest
10/18 Test #10: OpenPsiRulesUTest ................   Passed    1.60 sec
      Start 11: OpenPsiImplicatorUTest
11/18 Test #11: OpenPsiImplicatorUTest ...........   Passed    0.39 sec
      Start 12: OpenPsiSCMUTest
12/18 Test #12: OpenPsiSCMUTest ..................***Failed    0.90 sec
Running cxxtest tests (7 tests)[2018-05-12 06:58:40:794] [INFO] BEGIN TEST: test_psi_get_action
.[2018-05-12 06:58:40:795] [INFO] END TEST: test_psi_get_action
[2018-05-12 06:58:40:795] [INFO] BEGIN TEST: test_psi_get_context
.[2018-05-12 06:58:40:795] [INFO] END TEST: test_psi_get_context
[2018-05-12 06:58:40:795] [INFO] BEGIN TEST: test_psi_get_goal
.[2018-05-12 06:58:40:795] [INFO] END TEST: test_psi_get_goal
[2018-05-12 06:58:40:795] [INFO] BEGIN TEST: test_psi_satisfiable__predicate
.[2018-05-12 06:58:40:795] [INFO] END TEST: test_psi_satisfiable__predicate
[2018-05-12 06:58:40:795] [INFO] BEGIN TEST: test_psi_select_rules
.[2018-05-12 06:58:40:796] [INFO] END TEST: test_psi_select_rules
[2018-05-12 06:58:40:796] [INFO] BEGIN TEST: test_psi_step_1
[2018-05-12 06:58:40:797] [ERROR] Not executable: PlusLink
 (/home/opencog/atomspace/opencog/atoms/core/FunctionLink.cc:56)
	Stack Trace:
	2: Logger.cc:491	  opencog::Logger::logva(opencog::Logger::Level, char const*, __va_list_tag*)
	3: Logger.cc:503	  opencog::Logger::Error::operator()(char const*, ...)
	4: exceptions.cc:55	  opencog::StandardException::parse_error_message(char const*, __va_list_tag*, bool)
	5: exceptions.cc:82	  opencog::StandardException::parse_error_message(char const*, char const*, __va_list_tag*, bool)
	6: exceptions.cc:150	  opencog::RuntimeException::RuntimeException(char const*, char const*, ...)
	7: FunctionLink.cc:57	  opencog::FunctionLink::execute() const
	8: shared_ptr_base.h:658	  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
	9: Instantiator.cc:545	  opencog::Instantiator::instantiate(opencog::Handle const&, std::map<opencog::Handle, opencog::Handle, std::less<opencog::Handle>, std::allocator<std::pair<opencog::Handle const, opencog::Handle> > > const&, bool)
	10: Instantiator.h:146	  opencog::Instantiator::execute(opencog::Handle const&, bool)
	11: shared_ptr_base.h:687	  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&)
	12: DefaultPatternMatchCB.cc:825	  opencog::DefaultPatternMatchCB::eval_sentence(opencog::Handle const&, std::map<opencog::Handle, opencog::Handle, std::less<opencog::Handle>, std::allocator<std::pair<opencog::Handle const, opencog::Handle> > > const&)
	13: PatternMatchEngine.cc:2091	  opencog::PatternMatchEngine::explore_clause(opencog::Handle const&, opencog::Handle const&, opencog::Handle const&)
	14: PatternMatchEngine.cc:1646	  opencog::PatternMatchEngine::do_next_clause()
	15: PatternMatchEngine.cc:1503	  opencog::PatternMatchEngine::do_term_up(std::shared_ptr<opencog::PatternTerm> const&, opencog::Handle const&, opencog::Handle const&)
	16: PatternMatchEngine.cc:1383	  opencog::PatternMatchEngine::explore_single_branch(std::shared_ptr<opencog::PatternTerm> const&, opencog::Handle const&, opencog::Handle const&)
	17: PatternMatchEngine.cc:1313	  opencog::PatternMatchEngine::explore_choice_branches(std::shared_ptr<opencog::PatternTerm> const&, opencog::Handle const&, opencog::Handle const&)
	18: PatternMatchEngine.cc:1284	  opencog::PatternMatchEngine::explore_link_branches(std::shared_ptr<opencog::PatternTerm> const&, opencog::Handle const&, opencog::Handle const&)
	19: PatternMatchEngine.cc:1164	  opencog::PatternMatchEngine::explore_term_branches(opencog::Handle const&, opencog::Handle const&, opencog::Handle const&)
	20: PatternMatchEngine.cc:2071	  opencog::PatternMatchEngine::explore_clause(opencog::Handle const&, opencog::Handle const&, opencog::Handle const&)
	21: InitiateSearchCB.cc:402	  opencog::InitiateSearchCB::neighbor_search(opencog::PatternMatchEngine*)
	22: InitiateSearchCB.cc:507	  opencog::InitiateSearchCB::initiate_search(opencog::PatternMatchEngine*)
	23: PatternMatch.cc:358	  opencog::PatternLink::satisfy(opencog::PatternMatchCallback&) const
	24: stl_map.h:846	  std::map<opencog::Handle, std::map<opencog::Handle, opencog::Handle, std::less<opencog::Handle>, std::allocator<std::pair<opencog::Handle const, opencog::Handle> > >, std::less<opencog::Handle>, std::allocator<std::pair<opencog::Handle const, std::map<opencog::Handle, opencog::Handle, std::less<opencog::Handle>, std::allocator<std::pair<opencog::Handle const, opencog::Handle> > > > > >::find(opencog::Handle const&)
	25: OpenPsiSCM.cc:146	  opencog::OpenPsiSCM::is_satisfiable(opencog::Handle const&)
	26: shared_ptr_base.h:658	  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
	27: SchemePrimitive.cc:162	  opencog::PrimitiveEnviron::do_call(scm_unused_struct*, scm_unused_struct*)
	28: vm-engine.c:787	vm_regular_engine()
	29: vm.c:1258	scm_call_n()
	30: eval.c:488	scm_call_1()
	31: list.c:969	scm_filter()
	32: vm-engine.c:787	vm_regular_engine()
	33: vm.c:1258	scm_call_n()
	34: eval.c:664	scm_primitive_eval()
	35: eval.c:696	scm_eval()
	36: vm-engine.c:787	vm_regular_engine()
	37: vm.c:1258	scm_call_n()
	38: throw.c:139	catch()
	39: SchemeEval.cc:790	  opencog::SchemeEval::do_scm_eval(scm_unused_struct*, scm_unused_struct* (*)(void*))
	40: SchemeEval.cc:1029	  opencog::SchemeEval::do_apply_scm(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, opencog::Handle const&)
	41: SchemeEval.cc:1080	  opencog::SchemeEval::c_wrap_apply_v(void*)
	42: continuations.c:422	c_body()
	43: vm-engine.c:787	vm_regular_engine()
	44: vm.c:1258	scm_call_n()
	45: throw.c:139	catch()
	46: continuations.c:367	scm_i_with_continuation_barrier()
	47: continuations.c:461	scm_c_with_continuation_barrier()
	48: [0x1bc62] ??() ??:0
	49: threads.c:711	scm_with_guile()

[2018-05-12 06:58:41:054] [ERROR] Backtrace:
          15 (apply-smob/1 #<catch-closure 1510a20>)
          14 (apply-smob/1 #<catch-closure 1510920>)
In ice-9/boot-9.scm:
   2312:4 13 (save-module-excursion #<procedure 150cc40 at ice-9/eva…>)
In ice-9/eval-string.scm:
     38:6 12 (read-and-eval #<input: string 13b2bd0> #:lang _)
In /home/opencog/opencog/tests/openpsi/rules.scm:
    275:4 11 (do_psi_step)
In opencog/openpsi/main.scm:
   181:21 10 (psi-step (ConceptNode "component-3")
)
In opencog/openpsi/action-selector.scm:
   142:20  9 (psi-select-rules _)
In unknown file:
           8 (opencog-extension cog-execute! (#))
           7 (apply-smob/1 #<catch-closure 1510620>)
           6 (apply-smob/1 #<catch-closure 15105a0>)
In opencog/openpsi/rule.scm:
    258:7  5 (psi-get-satisfiable-rules _)
In unknown file:
           4 (filter #<procedure is-satisfiable? (rule)> (#))
In opencog/openpsi/rule.scm:
   248:20  3 (is-satisfiable? #)
In unknown file:
           2 (opencog-extension psi-satisfiable? (#))
In ice-9/boot-9.scm:
   751:25  1 (dispatch-exception 0 C++-EXCEPTION ("psi-satisfiabl…" …))
In unknown file:
           0 (apply-smob/1 #<catch-closure 1510560> C++-EXCEPTION "…" …)

ERROR: In procedure apply-smob/1:
In procedure psi-satisfiable?: Not executable: PlusLink
 (/home/opencog/atomspace/opencog/atoms/core/FunctionLink.cc:56)
Function args:
((ImplicationLink (stv 1 1)
   (AndLink
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: act-3")
         (ListLink
            (VariableNode "$abc")
         )
      )
      (EqualLink
         (NumberNode "5.000000")
         (PlusLink
            (VariableNode "x")
            (VariableNode "y")
         )
      )
      (ListLink
         (ConceptNode "For PlusLink")
         (VariableNode "x")
         (VariableNode "y")
      )
   )
   (ConceptNode "goal-3")
)
)
ABORT: C++-EXCEPTION
 (/home/opencog/atomspace/opencog/guile/SchemeEval.cc:1068)
	Stack Trace:
	2: Logger.cc:491	  opencog::Logger::logva(opencog::Logger::Level, char const*, __va_list_tag*)
	3: Logger.cc:503	  opencog::Logger::Error::operator()(char const*, ...)
	4: exceptions.cc:55	  opencog::StandardException::parse_error_message(char const*, __va_list_tag*, bool)
	5: exceptions.cc:82	  opencog::StandardException::parse_error_message(char const*, char const*, __va_list_tag*, bool)
	6: exceptions.cc:150	  opencog::RuntimeException::RuntimeException(char const*, char const*, ...)
	7: SchemeEval.cc:1068	  opencog::SchemeEval::apply_v(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, opencog::Handle)
	8: SchemeEval.h:183	  opencog::SchemeEval::apply(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, opencog::Handle)
	9: ExecutionOutputLink.cc:113	  opencog::ExecutionOutputLink::execute(opencog::AtomSpace*, bool) const
	10: shared_ptr_base.h:658	  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
	11: Instantiator.cc:545	  opencog::Instantiator::instantiate(opencog::Handle const&, std::map<opencog::Handle, opencog::Handle, std::less<opencog::Handle>, std::allocator<std::pair<opencog::Handle const, opencog::Handle> > > const&, bool)
	12: stl_tree.h:858	  std::_Rb_tree<opencog::Handle, std::pair<opencog::Handle const, opencog::Handle>, std::_Select1st<std::pair<opencog::Handle const, opencog::Handle> >, std::less<opencog::Handle>, std::allocator<std::pair<opencog::Handle const, opencog::Handle> > >::~_Rb_tree()
	13: SchemeModule.cc:41	  opencog::FunctionWrap::as_wrapper_h_h(opencog::Handle)
	14: shared_ptr_base.h:658	  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
	15: SchemePrimitive.cc:162	  opencog::PrimitiveEnviron::do_call(scm_unused_struct*, scm_unused_struct*)
	16: vm-engine.c:787	vm_regular_engine()
	17: vm.c:1258	scm_call_n()
	18: eval.c:502	scm_call_3()
	19: vm-engine.c:787	vm_regular_engine()
	20: vm.c:1258	scm_call_n()
	21: throw.c:139	catch()
	22: SchemeEval.cc:590	  opencog::SchemeEval::do_eval(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	23: SchemeEval.cc:509	  opencog::SchemeEval::c_wrap_eval(void*)
	24: continuations.c:422	c_body()
	25: vm-engine.c:787	vm_regular_engine()
	26: vm.c:1258	scm_call_n()
	27: throw.c:139	catch()
	28: continuations.c:367	scm_i_with_continuation_barrier()
	29: continuations.c:461	scm_c_with_continuation_barrier()
	30: [0x21c97] ??() ??:0
	31: threads.c:690	with_guile()
	32: [0x1bc62] ??() ??:0
	33: threads.c:711	scm_with_guile()
	34: SchemeEval.cc:480	  opencog::SchemeEval::eval_expr(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	35: SchemeEval.h:161	  opencog::SchemeEval::eval(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	36: OpenPsiSCMUTest.cxxtest:215	  OpenPsiSCMUTest::test_psi_step_1()
	37: RealDescriptions.cpp:125	  CxxTest::RealTestDescription::run()
	38: TestRunner.h:104	  CxxTest::TestRunner::runTest(CxxTest::TestDescription&)
	39: OpenPsiSCMUTest.cpp:20	main()
	40: [0x20830] ??() ??:0
	41: [0x40bce9] ??() ??:0


In OpenPsiSCMUTest::test_psi_step_1:
/home/opencog/opencog/build/tests/openpsi/../../../tests/openpsi/OpenPsiSCMUTest.cxxtest:216: Error: Test failed: Caught scm error during eval
/home/opencog/opencog/build/tests/openpsi/../../../tests/openpsi/OpenPsiSCMUTest.cxxtest:216: Error: Assertion failed: (false == _scm->eval_error())
/home/opencog/opencog/build/tests/openpsi/../../../tests/openpsi/OpenPsiSCMUTest.cxxtest:221: Error: Expected ("#t\n" == result_2_1), found (#t
 != "#f\n")
[2018-05-12 06:58:41:161] [ERROR] Not executable: PlusLink
 (/home/opencog/atomspace/opencog/atoms/core/FunctionLink.cc:56)
	Stack Trace:
	2: Logger.cc:491	  opencog::Logger::logva(opencog::Logger::Level, char const*, __va_list_tag*)
	3: Logger.cc:503	  opencog::Logger::Error::operator()(char const*, ...)
	4: exceptions.cc:55	  opencog::StandardException::parse_error_message(char const*, __va_list_tag*, bool)
	5: exceptions.cc:82	  opencog::StandardException::parse_error_message(char const*, char const*, __va_list_tag*, bool)
	6: exceptions.cc:150	  opencog::RuntimeException::RuntimeException(char const*, char const*, ...)
	7: FunctionLink.cc:57	  opencog::FunctionLink::execute() const
	8: shared_ptr_base.h:658	  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
	9: Instantiator.cc:545	  opencog::Instantiator::instantiate(opencog::Handle const&, std::map<opencog::Handle, opencog::Handle, std::less<opencog::Handle>, std::allocator<std::pair<opencog::Handle const, opencog::Handle> > > const&, bool)
	10: Instantiator.h:146	  opencog::Instantiator::execute(opencog::Handle const&, bool)
	11: shared_ptr_base.h:687	  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&)
	12: DefaultPatternMatchCB.cc:825	  opencog::DefaultPatternMatchCB::eval_sentence(opencog::Handle const&, std::map<opencog::Handle, opencog::Handle, std::less<opencog::Handle>, std::allocator<std::pair<opencog::Handle const, opencog::Handle> > > const&)
	13: PatternMatchEngine.cc:2091	  opencog::PatternMatchEngine::explore_clause(opencog::Handle const&, opencog::Handle const&, opencog::Handle const&)
	14: PatternMatchEngine.cc:1646	  opencog::PatternMatchEngine::do_next_clause()
	15: PatternMatchEngine.cc:1503	  opencog::PatternMatchEngine::do_term_up(std::shared_ptr<opencog::PatternTerm> const&, opencog::Handle const&, opencog::Handle const&)
	16: PatternMatchEngine.cc:1383	  opencog::PatternMatchEngine::explore_single_branch(std::shared_ptr<opencog::PatternTerm> const&, opencog::Handle const&, opencog::Handle const&)
	17: PatternMatchEngine.cc:1313	  opencog::PatternMatchEngine::explore_choice_branches(std::shared_ptr<opencog::PatternTerm> const&, opencog::Handle const&, opencog::Handle const&)
	18: PatternMatchEngine.cc:1284	  opencog::PatternMatchEngine::explore_link_branches(std::shared_ptr<opencog::PatternTerm> const&, opencog::Handle const&, opencog::Handle const&)
	19: PatternMatchEngine.cc:1164	  opencog::PatternMatchEngine::explore_term_branches(opencog::Handle const&, opencog::Handle const&, opencog::Handle const&)
	20: PatternMatchEngine.cc:2071	  opencog::PatternMatchEngine::explore_clause(opencog::Handle const&, opencog::Handle const&, opencog::Handle const&)
	21: InitiateSearchCB.cc:402	  opencog::InitiateSearchCB::neighbor_search(opencog::PatternMatchEngine*)
	22: InitiateSearchCB.cc:507	  opencog::InitiateSearchCB::initiate_search(opencog::PatternMatchEngine*)
	23: PatternMatch.cc:358	  opencog::PatternLink::satisfy(opencog::PatternMatchCallback&) const
	24: stl_map.h:846	  std::map<opencog::Handle, std::map<opencog::Handle, opencog::Handle, std::less<opencog::Handle>, std::allocator<std::pair<opencog::Handle const, opencog::Handle> > >, std::less<opencog::Handle>, std::allocator<std::pair<opencog::Handle const, std::map<opencog::Handle, opencog::Handle, std::less<opencog::Handle>, std::allocator<std::pair<opencog::Handle const, opencog::Handle> > > > > >::find(opencog::Handle const&)
	25: OpenPsiSCM.cc:146	  opencog::OpenPsiSCM::is_satisfiable(opencog::Handle const&)
	26: shared_ptr_base.h:658	  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
	27: SchemePrimitive.cc:162	  opencog::PrimitiveEnviron::do_call(scm_unused_struct*, scm_unused_struct*)
	28: vm-engine.c:787	vm_regular_engine()
	29: vm.c:1258	scm_call_n()
	30: eval.c:488	scm_call_1()
	31: list.c:969	scm_filter()
	32: vm-engine.c:787	vm_regular_engine()
	33: vm.c:1258	scm_call_n()
	34: eval.c:664	scm_primitive_eval()
	35: eval.c:696	scm_eval()
	36: vm-engine.c:787	vm_regular_engine()
	37: vm.c:1258	scm_call_n()
	38: throw.c:139	catch()
	39: SchemeEval.cc:790	  opencog::SchemeEval::do_scm_eval(scm_unused_struct*, scm_unused_struct* (*)(void*))
	40: SchemeEval.cc:1029	  opencog::SchemeEval::do_apply_scm(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, opencog::Handle const&)
	41: SchemeEval.cc:1080	  opencog::SchemeEval::c_wrap_apply_v(void*)
	42: continuations.c:422	c_body()
	43: vm-engine.c:787	vm_regular_engine()
	44: vm.c:1258	scm_call_n()
	45: throw.c:139	catch()
	46: continuations.c:367	scm_i_with_continuation_barrier()
	47: continuations.c:461	scm_c_with_continuation_barrier()
	48: [0x1bc62] ??() ??:0
	49: threads.c:711	scm_with_guile()

[2018-05-12 06:58:41:370] [ERROR] Backtrace:
          15 (apply-smob/1 #<catch-closure 13ef260>)
          14 (apply-smob/1 #<catch-closure 13ef0a0>)
In ice-9/boot-9.scm:
   2312:4 13 (save-module-excursion #<procedure 13d2740 at ice-9/eva…>)
In ice-9/eval-string.scm:
     38:6 12 (read-and-eval #<input: string 15bdaf0> #:lang _)
In /home/opencog/opencog/tests/openpsi/rules.scm:
    275:4 11 (do_psi_step)
In opencog/openpsi/main.scm:
   181:21 10 (psi-step (ConceptNode "component-3")
)
In opencog/openpsi/action-selector.scm:
   142:20  9 (psi-select-rules _)
In unknown file:
           8 (opencog-extension cog-execute! (#))
           7 (apply-smob/1 #<catch-closure 13f08e0>)
           6 (apply-smob/1 #<catch-closure 13f0840>)
In opencog/openpsi/rule.scm:
    258:7  5 (psi-get-satisfiable-rules _)
In unknown file:
           4 (filter #<procedure is-satisfiable? (rule)> (#))
In opencog/openpsi/rule.scm:
   248:20  3 (is-satisfiable? #)
In unknown file:
           2 (opencog-extension psi-satisfiable? (#))
In ice-9/boot-9.scm:
   751:25  1 (dispatch-exception 0 C++-EXCEPTION ("psi-satisfiabl…" …))
In unknown file:
           0 (apply-smob/1 #<catch-closure 13f0800> C++-EXCEPTION "…" …)

ERROR: In procedure apply-smob/1:
In procedure psi-satisfiable?: Not executable: PlusLink
 (/home/opencog/atomspace/opencog/atoms/core/FunctionLink.cc:56)
Function args:
((ImplicationLink (stv 1 1)
   (AndLink
      (ExecutionOutputLink
         (GroundedSchemaNode "scm: act-3")
         (ListLink
            (VariableNode "$abc")
         )
      )
      (EqualLink
         (NumberNode "5.000000")
         (PlusLink
            (VariableNode "x")
            (VariableNode "y")
         )
      )
      (ListLink
         (ConceptNode "For PlusLink")
         (VariableNode "x")
         (VariableNode "y")
      )
   )
   (ConceptNode "goal-3")
)
)
ABORT: C++-EXCEPTION
 (/home/opencog/atomspace/opencog/guile/SchemeEval.cc:1068)
	Stack Trace:
	2: Logger.cc:491	  opencog::Logger::logva(opencog::Logger::Level, char const*, __va_list_tag*)
	3: Logger.cc:503	  opencog::Logger::Error::operator()(char const*, ...)
	4: exceptions.cc:55	  opencog::StandardException::parse_error_message(char const*, __va_list_tag*, bool)
	5: exceptions.cc:82	  opencog::StandardException::parse_error_message(char const*, char const*, __va_list_tag*, bool)
	6: exceptions.cc:150	  opencog::RuntimeException::RuntimeException(char const*, char const*, ...)
	7: SchemeEval.cc:1068	  opencog::SchemeEval::apply_v(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, opencog::Handle)
	8: SchemeEval.h:183	  opencog::SchemeEval::apply(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, opencog::Handle)
	9: ExecutionOutputLink.cc:113	  opencog::ExecutionOutputLink::execute(opencog::AtomSpace*, bool) const
	10: shared_ptr_base.h:658	  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
	11: Instantiator.cc:545	  opencog::Instantiator::instantiate(opencog::Handle const&, std::map<opencog::Handle, opencog::Handle, std::less<opencog::Handle>, std::allocator<std::pair<opencog::Handle const, opencog::Handle> > > const&, bool)
	12: stl_tree.h:858	  std::_Rb_tree<opencog::Handle, std::pair<opencog::Handle const, opencog::Handle>, std::_Select1st<std::pair<opencog::Handle const, opencog::Handle> >, std::less<opencog::Handle>, std::allocator<std::pair<opencog::Handle const, opencog::Handle> > >::~_Rb_tree()
	13: SchemeModule.cc:41	  opencog::FunctionWrap::as_wrapper_h_h(opencog::Handle)
	14: shared_ptr_base.h:658	  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
	15: SchemePrimitive.cc:162	  opencog::PrimitiveEnviron::do_call(scm_unused_struct*, scm_unused_struct*)
	16: vm-engine.c:787	vm_regular_engine()
	17: vm.c:1258	scm_call_n()
	18: eval.c:502	scm_call_3()
	19: vm-engine.c:787	vm_regular_engine()
	20: vm.c:1258	scm_call_n()
	21: throw.c:139	catch()
	22: SchemeEval.cc:590	  opencog::SchemeEval::do_eval(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	23: SchemeEval.cc:509	  opencog::SchemeEval::c_wrap_eval(void*)
	24: continuations.c:422	c_body()
	25: vm-engine.c:787	vm_regular_engine()
	26: vm.c:1258	scm_call_n()
	27: throw.c:139	catch()
	28: continuations.c:367	scm_i_with_continuation_barrier()
	29: continuations.c:461	scm_c_with_continuation_barrier()
	30: [0x21c97] ??() ??:0
	31: threads.c:690	with_guile()
	32: [0x1bc62] ??() ??:0
	33: threads.c:711	scm_with_guile()
	34: SchemeEval.cc:480	  opencog::SchemeEval::eval_expr(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	35: SchemeEval.h:161	  opencog::SchemeEval::eval(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
	36: OpenPsiSCMUTest.cxxtest:232	  OpenPsiSCMUTest::test_psi_step_1()
	37: RealDescriptions.cpp:125	  CxxTest::RealTestDescription::run()
	38: TestRunner.h:104	  CxxTest::TestRunner::runTest(CxxTest::TestDescription&)
	39: OpenPsiSCMUTest.cpp:20	main()
	40: [0x20830] ??() ??:0
	41: [0x40bce9] ??() ??:0

/home/opencog/opencog/build/tests/openpsi/../../../tests/openpsi/OpenPsiSCMUTest.cxxtest:233: Error: Test failed: Caught scm error during eval
/home/opencog/opencog/build/tests/openpsi/../../../tests/openpsi/OpenPsiSCMUTest.cxxtest:233: Error: Assertion failed: (false == _scm->eval_error())
/home/opencog/opencog/build/tests/openpsi/../../../tests/openpsi/OpenPsiSCMUTest.cxxtest:239: Error: Expected ("#t\n" == result_3_1), found (#t
 != "#f\n")
/home/opencog/opencog/build/tests/openpsi/../../../tests/openpsi/OpenPsiSCMUTest.cxxtest:244: Error: Expected ("#t\n" == result_3_2), found (#t
 != "#f\n")
[2018-05-12 06:58:41:492] [INFO] END TEST: test_psi_step_1
[2018-05-12 06:58:41:492] [INFO] BEGIN TEST: test_psi_goal_functions
.
Failed 1 and Skipped 0 of 7 tests
Success rate: 85%
[2018-05-12 06:58:41:493] [INFO] END TEST: test_psi_goal_functions

      Start 13: DimEmbedUTest
13/18 Test #13: DimEmbedUTest ....................   Passed    0.21 sec
      Start 14: StatisticsUTest
14/18 Test #14: StatisticsUTest ..................   Passed    0.00 sec
      Start 15: PatternMinerUTest
15/18 Test #15: PatternMinerUTest ................   Passed    0.19 sec
      Start 16: PatternIndexAPIUTest
16/18 Test #16: PatternIndexAPIUTest .............   Passed    0.44 sec
      Start 17: MinerUTest
17/18 Test #17: MinerUTest .......................   Passed    2.94 sec
      Start 18: UREMinerUTest
18/18 Test #18: UREMinerUTest ....................   Passed    5.65 sec

72% tests passed, 5 tests failed out of 18

Total Test time (real) = 144.41 sec

The following tests FAILED:
	  3 - CogServerUTest (SEGFAULT)
	  6 - AtomOcTreeUTest (SEGFAULT)
	  7 - TimeSpaceAtomUTest (SEGFAULT)
	  9 - PLNRulesUTest (Failed)
	 12 - OpenPsiSCMUTest (Failed)
Errors while running CTest
CMakeFiles/test.dir/build.make:57: recipe for target 'CMakeFiles/test' failed
CMakeFiles/Makefile2:99: recipe for target 'CMakeFiles/test.dir/all' failed
make[3]: *** [CMakeFiles/test] Error 8
make[2]: *** [CMakeFiles/test.dir/all] Error 2
make[1]: *** [CMakeFiles/test.dir/rule] Error 2
CMakeFiles/Makefile2:106: recipe for target 'CMakeFiles/test.dir/rule' failed
make: *** [test] Error 2
Makefile:197: recipe for target 'test' failed
+ DSTATUS=TESTFAIL
+ /var/lib/jenkins/status/updateStatus TESTFAIL /var/lib/jenkins/jobs/OpenCOG_U1604_Opencog/builds/178/log OpenCOG_U1604_Opencog
Already up-to-date.
